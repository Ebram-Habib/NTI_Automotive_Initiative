
AVR_External_Interrupt_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000089c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000089c  00000930  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800068  00800068  00000938  2**0
                  ALLOC
  3 .stab         00000e94  00000000  00000000  00000938  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000c8f  00000000  00000000  000017cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_1>
   8:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__vector_2>
   c:	0c 94 87 01 	jmp	0x30e	; 0x30e <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 36       	cpi	r26, 0x6F	; 111
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <main>
  8a:	0c 94 4c 04 	jmp	0x898	; 0x898 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <EXTI_voidEnable>:
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	00 d0       	rcall	.+0      	; 0x98 <EXTI_voidEnable+0x6>
  98:	00 d0       	rcall	.+0      	; 0x9a <EXTI_voidEnable+0x8>
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	89 83       	std	Y+1, r24	; 0x01
  a0:	6a 83       	std	Y+2, r22	; 0x02
  a2:	ab e5       	ldi	r26, 0x5B	; 91
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	eb e5       	ldi	r30, 0x5B	; 91
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	48 2f       	mov	r20, r24
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <EXTI_voidEnable+0x2c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	2a 95       	dec	r18
  c0:	e2 f7       	brpl	.-8      	; 0xba <EXTI_voidEnable+0x28>
  c2:	84 2b       	or	r24, r20
  c4:	8c 93       	st	X, r24
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	28 2f       	mov	r18, r24
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	3c 83       	std	Y+4, r19	; 0x04
  ce:	2b 83       	std	Y+3, r18	; 0x03
  d0:	8b 81       	ldd	r24, Y+3	; 0x03
  d2:	9c 81       	ldd	r25, Y+4	; 0x04
  d4:	86 30       	cpi	r24, 0x06	; 6
  d6:	91 05       	cpc	r25, r1
  d8:	59 f0       	breq	.+22     	; 0xf0 <EXTI_voidEnable+0x5e>
  da:	2b 81       	ldd	r18, Y+3	; 0x03
  dc:	3c 81       	ldd	r19, Y+4	; 0x04
  de:	27 30       	cpi	r18, 0x07	; 7
  e0:	31 05       	cpc	r19, r1
  e2:	b1 f0       	breq	.+44     	; 0x110 <EXTI_voidEnable+0x7e>
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	9c 81       	ldd	r25, Y+4	; 0x04
  e8:	85 30       	cpi	r24, 0x05	; 5
  ea:	91 05       	cpc	r25, r1
  ec:	41 f1       	breq	.+80     	; 0x13e <EXTI_voidEnable+0xac>
  ee:	49 c0       	rjmp	.+146    	; 0x182 <EXTI_voidEnable+0xf0>
  f0:	a5 e5       	ldi	r26, 0x55	; 85
  f2:	b0 e0       	ldi	r27, 0x00	; 0
  f4:	e5 e5       	ldi	r30, 0x55	; 85
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	8c 7f       	andi	r24, 0xFC	; 252
  fc:	8c 93       	st	X, r24
  fe:	a5 e5       	ldi	r26, 0x55	; 85
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	e5 e5       	ldi	r30, 0x55	; 85
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	90 81       	ld	r25, Z
 108:	8a 81       	ldd	r24, Y+2	; 0x02
 10a:	89 2b       	or	r24, r25
 10c:	8c 93       	st	X, r24
 10e:	39 c0       	rjmp	.+114    	; 0x182 <EXTI_voidEnable+0xf0>
 110:	a5 e5       	ldi	r26, 0x55	; 85
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	e5 e5       	ldi	r30, 0x55	; 85
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	83 7f       	andi	r24, 0xF3	; 243
 11c:	8c 93       	st	X, r24
 11e:	a5 e5       	ldi	r26, 0x55	; 85
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	e5 e5       	ldi	r30, 0x55	; 85
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	28 2f       	mov	r18, r24
 12a:	8a 81       	ldd	r24, Y+2	; 0x02
 12c:	88 2f       	mov	r24, r24
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	82 2b       	or	r24, r18
 13a:	8c 93       	st	X, r24
 13c:	22 c0       	rjmp	.+68     	; 0x182 <EXTI_voidEnable+0xf0>
 13e:	8a 81       	ldd	r24, Y+2	; 0x02
 140:	88 2f       	mov	r24, r24
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 97       	sbiw	r24, 0x02	; 2
 146:	99 23       	and	r25, r25
 148:	e4 f0       	brlt	.+56     	; 0x182 <EXTI_voidEnable+0xf0>
 14a:	a5 e5       	ldi	r26, 0x55	; 85
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e5 e5       	ldi	r30, 0x55	; 85
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	8f 7b       	andi	r24, 0xBF	; 191
 156:	8c 93       	st	X, r24
 158:	a4 e5       	ldi	r26, 0x54	; 84
 15a:	b0 e0       	ldi	r27, 0x00	; 0
 15c:	e4 e5       	ldi	r30, 0x54	; 84
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	28 2f       	mov	r18, r24
 164:	8a 81       	ldd	r24, Y+2	; 0x02
 166:	88 2f       	mov	r24, r24
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 97       	sbiw	r24, 0x02	; 2
 16c:	00 24       	eor	r0, r0
 16e:	96 95       	lsr	r25
 170:	87 95       	ror	r24
 172:	07 94       	ror	r0
 174:	96 95       	lsr	r25
 176:	87 95       	ror	r24
 178:	07 94       	ror	r0
 17a:	98 2f       	mov	r25, r24
 17c:	80 2d       	mov	r24, r0
 17e:	82 2b       	or	r24, r18
 180:	8c 93       	st	X, r24
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <EXTI_voidDisable>:
	}

}

void EXTI_voidDisable(u8 copy_u8IntID)
{
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	0f 92       	push	r0
 196:	cd b7       	in	r28, 0x3d	; 61
 198:	de b7       	in	r29, 0x3e	; 62
 19a:	89 83       	std	Y+1, r24	; 0x01
	GICR &= ~(1<<copy_u8IntID);
 19c:	ab e5       	ldi	r26, 0x5B	; 91
 19e:	b0 e0       	ldi	r27, 0x00	; 0
 1a0:	eb e5       	ldi	r30, 0x5B	; 91
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	48 2f       	mov	r20, r24
 1a8:	89 81       	ldd	r24, Y+1	; 0x01
 1aa:	28 2f       	mov	r18, r24
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	02 2e       	mov	r0, r18
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <EXTI_voidDisable+0x2a>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	0a 94       	dec	r0
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <EXTI_voidDisable+0x26>
 1be:	80 95       	com	r24
 1c0:	84 23       	and	r24, r20
 1c2:	8c 93       	st	X, r24
}
 1c4:	0f 90       	pop	r0
 1c6:	cf 91       	pop	r28
 1c8:	df 91       	pop	r29
 1ca:	08 95       	ret

000001cc <EXTI_voidSetCallBack>:

void EXTI_voidSetCallBack(void(*ptrfn)(void),u8 copy_u8IntID)
{
 1cc:	df 93       	push	r29
 1ce:	cf 93       	push	r28
 1d0:	00 d0       	rcall	.+0      	; 0x1d2 <EXTI_voidSetCallBack+0x6>
 1d2:	00 d0       	rcall	.+0      	; 0x1d4 <EXTI_voidSetCallBack+0x8>
 1d4:	0f 92       	push	r0
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	9a 83       	std	Y+2, r25	; 0x02
 1dc:	89 83       	std	Y+1, r24	; 0x01
 1de:	6b 83       	std	Y+3, r22	; 0x03
	switch (copy_u8IntID)
 1e0:	8b 81       	ldd	r24, Y+3	; 0x03
 1e2:	28 2f       	mov	r18, r24
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	3d 83       	std	Y+5, r19	; 0x05
 1e8:	2c 83       	std	Y+4, r18	; 0x04
 1ea:	8c 81       	ldd	r24, Y+4	; 0x04
 1ec:	9d 81       	ldd	r25, Y+5	; 0x05
 1ee:	86 30       	cpi	r24, 0x06	; 6
 1f0:	91 05       	cpc	r25, r1
 1f2:	59 f0       	breq	.+22     	; 0x20a <EXTI_voidSetCallBack+0x3e>
 1f4:	2c 81       	ldd	r18, Y+4	; 0x04
 1f6:	3d 81       	ldd	r19, Y+5	; 0x05
 1f8:	27 30       	cpi	r18, 0x07	; 7
 1fa:	31 05       	cpc	r19, r1
 1fc:	69 f0       	breq	.+26     	; 0x218 <EXTI_voidSetCallBack+0x4c>
 1fe:	8c 81       	ldd	r24, Y+4	; 0x04
 200:	9d 81       	ldd	r25, Y+5	; 0x05
 202:	85 30       	cpi	r24, 0x05	; 5
 204:	91 05       	cpc	r25, r1
 206:	79 f0       	breq	.+30     	; 0x226 <EXTI_voidSetCallBack+0x5a>
 208:	14 c0       	rjmp	.+40     	; 0x232 <EXTI_voidSetCallBack+0x66>
	{
		case EXTI_INT0_ID:
			ptrCallBack[0] = ptrfn;
 20a:	89 81       	ldd	r24, Y+1	; 0x01
 20c:	9a 81       	ldd	r25, Y+2	; 0x02
 20e:	90 93 69 00 	sts	0x0069, r25
 212:	80 93 68 00 	sts	0x0068, r24
 216:	0d c0       	rjmp	.+26     	; 0x232 <EXTI_voidSetCallBack+0x66>
			break;
		case EXTI_INT1_ID:
					ptrCallBack[1] = ptrfn;
 218:	89 81       	ldd	r24, Y+1	; 0x01
 21a:	9a 81       	ldd	r25, Y+2	; 0x02
 21c:	90 93 6b 00 	sts	0x006B, r25
 220:	80 93 6a 00 	sts	0x006A, r24
 224:	06 c0       	rjmp	.+12     	; 0x232 <EXTI_voidSetCallBack+0x66>
					break;
		case EXTI_INT2_ID:
					ptrCallBack[2] = ptrfn;
 226:	89 81       	ldd	r24, Y+1	; 0x01
 228:	9a 81       	ldd	r25, Y+2	; 0x02
 22a:	90 93 6d 00 	sts	0x006D, r25
 22e:	80 93 6c 00 	sts	0x006C, r24
					break;
	}
}
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	cf 91       	pop	r28
 23e:	df 91       	pop	r29
 240:	08 95       	ret

00000242 <__vector_1>:

ISR(INT0_vect)
{
 242:	1f 92       	push	r1
 244:	0f 92       	push	r0
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	0f 92       	push	r0
 24a:	11 24       	eor	r1, r1
 24c:	2f 93       	push	r18
 24e:	3f 93       	push	r19
 250:	4f 93       	push	r20
 252:	5f 93       	push	r21
 254:	6f 93       	push	r22
 256:	7f 93       	push	r23
 258:	8f 93       	push	r24
 25a:	9f 93       	push	r25
 25c:	af 93       	push	r26
 25e:	bf 93       	push	r27
 260:	ef 93       	push	r30
 262:	ff 93       	push	r31
 264:	df 93       	push	r29
 266:	cf 93       	push	r28
 268:	cd b7       	in	r28, 0x3d	; 61
 26a:	de b7       	in	r29, 0x3e	; 62
	if((*ptrCallBack[0]) != NULL_PTR)
 26c:	80 91 68 00 	lds	r24, 0x0068
 270:	90 91 69 00 	lds	r25, 0x0069
 274:	00 97       	sbiw	r24, 0x00	; 0
 276:	29 f0       	breq	.+10     	; 0x282 <__vector_1+0x40>
	{
		(*ptrCallBack[0])();
 278:	e0 91 68 00 	lds	r30, 0x0068
 27c:	f0 91 69 00 	lds	r31, 0x0069
 280:	09 95       	icall
	}
}
 282:	cf 91       	pop	r28
 284:	df 91       	pop	r29
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	7f 91       	pop	r23
 294:	6f 91       	pop	r22
 296:	5f 91       	pop	r21
 298:	4f 91       	pop	r20
 29a:	3f 91       	pop	r19
 29c:	2f 91       	pop	r18
 29e:	0f 90       	pop	r0
 2a0:	0f be       	out	0x3f, r0	; 63
 2a2:	0f 90       	pop	r0
 2a4:	1f 90       	pop	r1
 2a6:	18 95       	reti

000002a8 <__vector_2>:
ISR(INT1_vect)
{
 2a8:	1f 92       	push	r1
 2aa:	0f 92       	push	r0
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	0f 92       	push	r0
 2b0:	11 24       	eor	r1, r1
 2b2:	2f 93       	push	r18
 2b4:	3f 93       	push	r19
 2b6:	4f 93       	push	r20
 2b8:	5f 93       	push	r21
 2ba:	6f 93       	push	r22
 2bc:	7f 93       	push	r23
 2be:	8f 93       	push	r24
 2c0:	9f 93       	push	r25
 2c2:	af 93       	push	r26
 2c4:	bf 93       	push	r27
 2c6:	ef 93       	push	r30
 2c8:	ff 93       	push	r31
 2ca:	df 93       	push	r29
 2cc:	cf 93       	push	r28
 2ce:	cd b7       	in	r28, 0x3d	; 61
 2d0:	de b7       	in	r29, 0x3e	; 62
	if((*ptrCallBack[1]) != NULL_PTR)
 2d2:	80 91 6a 00 	lds	r24, 0x006A
 2d6:	90 91 6b 00 	lds	r25, 0x006B
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	29 f0       	breq	.+10     	; 0x2e8 <__vector_2+0x40>
	{
		(*ptrCallBack[1])();
 2de:	e0 91 6a 00 	lds	r30, 0x006A
 2e2:	f0 91 6b 00 	lds	r31, 0x006B
 2e6:	09 95       	icall
	}
}
 2e8:	cf 91       	pop	r28
 2ea:	df 91       	pop	r29
 2ec:	ff 91       	pop	r31
 2ee:	ef 91       	pop	r30
 2f0:	bf 91       	pop	r27
 2f2:	af 91       	pop	r26
 2f4:	9f 91       	pop	r25
 2f6:	8f 91       	pop	r24
 2f8:	7f 91       	pop	r23
 2fa:	6f 91       	pop	r22
 2fc:	5f 91       	pop	r21
 2fe:	4f 91       	pop	r20
 300:	3f 91       	pop	r19
 302:	2f 91       	pop	r18
 304:	0f 90       	pop	r0
 306:	0f be       	out	0x3f, r0	; 63
 308:	0f 90       	pop	r0
 30a:	1f 90       	pop	r1
 30c:	18 95       	reti

0000030e <__vector_3>:
ISR(INT2_vect)
{
 30e:	1f 92       	push	r1
 310:	0f 92       	push	r0
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	0f 92       	push	r0
 316:	11 24       	eor	r1, r1
 318:	2f 93       	push	r18
 31a:	3f 93       	push	r19
 31c:	4f 93       	push	r20
 31e:	5f 93       	push	r21
 320:	6f 93       	push	r22
 322:	7f 93       	push	r23
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
 328:	af 93       	push	r26
 32a:	bf 93       	push	r27
 32c:	ef 93       	push	r30
 32e:	ff 93       	push	r31
 330:	df 93       	push	r29
 332:	cf 93       	push	r28
 334:	cd b7       	in	r28, 0x3d	; 61
 336:	de b7       	in	r29, 0x3e	; 62
	if((*ptrCallBack[2]) != NULL_PTR)
 338:	80 91 6c 00 	lds	r24, 0x006C
 33c:	90 91 6d 00 	lds	r25, 0x006D
 340:	00 97       	sbiw	r24, 0x00	; 0
 342:	29 f0       	breq	.+10     	; 0x34e <__vector_3+0x40>
	{
		(*ptrCallBack[2])();
 344:	e0 91 6c 00 	lds	r30, 0x006C
 348:	f0 91 6d 00 	lds	r31, 0x006D
 34c:	09 95       	icall
	}
}
 34e:	cf 91       	pop	r28
 350:	df 91       	pop	r29
 352:	ff 91       	pop	r31
 354:	ef 91       	pop	r30
 356:	bf 91       	pop	r27
 358:	af 91       	pop	r26
 35a:	9f 91       	pop	r25
 35c:	8f 91       	pop	r24
 35e:	7f 91       	pop	r23
 360:	6f 91       	pop	r22
 362:	5f 91       	pop	r21
 364:	4f 91       	pop	r20
 366:	3f 91       	pop	r19
 368:	2f 91       	pop	r18
 36a:	0f 90       	pop	r0
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	0f 90       	pop	r0
 370:	1f 90       	pop	r1
 372:	18 95       	reti

00000374 <GIE_Enable>:

#include "GIE_priv.h"
#include "GIE_int.h"

void GIE_Enable(void)
{
 374:	df 93       	push	r29
 376:	cf 93       	push	r28
 378:	cd b7       	in	r28, 0x3d	; 61
 37a:	de b7       	in	r29, 0x3e	; 62
	SREG_REG |= (1<<I_Bit);
 37c:	af e5       	ldi	r26, 0x5F	; 95
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	ef e5       	ldi	r30, 0x5F	; 95
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	80 68       	ori	r24, 0x80	; 128
 388:	8c 93       	st	X, r24
}
 38a:	cf 91       	pop	r28
 38c:	df 91       	pop	r29
 38e:	08 95       	ret

00000390 <GIE_Disable>:

void GIE_Disable(void)
{
 390:	df 93       	push	r29
 392:	cf 93       	push	r28
 394:	cd b7       	in	r28, 0x3d	; 61
 396:	de b7       	in	r29, 0x3e	; 62
	SREG_REG &= ~(1<<I_Bit);
 398:	af e5       	ldi	r26, 0x5F	; 95
 39a:	b0 e0       	ldi	r27, 0x00	; 0
 39c:	ef e5       	ldi	r30, 0x5F	; 95
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	80 81       	ld	r24, Z
 3a2:	8f 77       	andi	r24, 0x7F	; 127
 3a4:	8c 93       	st	X, r24
}
 3a6:	cf 91       	pop	r28
 3a8:	df 91       	pop	r29
 3aa:	08 95       	ret

000003ac <DIO_voidSetPinDirection>:

#include "GPIO_Int.h"


void DIO_voidSetPinDirection(port* Ptr_PortId,u8 PIN_ID,u8 DIRECTION)
{
 3ac:	df 93       	push	r29
 3ae:	cf 93       	push	r28
 3b0:	00 d0       	rcall	.+0      	; 0x3b2 <DIO_voidSetPinDirection+0x6>
 3b2:	00 d0       	rcall	.+0      	; 0x3b4 <DIO_voidSetPinDirection+0x8>
 3b4:	00 d0       	rcall	.+0      	; 0x3b6 <DIO_voidSetPinDirection+0xa>
 3b6:	cd b7       	in	r28, 0x3d	; 61
 3b8:	de b7       	in	r29, 0x3e	; 62
 3ba:	9a 83       	std	Y+2, r25	; 0x02
 3bc:	89 83       	std	Y+1, r24	; 0x01
 3be:	6b 83       	std	Y+3, r22	; 0x03
 3c0:	4c 83       	std	Y+4, r20	; 0x04
	switch(PIN_ID)
 3c2:	8b 81       	ldd	r24, Y+3	; 0x03
 3c4:	28 2f       	mov	r18, r24
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	3e 83       	std	Y+6, r19	; 0x06
 3ca:	2d 83       	std	Y+5, r18	; 0x05
 3cc:	8d 81       	ldd	r24, Y+5	; 0x05
 3ce:	9e 81       	ldd	r25, Y+6	; 0x06
 3d0:	83 30       	cpi	r24, 0x03	; 3
 3d2:	91 05       	cpc	r25, r1
 3d4:	09 f4       	brne	.+2      	; 0x3d8 <DIO_voidSetPinDirection+0x2c>
 3d6:	51 c0       	rjmp	.+162    	; 0x47a <DIO_voidSetPinDirection+0xce>
 3d8:	2d 81       	ldd	r18, Y+5	; 0x05
 3da:	3e 81       	ldd	r19, Y+6	; 0x06
 3dc:	24 30       	cpi	r18, 0x04	; 4
 3de:	31 05       	cpc	r19, r1
 3e0:	7c f4       	brge	.+30     	; 0x400 <DIO_voidSetPinDirection+0x54>
 3e2:	8d 81       	ldd	r24, Y+5	; 0x05
 3e4:	9e 81       	ldd	r25, Y+6	; 0x06
 3e6:	81 30       	cpi	r24, 0x01	; 1
 3e8:	91 05       	cpc	r25, r1
 3ea:	71 f1       	breq	.+92     	; 0x448 <DIO_voidSetPinDirection+0x9c>
 3ec:	2d 81       	ldd	r18, Y+5	; 0x05
 3ee:	3e 81       	ldd	r19, Y+6	; 0x06
 3f0:	22 30       	cpi	r18, 0x02	; 2
 3f2:	31 05       	cpc	r19, r1
 3f4:	ac f5       	brge	.+106    	; 0x460 <DIO_voidSetPinDirection+0xb4>
 3f6:	8d 81       	ldd	r24, Y+5	; 0x05
 3f8:	9e 81       	ldd	r25, Y+6	; 0x06
 3fa:	00 97       	sbiw	r24, 0x00	; 0
 3fc:	d1 f0       	breq	.+52     	; 0x432 <DIO_voidSetPinDirection+0x86>
 3fe:	81 c0       	rjmp	.+258    	; 0x502 <DIO_voidSetPinDirection+0x156>
 400:	2d 81       	ldd	r18, Y+5	; 0x05
 402:	3e 81       	ldd	r19, Y+6	; 0x06
 404:	25 30       	cpi	r18, 0x05	; 5
 406:	31 05       	cpc	r19, r1
 408:	09 f4       	brne	.+2      	; 0x40c <DIO_voidSetPinDirection+0x60>
 40a:	52 c0       	rjmp	.+164    	; 0x4b0 <DIO_voidSetPinDirection+0x104>
 40c:	8d 81       	ldd	r24, Y+5	; 0x05
 40e:	9e 81       	ldd	r25, Y+6	; 0x06
 410:	85 30       	cpi	r24, 0x05	; 5
 412:	91 05       	cpc	r25, r1
 414:	0c f4       	brge	.+2      	; 0x418 <DIO_voidSetPinDirection+0x6c>
 416:	3f c0       	rjmp	.+126    	; 0x496 <DIO_voidSetPinDirection+0xea>
 418:	2d 81       	ldd	r18, Y+5	; 0x05
 41a:	3e 81       	ldd	r19, Y+6	; 0x06
 41c:	26 30       	cpi	r18, 0x06	; 6
 41e:	31 05       	cpc	r19, r1
 420:	09 f4       	brne	.+2      	; 0x424 <DIO_voidSetPinDirection+0x78>
 422:	54 c0       	rjmp	.+168    	; 0x4cc <DIO_voidSetPinDirection+0x120>
 424:	8d 81       	ldd	r24, Y+5	; 0x05
 426:	9e 81       	ldd	r25, Y+6	; 0x06
 428:	87 30       	cpi	r24, 0x07	; 7
 42a:	91 05       	cpc	r25, r1
 42c:	09 f4       	brne	.+2      	; 0x430 <DIO_voidSetPinDirection+0x84>
 42e:	5d c0       	rjmp	.+186    	; 0x4ea <DIO_voidSetPinDirection+0x13e>
 430:	68 c0       	rjmp	.+208    	; 0x502 <DIO_voidSetPinDirection+0x156>
	{
	case Pin0:
		Ptr_PortId->DDR_reg.bits.bit0 = DIRECTION;
 432:	8c 81       	ldd	r24, Y+4	; 0x04
 434:	81 70       	andi	r24, 0x01	; 1
 436:	e9 81       	ldd	r30, Y+1	; 0x01
 438:	fa 81       	ldd	r31, Y+2	; 0x02
 43a:	98 2f       	mov	r25, r24
 43c:	91 70       	andi	r25, 0x01	; 1
 43e:	81 81       	ldd	r24, Z+1	; 0x01
 440:	8e 7f       	andi	r24, 0xFE	; 254
 442:	89 2b       	or	r24, r25
 444:	81 83       	std	Z+1, r24	; 0x01
 446:	5d c0       	rjmp	.+186    	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin1:
		Ptr_PortId->DDR_reg.bits.bit1 = DIRECTION;
 448:	8c 81       	ldd	r24, Y+4	; 0x04
 44a:	81 70       	andi	r24, 0x01	; 1
 44c:	e9 81       	ldd	r30, Y+1	; 0x01
 44e:	fa 81       	ldd	r31, Y+2	; 0x02
 450:	81 70       	andi	r24, 0x01	; 1
 452:	98 2f       	mov	r25, r24
 454:	99 0f       	add	r25, r25
 456:	81 81       	ldd	r24, Z+1	; 0x01
 458:	8d 7f       	andi	r24, 0xFD	; 253
 45a:	89 2b       	or	r24, r25
 45c:	81 83       	std	Z+1, r24	; 0x01
 45e:	51 c0       	rjmp	.+162    	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin2:
		Ptr_PortId->DDR_reg.bits.bit2 = DIRECTION;
 460:	8c 81       	ldd	r24, Y+4	; 0x04
 462:	81 70       	andi	r24, 0x01	; 1
 464:	e9 81       	ldd	r30, Y+1	; 0x01
 466:	fa 81       	ldd	r31, Y+2	; 0x02
 468:	81 70       	andi	r24, 0x01	; 1
 46a:	98 2f       	mov	r25, r24
 46c:	99 0f       	add	r25, r25
 46e:	99 0f       	add	r25, r25
 470:	81 81       	ldd	r24, Z+1	; 0x01
 472:	8b 7f       	andi	r24, 0xFB	; 251
 474:	89 2b       	or	r24, r25
 476:	81 83       	std	Z+1, r24	; 0x01
 478:	44 c0       	rjmp	.+136    	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin3:
		Ptr_PortId->DDR_reg.bits.bit3 = DIRECTION;
 47a:	8c 81       	ldd	r24, Y+4	; 0x04
 47c:	81 70       	andi	r24, 0x01	; 1
 47e:	e9 81       	ldd	r30, Y+1	; 0x01
 480:	fa 81       	ldd	r31, Y+2	; 0x02
 482:	81 70       	andi	r24, 0x01	; 1
 484:	98 2f       	mov	r25, r24
 486:	99 0f       	add	r25, r25
 488:	99 0f       	add	r25, r25
 48a:	99 0f       	add	r25, r25
 48c:	81 81       	ldd	r24, Z+1	; 0x01
 48e:	87 7f       	andi	r24, 0xF7	; 247
 490:	89 2b       	or	r24, r25
 492:	81 83       	std	Z+1, r24	; 0x01
 494:	36 c0       	rjmp	.+108    	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin4:
		Ptr_PortId->DDR_reg.bits.bit4 = DIRECTION;
 496:	8c 81       	ldd	r24, Y+4	; 0x04
 498:	81 70       	andi	r24, 0x01	; 1
 49a:	e9 81       	ldd	r30, Y+1	; 0x01
 49c:	fa 81       	ldd	r31, Y+2	; 0x02
 49e:	81 70       	andi	r24, 0x01	; 1
 4a0:	98 2f       	mov	r25, r24
 4a2:	92 95       	swap	r25
 4a4:	90 7f       	andi	r25, 0xF0	; 240
 4a6:	81 81       	ldd	r24, Z+1	; 0x01
 4a8:	8f 7e       	andi	r24, 0xEF	; 239
 4aa:	89 2b       	or	r24, r25
 4ac:	81 83       	std	Z+1, r24	; 0x01
 4ae:	29 c0       	rjmp	.+82     	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin5:
		Ptr_PortId->DDR_reg.bits.bit5 = DIRECTION;
 4b0:	8c 81       	ldd	r24, Y+4	; 0x04
 4b2:	81 70       	andi	r24, 0x01	; 1
 4b4:	e9 81       	ldd	r30, Y+1	; 0x01
 4b6:	fa 81       	ldd	r31, Y+2	; 0x02
 4b8:	81 70       	andi	r24, 0x01	; 1
 4ba:	98 2f       	mov	r25, r24
 4bc:	92 95       	swap	r25
 4be:	99 0f       	add	r25, r25
 4c0:	90 7e       	andi	r25, 0xE0	; 224
 4c2:	81 81       	ldd	r24, Z+1	; 0x01
 4c4:	8f 7d       	andi	r24, 0xDF	; 223
 4c6:	89 2b       	or	r24, r25
 4c8:	81 83       	std	Z+1, r24	; 0x01
 4ca:	1b c0       	rjmp	.+54     	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin6:
		Ptr_PortId->DDR_reg.bits.bit6 = DIRECTION;
 4cc:	8c 81       	ldd	r24, Y+4	; 0x04
 4ce:	81 70       	andi	r24, 0x01	; 1
 4d0:	e9 81       	ldd	r30, Y+1	; 0x01
 4d2:	fa 81       	ldd	r31, Y+2	; 0x02
 4d4:	81 70       	andi	r24, 0x01	; 1
 4d6:	98 2f       	mov	r25, r24
 4d8:	92 95       	swap	r25
 4da:	99 0f       	add	r25, r25
 4dc:	99 0f       	add	r25, r25
 4de:	90 7c       	andi	r25, 0xC0	; 192
 4e0:	81 81       	ldd	r24, Z+1	; 0x01
 4e2:	8f 7b       	andi	r24, 0xBF	; 191
 4e4:	89 2b       	or	r24, r25
 4e6:	81 83       	std	Z+1, r24	; 0x01
 4e8:	0c c0       	rjmp	.+24     	; 0x502 <DIO_voidSetPinDirection+0x156>
		break;
	case pin7:
		Ptr_PortId->DDR_reg.bits.bit7 = DIRECTION;
 4ea:	8c 81       	ldd	r24, Y+4	; 0x04
 4ec:	81 70       	andi	r24, 0x01	; 1
 4ee:	e9 81       	ldd	r30, Y+1	; 0x01
 4f0:	fa 81       	ldd	r31, Y+2	; 0x02
 4f2:	98 2f       	mov	r25, r24
 4f4:	97 95       	ror	r25
 4f6:	99 27       	eor	r25, r25
 4f8:	97 95       	ror	r25
 4fa:	81 81       	ldd	r24, Z+1	; 0x01
 4fc:	8f 77       	andi	r24, 0x7F	; 127
 4fe:	89 2b       	or	r24, r25
 500:	81 83       	std	Z+1, r24	; 0x01
		break;
	}
}
 502:	26 96       	adiw	r28, 0x06	; 6
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	cf 91       	pop	r28
 510:	df 91       	pop	r29
 512:	08 95       	ret

00000514 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(port* Ptr_PortId, u8 PIN_ID, u8 PIN_VAL)
{
 514:	df 93       	push	r29
 516:	cf 93       	push	r28
 518:	00 d0       	rcall	.+0      	; 0x51a <DIO_voidSetPinValue+0x6>
 51a:	00 d0       	rcall	.+0      	; 0x51c <DIO_voidSetPinValue+0x8>
 51c:	00 d0       	rcall	.+0      	; 0x51e <DIO_voidSetPinValue+0xa>
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
 522:	9a 83       	std	Y+2, r25	; 0x02
 524:	89 83       	std	Y+1, r24	; 0x01
 526:	6b 83       	std	Y+3, r22	; 0x03
 528:	4c 83       	std	Y+4, r20	; 0x04
	switch(PIN_ID)
 52a:	8b 81       	ldd	r24, Y+3	; 0x03
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	3e 83       	std	Y+6, r19	; 0x06
 532:	2d 83       	std	Y+5, r18	; 0x05
 534:	8d 81       	ldd	r24, Y+5	; 0x05
 536:	9e 81       	ldd	r25, Y+6	; 0x06
 538:	83 30       	cpi	r24, 0x03	; 3
 53a:	91 05       	cpc	r25, r1
 53c:	09 f4       	brne	.+2      	; 0x540 <DIO_voidSetPinValue+0x2c>
 53e:	51 c0       	rjmp	.+162    	; 0x5e2 <DIO_voidSetPinValue+0xce>
 540:	2d 81       	ldd	r18, Y+5	; 0x05
 542:	3e 81       	ldd	r19, Y+6	; 0x06
 544:	24 30       	cpi	r18, 0x04	; 4
 546:	31 05       	cpc	r19, r1
 548:	7c f4       	brge	.+30     	; 0x568 <DIO_voidSetPinValue+0x54>
 54a:	8d 81       	ldd	r24, Y+5	; 0x05
 54c:	9e 81       	ldd	r25, Y+6	; 0x06
 54e:	81 30       	cpi	r24, 0x01	; 1
 550:	91 05       	cpc	r25, r1
 552:	71 f1       	breq	.+92     	; 0x5b0 <DIO_voidSetPinValue+0x9c>
 554:	2d 81       	ldd	r18, Y+5	; 0x05
 556:	3e 81       	ldd	r19, Y+6	; 0x06
 558:	22 30       	cpi	r18, 0x02	; 2
 55a:	31 05       	cpc	r19, r1
 55c:	ac f5       	brge	.+106    	; 0x5c8 <DIO_voidSetPinValue+0xb4>
 55e:	8d 81       	ldd	r24, Y+5	; 0x05
 560:	9e 81       	ldd	r25, Y+6	; 0x06
 562:	00 97       	sbiw	r24, 0x00	; 0
 564:	d1 f0       	breq	.+52     	; 0x59a <DIO_voidSetPinValue+0x86>
 566:	81 c0       	rjmp	.+258    	; 0x66a <DIO_voidSetPinValue+0x156>
 568:	2d 81       	ldd	r18, Y+5	; 0x05
 56a:	3e 81       	ldd	r19, Y+6	; 0x06
 56c:	25 30       	cpi	r18, 0x05	; 5
 56e:	31 05       	cpc	r19, r1
 570:	09 f4       	brne	.+2      	; 0x574 <DIO_voidSetPinValue+0x60>
 572:	52 c0       	rjmp	.+164    	; 0x618 <DIO_voidSetPinValue+0x104>
 574:	8d 81       	ldd	r24, Y+5	; 0x05
 576:	9e 81       	ldd	r25, Y+6	; 0x06
 578:	85 30       	cpi	r24, 0x05	; 5
 57a:	91 05       	cpc	r25, r1
 57c:	0c f4       	brge	.+2      	; 0x580 <DIO_voidSetPinValue+0x6c>
 57e:	3f c0       	rjmp	.+126    	; 0x5fe <DIO_voidSetPinValue+0xea>
 580:	2d 81       	ldd	r18, Y+5	; 0x05
 582:	3e 81       	ldd	r19, Y+6	; 0x06
 584:	26 30       	cpi	r18, 0x06	; 6
 586:	31 05       	cpc	r19, r1
 588:	09 f4       	brne	.+2      	; 0x58c <DIO_voidSetPinValue+0x78>
 58a:	54 c0       	rjmp	.+168    	; 0x634 <DIO_voidSetPinValue+0x120>
 58c:	8d 81       	ldd	r24, Y+5	; 0x05
 58e:	9e 81       	ldd	r25, Y+6	; 0x06
 590:	87 30       	cpi	r24, 0x07	; 7
 592:	91 05       	cpc	r25, r1
 594:	09 f4       	brne	.+2      	; 0x598 <DIO_voidSetPinValue+0x84>
 596:	5d c0       	rjmp	.+186    	; 0x652 <DIO_voidSetPinValue+0x13e>
 598:	68 c0       	rjmp	.+208    	; 0x66a <DIO_voidSetPinValue+0x156>
	{
	case Pin0:
		Ptr_PortId->PORT_reg.bits.bit0 = PIN_VAL;
 59a:	8c 81       	ldd	r24, Y+4	; 0x04
 59c:	81 70       	andi	r24, 0x01	; 1
 59e:	e9 81       	ldd	r30, Y+1	; 0x01
 5a0:	fa 81       	ldd	r31, Y+2	; 0x02
 5a2:	98 2f       	mov	r25, r24
 5a4:	91 70       	andi	r25, 0x01	; 1
 5a6:	82 81       	ldd	r24, Z+2	; 0x02
 5a8:	8e 7f       	andi	r24, 0xFE	; 254
 5aa:	89 2b       	or	r24, r25
 5ac:	82 83       	std	Z+2, r24	; 0x02
 5ae:	5d c0       	rjmp	.+186    	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin1:
		Ptr_PortId->PORT_reg.bits.bit1 = PIN_VAL;
 5b0:	8c 81       	ldd	r24, Y+4	; 0x04
 5b2:	81 70       	andi	r24, 0x01	; 1
 5b4:	e9 81       	ldd	r30, Y+1	; 0x01
 5b6:	fa 81       	ldd	r31, Y+2	; 0x02
 5b8:	81 70       	andi	r24, 0x01	; 1
 5ba:	98 2f       	mov	r25, r24
 5bc:	99 0f       	add	r25, r25
 5be:	82 81       	ldd	r24, Z+2	; 0x02
 5c0:	8d 7f       	andi	r24, 0xFD	; 253
 5c2:	89 2b       	or	r24, r25
 5c4:	82 83       	std	Z+2, r24	; 0x02
 5c6:	51 c0       	rjmp	.+162    	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin2:
		Ptr_PortId->PORT_reg.bits.bit2 = PIN_VAL;
 5c8:	8c 81       	ldd	r24, Y+4	; 0x04
 5ca:	81 70       	andi	r24, 0x01	; 1
 5cc:	e9 81       	ldd	r30, Y+1	; 0x01
 5ce:	fa 81       	ldd	r31, Y+2	; 0x02
 5d0:	81 70       	andi	r24, 0x01	; 1
 5d2:	98 2f       	mov	r25, r24
 5d4:	99 0f       	add	r25, r25
 5d6:	99 0f       	add	r25, r25
 5d8:	82 81       	ldd	r24, Z+2	; 0x02
 5da:	8b 7f       	andi	r24, 0xFB	; 251
 5dc:	89 2b       	or	r24, r25
 5de:	82 83       	std	Z+2, r24	; 0x02
 5e0:	44 c0       	rjmp	.+136    	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin3:
		Ptr_PortId->PORT_reg.bits.bit3 = PIN_VAL;
 5e2:	8c 81       	ldd	r24, Y+4	; 0x04
 5e4:	81 70       	andi	r24, 0x01	; 1
 5e6:	e9 81       	ldd	r30, Y+1	; 0x01
 5e8:	fa 81       	ldd	r31, Y+2	; 0x02
 5ea:	81 70       	andi	r24, 0x01	; 1
 5ec:	98 2f       	mov	r25, r24
 5ee:	99 0f       	add	r25, r25
 5f0:	99 0f       	add	r25, r25
 5f2:	99 0f       	add	r25, r25
 5f4:	82 81       	ldd	r24, Z+2	; 0x02
 5f6:	87 7f       	andi	r24, 0xF7	; 247
 5f8:	89 2b       	or	r24, r25
 5fa:	82 83       	std	Z+2, r24	; 0x02
 5fc:	36 c0       	rjmp	.+108    	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin4:
		Ptr_PortId->PORT_reg.bits.bit4 = PIN_VAL;
 5fe:	8c 81       	ldd	r24, Y+4	; 0x04
 600:	81 70       	andi	r24, 0x01	; 1
 602:	e9 81       	ldd	r30, Y+1	; 0x01
 604:	fa 81       	ldd	r31, Y+2	; 0x02
 606:	81 70       	andi	r24, 0x01	; 1
 608:	98 2f       	mov	r25, r24
 60a:	92 95       	swap	r25
 60c:	90 7f       	andi	r25, 0xF0	; 240
 60e:	82 81       	ldd	r24, Z+2	; 0x02
 610:	8f 7e       	andi	r24, 0xEF	; 239
 612:	89 2b       	or	r24, r25
 614:	82 83       	std	Z+2, r24	; 0x02
 616:	29 c0       	rjmp	.+82     	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin5:
		Ptr_PortId->PORT_reg.bits.bit5 = PIN_VAL;
 618:	8c 81       	ldd	r24, Y+4	; 0x04
 61a:	81 70       	andi	r24, 0x01	; 1
 61c:	e9 81       	ldd	r30, Y+1	; 0x01
 61e:	fa 81       	ldd	r31, Y+2	; 0x02
 620:	81 70       	andi	r24, 0x01	; 1
 622:	98 2f       	mov	r25, r24
 624:	92 95       	swap	r25
 626:	99 0f       	add	r25, r25
 628:	90 7e       	andi	r25, 0xE0	; 224
 62a:	82 81       	ldd	r24, Z+2	; 0x02
 62c:	8f 7d       	andi	r24, 0xDF	; 223
 62e:	89 2b       	or	r24, r25
 630:	82 83       	std	Z+2, r24	; 0x02
 632:	1b c0       	rjmp	.+54     	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin6:
		Ptr_PortId->PORT_reg.bits.bit6 = PIN_VAL;
 634:	8c 81       	ldd	r24, Y+4	; 0x04
 636:	81 70       	andi	r24, 0x01	; 1
 638:	e9 81       	ldd	r30, Y+1	; 0x01
 63a:	fa 81       	ldd	r31, Y+2	; 0x02
 63c:	81 70       	andi	r24, 0x01	; 1
 63e:	98 2f       	mov	r25, r24
 640:	92 95       	swap	r25
 642:	99 0f       	add	r25, r25
 644:	99 0f       	add	r25, r25
 646:	90 7c       	andi	r25, 0xC0	; 192
 648:	82 81       	ldd	r24, Z+2	; 0x02
 64a:	8f 7b       	andi	r24, 0xBF	; 191
 64c:	89 2b       	or	r24, r25
 64e:	82 83       	std	Z+2, r24	; 0x02
 650:	0c c0       	rjmp	.+24     	; 0x66a <DIO_voidSetPinValue+0x156>
		break;
	case pin7:
		Ptr_PortId->PORT_reg.bits.bit7 = PIN_VAL;
 652:	8c 81       	ldd	r24, Y+4	; 0x04
 654:	81 70       	andi	r24, 0x01	; 1
 656:	e9 81       	ldd	r30, Y+1	; 0x01
 658:	fa 81       	ldd	r31, Y+2	; 0x02
 65a:	98 2f       	mov	r25, r24
 65c:	97 95       	ror	r25
 65e:	99 27       	eor	r25, r25
 660:	97 95       	ror	r25
 662:	82 81       	ldd	r24, Z+2	; 0x02
 664:	8f 77       	andi	r24, 0x7F	; 127
 666:	89 2b       	or	r24, r25
 668:	82 83       	std	Z+2, r24	; 0x02
		break;
	}
}
 66a:	26 96       	adiw	r28, 0x06	; 6
 66c:	0f b6       	in	r0, 0x3f	; 63
 66e:	f8 94       	cli
 670:	de bf       	out	0x3e, r29	; 62
 672:	0f be       	out	0x3f, r0	; 63
 674:	cd bf       	out	0x3d, r28	; 61
 676:	cf 91       	pop	r28
 678:	df 91       	pop	r29
 67a:	08 95       	ret

0000067c <DIO_voidGetPinValue>:

u8 DIO_voidGetPinValue(port* Ptr_PortId, u8 PIN_ID)
{
 67c:	df 93       	push	r29
 67e:	cf 93       	push	r28
 680:	00 d0       	rcall	.+0      	; 0x682 <DIO_voidGetPinValue+0x6>
 682:	00 d0       	rcall	.+0      	; 0x684 <DIO_voidGetPinValue+0x8>
 684:	00 d0       	rcall	.+0      	; 0x686 <DIO_voidGetPinValue+0xa>
 686:	cd b7       	in	r28, 0x3d	; 61
 688:	de b7       	in	r29, 0x3e	; 62
 68a:	9b 83       	std	Y+3, r25	; 0x03
 68c:	8a 83       	std	Y+2, r24	; 0x02
 68e:	6c 83       	std	Y+4, r22	; 0x04
	u8 u8PinValue;

	switch(PIN_ID)
 690:	8c 81       	ldd	r24, Y+4	; 0x04
 692:	28 2f       	mov	r18, r24
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	3e 83       	std	Y+6, r19	; 0x06
 698:	2d 83       	std	Y+5, r18	; 0x05
 69a:	8d 81       	ldd	r24, Y+5	; 0x05
 69c:	9e 81       	ldd	r25, Y+6	; 0x06
 69e:	83 30       	cpi	r24, 0x03	; 3
 6a0:	91 05       	cpc	r25, r1
 6a2:	09 f4       	brne	.+2      	; 0x6a6 <DIO_voidGetPinValue+0x2a>
 6a4:	3e c0       	rjmp	.+124    	; 0x722 <DIO_voidGetPinValue+0xa6>
 6a6:	2d 81       	ldd	r18, Y+5	; 0x05
 6a8:	3e 81       	ldd	r19, Y+6	; 0x06
 6aa:	24 30       	cpi	r18, 0x04	; 4
 6ac:	31 05       	cpc	r19, r1
 6ae:	7c f4       	brge	.+30     	; 0x6ce <DIO_voidGetPinValue+0x52>
 6b0:	8d 81       	ldd	r24, Y+5	; 0x05
 6b2:	9e 81       	ldd	r25, Y+6	; 0x06
 6b4:	81 30       	cpi	r24, 0x01	; 1
 6b6:	91 05       	cpc	r25, r1
 6b8:	29 f1       	breq	.+74     	; 0x704 <DIO_voidGetPinValue+0x88>
 6ba:	2d 81       	ldd	r18, Y+5	; 0x05
 6bc:	3e 81       	ldd	r19, Y+6	; 0x06
 6be:	22 30       	cpi	r18, 0x02	; 2
 6c0:	31 05       	cpc	r19, r1
 6c2:	3c f5       	brge	.+78     	; 0x712 <DIO_voidGetPinValue+0x96>
 6c4:	8d 81       	ldd	r24, Y+5	; 0x05
 6c6:	9e 81       	ldd	r25, Y+6	; 0x06
 6c8:	00 97       	sbiw	r24, 0x00	; 0
 6ca:	b1 f0       	breq	.+44     	; 0x6f8 <DIO_voidGetPinValue+0x7c>
 6cc:	55 c0       	rjmp	.+170    	; 0x778 <DIO_voidGetPinValue+0xfc>
 6ce:	2d 81       	ldd	r18, Y+5	; 0x05
 6d0:	3e 81       	ldd	r19, Y+6	; 0x06
 6d2:	25 30       	cpi	r18, 0x05	; 5
 6d4:	31 05       	cpc	r19, r1
 6d6:	b1 f1       	breq	.+108    	; 0x744 <DIO_voidGetPinValue+0xc8>
 6d8:	8d 81       	ldd	r24, Y+5	; 0x05
 6da:	9e 81       	ldd	r25, Y+6	; 0x06
 6dc:	85 30       	cpi	r24, 0x05	; 5
 6de:	91 05       	cpc	r25, r1
 6e0:	4c f1       	brlt	.+82     	; 0x734 <DIO_voidGetPinValue+0xb8>
 6e2:	2d 81       	ldd	r18, Y+5	; 0x05
 6e4:	3e 81       	ldd	r19, Y+6	; 0x06
 6e6:	26 30       	cpi	r18, 0x06	; 6
 6e8:	31 05       	cpc	r19, r1
 6ea:	a9 f1       	breq	.+106    	; 0x756 <DIO_voidGetPinValue+0xda>
 6ec:	8d 81       	ldd	r24, Y+5	; 0x05
 6ee:	9e 81       	ldd	r25, Y+6	; 0x06
 6f0:	87 30       	cpi	r24, 0x07	; 7
 6f2:	91 05       	cpc	r25, r1
 6f4:	d1 f1       	breq	.+116    	; 0x76a <DIO_voidGetPinValue+0xee>
 6f6:	40 c0       	rjmp	.+128    	; 0x778 <DIO_voidGetPinValue+0xfc>
	{
	case Pin0:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit0;
 6f8:	ea 81       	ldd	r30, Y+2	; 0x02
 6fa:	fb 81       	ldd	r31, Y+3	; 0x03
 6fc:	80 81       	ld	r24, Z
 6fe:	81 70       	andi	r24, 0x01	; 1
 700:	89 83       	std	Y+1, r24	; 0x01
 702:	3a c0       	rjmp	.+116    	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin1:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit1;
 704:	ea 81       	ldd	r30, Y+2	; 0x02
 706:	fb 81       	ldd	r31, Y+3	; 0x03
 708:	80 81       	ld	r24, Z
 70a:	86 95       	lsr	r24
 70c:	81 70       	andi	r24, 0x01	; 1
 70e:	89 83       	std	Y+1, r24	; 0x01
 710:	33 c0       	rjmp	.+102    	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin2:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit2;
 712:	ea 81       	ldd	r30, Y+2	; 0x02
 714:	fb 81       	ldd	r31, Y+3	; 0x03
 716:	80 81       	ld	r24, Z
 718:	86 95       	lsr	r24
 71a:	86 95       	lsr	r24
 71c:	81 70       	andi	r24, 0x01	; 1
 71e:	89 83       	std	Y+1, r24	; 0x01
 720:	2b c0       	rjmp	.+86     	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin3:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit3;
 722:	ea 81       	ldd	r30, Y+2	; 0x02
 724:	fb 81       	ldd	r31, Y+3	; 0x03
 726:	80 81       	ld	r24, Z
 728:	86 95       	lsr	r24
 72a:	86 95       	lsr	r24
 72c:	86 95       	lsr	r24
 72e:	81 70       	andi	r24, 0x01	; 1
 730:	89 83       	std	Y+1, r24	; 0x01
 732:	22 c0       	rjmp	.+68     	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin4:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit4;
 734:	ea 81       	ldd	r30, Y+2	; 0x02
 736:	fb 81       	ldd	r31, Y+3	; 0x03
 738:	80 81       	ld	r24, Z
 73a:	82 95       	swap	r24
 73c:	8f 70       	andi	r24, 0x0F	; 15
 73e:	81 70       	andi	r24, 0x01	; 1
 740:	89 83       	std	Y+1, r24	; 0x01
 742:	1a c0       	rjmp	.+52     	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin5:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit5;
 744:	ea 81       	ldd	r30, Y+2	; 0x02
 746:	fb 81       	ldd	r31, Y+3	; 0x03
 748:	80 81       	ld	r24, Z
 74a:	82 95       	swap	r24
 74c:	86 95       	lsr	r24
 74e:	87 70       	andi	r24, 0x07	; 7
 750:	81 70       	andi	r24, 0x01	; 1
 752:	89 83       	std	Y+1, r24	; 0x01
 754:	11 c0       	rjmp	.+34     	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin6:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit6;
 756:	ea 81       	ldd	r30, Y+2	; 0x02
 758:	fb 81       	ldd	r31, Y+3	; 0x03
 75a:	80 81       	ld	r24, Z
 75c:	82 95       	swap	r24
 75e:	86 95       	lsr	r24
 760:	86 95       	lsr	r24
 762:	83 70       	andi	r24, 0x03	; 3
 764:	81 70       	andi	r24, 0x01	; 1
 766:	89 83       	std	Y+1, r24	; 0x01
 768:	07 c0       	rjmp	.+14     	; 0x778 <DIO_voidGetPinValue+0xfc>
		break;
	case pin7:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit7;
 76a:	ea 81       	ldd	r30, Y+2	; 0x02
 76c:	fb 81       	ldd	r31, Y+3	; 0x03
 76e:	80 81       	ld	r24, Z
 770:	88 1f       	adc	r24, r24
 772:	88 27       	eor	r24, r24
 774:	88 1f       	adc	r24, r24
 776:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return u8PinValue;
 778:	89 81       	ldd	r24, Y+1	; 0x01
}
 77a:	26 96       	adiw	r28, 0x06	; 6
 77c:	0f b6       	in	r0, 0x3f	; 63
 77e:	f8 94       	cli
 780:	de bf       	out	0x3e, r29	; 62
 782:	0f be       	out	0x3f, r0	; 63
 784:	cd bf       	out	0x3d, r28	; 61
 786:	cf 91       	pop	r28
 788:	df 91       	pop	r29
 78a:	08 95       	ret

0000078c <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(port* Ptr_PortId, u8 Copy_u8Direction)
{
 78c:	df 93       	push	r29
 78e:	cf 93       	push	r28
 790:	00 d0       	rcall	.+0      	; 0x792 <DIO_voidSetPortDirection+0x6>
 792:	0f 92       	push	r0
 794:	cd b7       	in	r28, 0x3d	; 61
 796:	de b7       	in	r29, 0x3e	; 62
 798:	9a 83       	std	Y+2, r25	; 0x02
 79a:	89 83       	std	Y+1, r24	; 0x01
 79c:	6b 83       	std	Y+3, r22	; 0x03
	Ptr_PortId->DDR_reg.Full_Reg = Copy_u8Direction;
 79e:	e9 81       	ldd	r30, Y+1	; 0x01
 7a0:	fa 81       	ldd	r31, Y+2	; 0x02
 7a2:	8b 81       	ldd	r24, Y+3	; 0x03
 7a4:	81 83       	std	Z+1, r24	; 0x01
}
 7a6:	0f 90       	pop	r0
 7a8:	0f 90       	pop	r0
 7aa:	0f 90       	pop	r0
 7ac:	cf 91       	pop	r28
 7ae:	df 91       	pop	r29
 7b0:	08 95       	ret

000007b2 <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(port* Ptr_PortId, u8 Copy_u8Value)
{
 7b2:	df 93       	push	r29
 7b4:	cf 93       	push	r28
 7b6:	00 d0       	rcall	.+0      	; 0x7b8 <DIO_voidSetPortValue+0x6>
 7b8:	0f 92       	push	r0
 7ba:	cd b7       	in	r28, 0x3d	; 61
 7bc:	de b7       	in	r29, 0x3e	; 62
 7be:	9a 83       	std	Y+2, r25	; 0x02
 7c0:	89 83       	std	Y+1, r24	; 0x01
 7c2:	6b 83       	std	Y+3, r22	; 0x03
	Ptr_PortId->PORT_reg.Full_Reg = Copy_u8Value;
 7c4:	e9 81       	ldd	r30, Y+1	; 0x01
 7c6:	fa 81       	ldd	r31, Y+2	; 0x02
 7c8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ca:	82 83       	std	Z+2, r24	; 0x02
}
 7cc:	0f 90       	pop	r0
 7ce:	0f 90       	pop	r0
 7d0:	0f 90       	pop	r0
 7d2:	cf 91       	pop	r28
 7d4:	df 91       	pop	r29
 7d6:	08 95       	ret

000007d8 <DIO_voidGetPortValue>:

u8 DIO_voidGetPortValue(port* Ptr_PortId)
{
 7d8:	df 93       	push	r29
 7da:	cf 93       	push	r28
 7dc:	00 d0       	rcall	.+0      	; 0x7de <DIO_voidGetPortValue+0x6>
 7de:	cd b7       	in	r28, 0x3d	; 61
 7e0:	de b7       	in	r29, 0x3e	; 62
 7e2:	9a 83       	std	Y+2, r25	; 0x02
 7e4:	89 83       	std	Y+1, r24	; 0x01
	return Ptr_PortId->PIN_reg.Full_Reg;
 7e6:	e9 81       	ldd	r30, Y+1	; 0x01
 7e8:	fa 81       	ldd	r31, Y+2	; 0x02
 7ea:	80 81       	ld	r24, Z
}
 7ec:	0f 90       	pop	r0
 7ee:	0f 90       	pop	r0
 7f0:	cf 91       	pop	r28
 7f2:	df 91       	pop	r29
 7f4:	08 95       	ret

000007f6 <main>:
#include "GIE_int.h"

void LedON(void);

int main()
{
 7f6:	df 93       	push	r29
 7f8:	cf 93       	push	r28
 7fa:	cd b7       	in	r28, 0x3d	; 61
 7fc:	de b7       	in	r29, 0x3e	; 62
	GIE_Enable();
 7fe:	0e 94 ba 01 	call	0x374	; 0x374 <GIE_Enable>
	EXTI_voidEnable(EXTI_INT1_ID, FALLING_EDGE);
 802:	87 e0       	ldi	r24, 0x07	; 7
 804:	62 e0       	ldi	r22, 0x02	; 2
 806:	0e 94 49 00 	call	0x92	; 0x92 <EXTI_voidEnable>
	DIO_voidSetPinDirection(pPORTD, 3, input);
 80a:	80 91 66 00 	lds	r24, 0x0066
 80e:	90 91 67 00 	lds	r25, 0x0067
 812:	63 e0       	ldi	r22, 0x03	; 3
 814:	40 e0       	ldi	r20, 0x00	; 0
 816:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(pPORTB, 7, output);
 81a:	80 91 62 00 	lds	r24, 0x0062
 81e:	90 91 63 00 	lds	r25, 0x0063
 822:	67 e0       	ldi	r22, 0x07	; 7
 824:	41 e0       	ldi	r20, 0x01	; 1
 826:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(pPORTB, 7, low);
 82a:	80 91 62 00 	lds	r24, 0x0062
 82e:	90 91 63 00 	lds	r25, 0x0063
 832:	67 e0       	ldi	r22, 0x07	; 7
 834:	40 e0       	ldi	r20, 0x00	; 0
 836:	0e 94 8a 02 	call	0x514	; 0x514 <DIO_voidSetPinValue>
	EXTI_voidSetCallBack(LedON, EXTI_INT1_ID);
 83a:	83 e2       	ldi	r24, 0x23	; 35
 83c:	94 e0       	ldi	r25, 0x04	; 4
 83e:	67 e0       	ldi	r22, 0x07	; 7
 840:	0e 94 e6 00 	call	0x1cc	; 0x1cc <EXTI_voidSetCallBack>
 844:	ff cf       	rjmp	.-2      	; 0x844 <main+0x4e>

00000846 <LedON>:

	}
}

void LedON(void)
{
 846:	df 93       	push	r29
 848:	cf 93       	push	r28
 84a:	cd b7       	in	r28, 0x3d	; 61
 84c:	de b7       	in	r29, 0x3e	; 62
	static u8 u8_StatusFlag = 0;
	if(u8_StatusFlag == 0)
 84e:	80 91 6e 00 	lds	r24, 0x006E
 852:	88 23       	and	r24, r24
 854:	81 f4       	brne	.+32     	; 0x876 <__stack+0x17>
	{
		DIO_voidSetPinValue(pPORTB, 7, high);
 856:	80 91 62 00 	lds	r24, 0x0062
 85a:	90 91 63 00 	lds	r25, 0x0063
 85e:	67 e0       	ldi	r22, 0x07	; 7
 860:	41 e0       	ldi	r20, 0x01	; 1
 862:	0e 94 8a 02 	call	0x514	; 0x514 <DIO_voidSetPinValue>
		u8_StatusFlag = 1;
 866:	81 e0       	ldi	r24, 0x01	; 1
 868:	80 93 6e 00 	sts	0x006E, r24
		EXTI_voidEnable(EXTI_INT1_ID, RISING_EDGE);
 86c:	87 e0       	ldi	r24, 0x07	; 7
 86e:	63 e0       	ldi	r22, 0x03	; 3
 870:	0e 94 49 00 	call	0x92	; 0x92 <EXTI_voidEnable>
 874:	0e c0       	rjmp	.+28     	; 0x892 <__stack+0x33>
	}
	else
	{
		DIO_voidSetPinValue(pPORTB, 7, low);
 876:	80 91 62 00 	lds	r24, 0x0062
 87a:	90 91 63 00 	lds	r25, 0x0063
 87e:	67 e0       	ldi	r22, 0x07	; 7
 880:	40 e0       	ldi	r20, 0x00	; 0
 882:	0e 94 8a 02 	call	0x514	; 0x514 <DIO_voidSetPinValue>
		u8_StatusFlag = 0;
 886:	10 92 6e 00 	sts	0x006E, r1
		EXTI_voidEnable(EXTI_INT1_ID, FALLING_EDGE);
 88a:	87 e0       	ldi	r24, 0x07	; 7
 88c:	62 e0       	ldi	r22, 0x02	; 2
 88e:	0e 94 49 00 	call	0x92	; 0x92 <EXTI_voidEnable>
	}
}
 892:	cf 91       	pop	r28
 894:	df 91       	pop	r29
 896:	08 95       	ret

00000898 <_exit>:
 898:	f8 94       	cli

0000089a <__stop_program>:
 89a:	ff cf       	rjmp	.-2      	; 0x89a <__stop_program>

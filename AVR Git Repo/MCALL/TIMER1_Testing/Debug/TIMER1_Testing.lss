
TIMER1_Testing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002610  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011a  00800060  00002610  000026a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  0080017a  0080017a  000027be  2**0
                  ALLOC
  3 .stab         000019c8  00000000  00000000  000027c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001a1e  00000000  00000000  00004188  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00005ba6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b6  00000000  00000000  00005d06  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f0d  00000000  00000000  00005ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010d2  00000000  00000000  00007dc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001030  00000000  00000000  00008e9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00009ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002e6  00000000  00000000  0000a04c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008f6  00000000  00000000  0000a332  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ac28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 da 10 	jmp	0x21b4	; 0x21b4 <__vector_6>
      1c:	0c 94 0d 11 	jmp	0x221a	; 0x221a <__vector_7>
      20:	0c 94 40 11 	jmp	0x2280	; 0x2280 <__vector_8>
      24:	0c 94 6e 10 	jmp	0x20dc	; 0x20dc <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e1       	ldi	r30, 0x10	; 16
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa e7       	ldi	r26, 0x7A	; 122
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 38       	cpi	r26, 0x8D	; 141
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 73 11 	call	0x22e6	; 0x22e6 <main>
      8a:	0c 94 06 13 	jmp	0x260c	; 0x260c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 cf 12 	jmp	0x259e	; 0x259e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 eb 12 	jmp	0x25d6	; 0x25d6 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 cf 12 	jmp	0x259e	; 0x259e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 eb 12 	jmp	0x25d6	; 0x25d6 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 d7 12 	jmp	0x25ae	; 0x25ae <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 f3 12 	jmp	0x25e6	; 0x25e6 <__epilogue_restores__+0x10>

0000078a <__gesf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gesf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gesf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gesf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__epilogue_restores__+0x18>

000007ea <__fixsfsi>:
     7ea:	ac e0       	ldi	r26, 0x0C	; 12
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 df 12 	jmp	0x25be	; 0x25be <__prologue_saves__+0x20>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	ce 01       	movw	r24, r28
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	be 01       	movw	r22, r28
     804:	6b 5f       	subi	r22, 0xFB	; 251
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     80c:	8d 81       	ldd	r24, Y+5	; 0x05
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	61 f1       	breq	.+88     	; 0x86a <__stack+0xb>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	50 f1       	brcs	.+84     	; 0x86a <__stack+0xb>
     816:	84 30       	cpi	r24, 0x04	; 4
     818:	21 f4       	brne	.+8      	; 0x822 <__fixsfsi+0x38>
     81a:	8e 81       	ldd	r24, Y+6	; 0x06
     81c:	88 23       	and	r24, r24
     81e:	51 f1       	breq	.+84     	; 0x874 <__stack+0x15>
     820:	2e c0       	rjmp	.+92     	; 0x87e <__stack+0x1f>
     822:	2f 81       	ldd	r18, Y+7	; 0x07
     824:	38 85       	ldd	r19, Y+8	; 0x08
     826:	37 fd       	sbrc	r19, 7
     828:	20 c0       	rjmp	.+64     	; 0x86a <__stack+0xb>
     82a:	6e 81       	ldd	r22, Y+6	; 0x06
     82c:	2f 31       	cpi	r18, 0x1F	; 31
     82e:	31 05       	cpc	r19, r1
     830:	1c f0       	brlt	.+6      	; 0x838 <__fixsfsi+0x4e>
     832:	66 23       	and	r22, r22
     834:	f9 f0       	breq	.+62     	; 0x874 <__stack+0x15>
     836:	23 c0       	rjmp	.+70     	; 0x87e <__stack+0x1f>
     838:	8e e1       	ldi	r24, 0x1E	; 30
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	82 1b       	sub	r24, r18
     83e:	93 0b       	sbc	r25, r19
     840:	29 85       	ldd	r18, Y+9	; 0x09
     842:	3a 85       	ldd	r19, Y+10	; 0x0a
     844:	4b 85       	ldd	r20, Y+11	; 0x0b
     846:	5c 85       	ldd	r21, Y+12	; 0x0c
     848:	04 c0       	rjmp	.+8      	; 0x852 <__fixsfsi+0x68>
     84a:	56 95       	lsr	r21
     84c:	47 95       	ror	r20
     84e:	37 95       	ror	r19
     850:	27 95       	ror	r18
     852:	8a 95       	dec	r24
     854:	d2 f7       	brpl	.-12     	; 0x84a <__fixsfsi+0x60>
     856:	66 23       	and	r22, r22
     858:	b1 f0       	breq	.+44     	; 0x886 <__stack+0x27>
     85a:	50 95       	com	r21
     85c:	40 95       	com	r20
     85e:	30 95       	com	r19
     860:	21 95       	neg	r18
     862:	3f 4f       	sbci	r19, 0xFF	; 255
     864:	4f 4f       	sbci	r20, 0xFF	; 255
     866:	5f 4f       	sbci	r21, 0xFF	; 255
     868:	0e c0       	rjmp	.+28     	; 0x886 <__stack+0x27>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	09 c0       	rjmp	.+18     	; 0x886 <__stack+0x27>
     874:	2f ef       	ldi	r18, 0xFF	; 255
     876:	3f ef       	ldi	r19, 0xFF	; 255
     878:	4f ef       	ldi	r20, 0xFF	; 255
     87a:	5f e7       	ldi	r21, 0x7F	; 127
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e8       	ldi	r21, 0x80	; 128
     886:	b9 01       	movw	r22, r18
     888:	ca 01       	movw	r24, r20
     88a:	2c 96       	adiw	r28, 0x0c	; 12
     88c:	e2 e0       	ldi	r30, 0x02	; 2
     88e:	0c 94 fb 12 	jmp	0x25f6	; 0x25f6 <__epilogue_restores__+0x20>

00000892 <__floatunsisf>:
     892:	a8 e0       	ldi	r26, 0x08	; 8
     894:	b0 e0       	ldi	r27, 0x00	; 0
     896:	ef e4       	ldi	r30, 0x4F	; 79
     898:	f4 e0       	ldi	r31, 0x04	; 4
     89a:	0c 94 d7 12 	jmp	0x25ae	; 0x25ae <__prologue_saves__+0x10>
     89e:	7b 01       	movw	r14, r22
     8a0:	8c 01       	movw	r16, r24
     8a2:	61 15       	cp	r22, r1
     8a4:	71 05       	cpc	r23, r1
     8a6:	81 05       	cpc	r24, r1
     8a8:	91 05       	cpc	r25, r1
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <__floatunsisf+0x20>
     8ac:	82 e0       	ldi	r24, 0x02	; 2
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	60 c0       	rjmp	.+192    	; 0x972 <__floatunsisf+0xe0>
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	89 83       	std	Y+1, r24	; 0x01
     8b6:	8e e1       	ldi	r24, 0x1E	; 30
     8b8:	c8 2e       	mov	r12, r24
     8ba:	d1 2c       	mov	r13, r1
     8bc:	dc 82       	std	Y+4, r13	; 0x04
     8be:	cb 82       	std	Y+3, r12	; 0x03
     8c0:	ed 82       	std	Y+5, r14	; 0x05
     8c2:	fe 82       	std	Y+6, r15	; 0x06
     8c4:	0f 83       	std	Y+7, r16	; 0x07
     8c6:	18 87       	std	Y+8, r17	; 0x08
     8c8:	c8 01       	movw	r24, r16
     8ca:	b7 01       	movw	r22, r14
     8cc:	0e 94 c2 04 	call	0x984	; 0x984 <__clzsi2>
     8d0:	fc 01       	movw	r30, r24
     8d2:	31 97       	sbiw	r30, 0x01	; 1
     8d4:	f7 ff       	sbrs	r31, 7
     8d6:	3b c0       	rjmp	.+118    	; 0x94e <__floatunsisf+0xbc>
     8d8:	22 27       	eor	r18, r18
     8da:	33 27       	eor	r19, r19
     8dc:	2e 1b       	sub	r18, r30
     8de:	3f 0b       	sbc	r19, r31
     8e0:	57 01       	movw	r10, r14
     8e2:	68 01       	movw	r12, r16
     8e4:	02 2e       	mov	r0, r18
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__floatunsisf+0x5e>
     8e8:	d6 94       	lsr	r13
     8ea:	c7 94       	ror	r12
     8ec:	b7 94       	ror	r11
     8ee:	a7 94       	ror	r10
     8f0:	0a 94       	dec	r0
     8f2:	d2 f7       	brpl	.-12     	; 0x8e8 <__floatunsisf+0x56>
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	a0 e0       	ldi	r26, 0x00	; 0
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	04 c0       	rjmp	.+8      	; 0x90e <__floatunsisf+0x7c>
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	aa 1f       	adc	r26, r26
     90c:	bb 1f       	adc	r27, r27
     90e:	2a 95       	dec	r18
     910:	d2 f7       	brpl	.-12     	; 0x906 <__floatunsisf+0x74>
     912:	01 97       	sbiw	r24, 0x01	; 1
     914:	a1 09       	sbc	r26, r1
     916:	b1 09       	sbc	r27, r1
     918:	8e 21       	and	r24, r14
     91a:	9f 21       	and	r25, r15
     91c:	a0 23       	and	r26, r16
     91e:	b1 23       	and	r27, r17
     920:	00 97       	sbiw	r24, 0x00	; 0
     922:	a1 05       	cpc	r26, r1
     924:	b1 05       	cpc	r27, r1
     926:	21 f0       	breq	.+8      	; 0x930 <__floatunsisf+0x9e>
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	4a 29       	or	r20, r10
     932:	5b 29       	or	r21, r11
     934:	6c 29       	or	r22, r12
     936:	7d 29       	or	r23, r13
     938:	4d 83       	std	Y+5, r20	; 0x05
     93a:	5e 83       	std	Y+6, r21	; 0x06
     93c:	6f 83       	std	Y+7, r22	; 0x07
     93e:	78 87       	std	Y+8, r23	; 0x08
     940:	8e e1       	ldi	r24, 0x1E	; 30
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	8e 1b       	sub	r24, r30
     946:	9f 0b       	sbc	r25, r31
     948:	9c 83       	std	Y+4, r25	; 0x04
     94a:	8b 83       	std	Y+3, r24	; 0x03
     94c:	12 c0       	rjmp	.+36     	; 0x972 <__floatunsisf+0xe0>
     94e:	30 97       	sbiw	r30, 0x00	; 0
     950:	81 f0       	breq	.+32     	; 0x972 <__floatunsisf+0xe0>
     952:	0e 2e       	mov	r0, r30
     954:	04 c0       	rjmp	.+8      	; 0x95e <__floatunsisf+0xcc>
     956:	ee 0c       	add	r14, r14
     958:	ff 1c       	adc	r15, r15
     95a:	00 1f       	adc	r16, r16
     95c:	11 1f       	adc	r17, r17
     95e:	0a 94       	dec	r0
     960:	d2 f7       	brpl	.-12     	; 0x956 <__floatunsisf+0xc4>
     962:	ed 82       	std	Y+5, r14	; 0x05
     964:	fe 82       	std	Y+6, r15	; 0x06
     966:	0f 83       	std	Y+7, r16	; 0x07
     968:	18 87       	std	Y+8, r17	; 0x08
     96a:	ce 1a       	sub	r12, r30
     96c:	df 0a       	sbc	r13, r31
     96e:	dc 82       	std	Y+4, r13	; 0x04
     970:	cb 82       	std	Y+3, r12	; 0x03
     972:	1a 82       	std	Y+2, r1	; 0x02
     974:	ce 01       	movw	r24, r28
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     97c:	28 96       	adiw	r28, 0x08	; 8
     97e:	ea e0       	ldi	r30, 0x0A	; 10
     980:	0c 94 f3 12 	jmp	0x25e6	; 0x25e6 <__epilogue_restores__+0x10>

00000984 <__clzsi2>:
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	e8 16       	cp	r14, r24
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	f8 06       	cpc	r15, r24
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	08 07       	cpc	r16, r24
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	18 07       	cpc	r17, r24
     9a0:	88 f4       	brcc	.+34     	; 0x9c4 <__clzsi2+0x40>
     9a2:	8f ef       	ldi	r24, 0xFF	; 255
     9a4:	e8 16       	cp	r14, r24
     9a6:	f1 04       	cpc	r15, r1
     9a8:	01 05       	cpc	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	31 f0       	breq	.+12     	; 0x9ba <__clzsi2+0x36>
     9ae:	28 f0       	brcs	.+10     	; 0x9ba <__clzsi2+0x36>
     9b0:	88 e0       	ldi	r24, 0x08	; 8
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	a0 e0       	ldi	r26, 0x00	; 0
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__clzsi2+0x64>
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	a0 e0       	ldi	r26, 0x00	; 0
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	12 c0       	rjmp	.+36     	; 0x9e8 <__clzsi2+0x64>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	e8 16       	cp	r14, r24
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	f8 06       	cpc	r15, r24
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 07       	cpc	r16, r24
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	18 07       	cpc	r17, r24
     9d4:	28 f0       	brcs	.+10     	; 0x9e0 <__clzsi2+0x5c>
     9d6:	88 e1       	ldi	r24, 0x18	; 24
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__clzsi2+0x64>
     9e0:	80 e1       	ldi	r24, 0x10	; 16
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	20 e2       	ldi	r18, 0x20	; 32
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	28 1b       	sub	r18, r24
     9f2:	39 0b       	sbc	r19, r25
     9f4:	4a 0b       	sbc	r20, r26
     9f6:	5b 0b       	sbc	r21, r27
     9f8:	04 c0       	rjmp	.+8      	; 0xa02 <__clzsi2+0x7e>
     9fa:	16 95       	lsr	r17
     9fc:	07 95       	ror	r16
     9fe:	f7 94       	ror	r15
     a00:	e7 94       	ror	r14
     a02:	8a 95       	dec	r24
     a04:	d2 f7       	brpl	.-12     	; 0x9fa <__clzsi2+0x76>
     a06:	f7 01       	movw	r30, r14
     a08:	e8 59       	subi	r30, 0x98	; 152
     a0a:	ff 4f       	sbci	r31, 0xFF	; 255
     a0c:	80 81       	ld	r24, Z
     a0e:	28 1b       	sub	r18, r24
     a10:	31 09       	sbc	r19, r1
     a12:	41 09       	sbc	r20, r1
     a14:	51 09       	sbc	r21, r1
     a16:	c9 01       	movw	r24, r18
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	08 95       	ret

00000a22 <__pack_f>:
     a22:	df 92       	push	r13
     a24:	ef 92       	push	r14
     a26:	ff 92       	push	r15
     a28:	0f 93       	push	r16
     a2a:	1f 93       	push	r17
     a2c:	fc 01       	movw	r30, r24
     a2e:	e4 80       	ldd	r14, Z+4	; 0x04
     a30:	f5 80       	ldd	r15, Z+5	; 0x05
     a32:	06 81       	ldd	r16, Z+6	; 0x06
     a34:	17 81       	ldd	r17, Z+7	; 0x07
     a36:	d1 80       	ldd	r13, Z+1	; 0x01
     a38:	80 81       	ld	r24, Z
     a3a:	82 30       	cpi	r24, 0x02	; 2
     a3c:	48 f4       	brcc	.+18     	; 0xa50 <__pack_f+0x2e>
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 e1       	ldi	r26, 0x10	; 16
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e8 2a       	or	r14, r24
     a48:	f9 2a       	or	r15, r25
     a4a:	0a 2b       	or	r16, r26
     a4c:	1b 2b       	or	r17, r27
     a4e:	a5 c0       	rjmp	.+330    	; 0xb9a <__pack_f+0x178>
     a50:	84 30       	cpi	r24, 0x04	; 4
     a52:	09 f4       	brne	.+2      	; 0xa56 <__pack_f+0x34>
     a54:	9f c0       	rjmp	.+318    	; 0xb94 <__pack_f+0x172>
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	21 f4       	brne	.+8      	; 0xa62 <__pack_f+0x40>
     a5a:	ee 24       	eor	r14, r14
     a5c:	ff 24       	eor	r15, r15
     a5e:	87 01       	movw	r16, r14
     a60:	05 c0       	rjmp	.+10     	; 0xa6c <__pack_f+0x4a>
     a62:	e1 14       	cp	r14, r1
     a64:	f1 04       	cpc	r15, r1
     a66:	01 05       	cpc	r16, r1
     a68:	11 05       	cpc	r17, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <__pack_f+0x50>
     a6c:	e0 e0       	ldi	r30, 0x00	; 0
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	96 c0       	rjmp	.+300    	; 0xb9e <__pack_f+0x17c>
     a72:	62 81       	ldd	r22, Z+2	; 0x02
     a74:	73 81       	ldd	r23, Z+3	; 0x03
     a76:	9f ef       	ldi	r25, 0xFF	; 255
     a78:	62 38       	cpi	r22, 0x82	; 130
     a7a:	79 07       	cpc	r23, r25
     a7c:	0c f0       	brlt	.+2      	; 0xa80 <__pack_f+0x5e>
     a7e:	5b c0       	rjmp	.+182    	; 0xb36 <__pack_f+0x114>
     a80:	22 e8       	ldi	r18, 0x82	; 130
     a82:	3f ef       	ldi	r19, 0xFF	; 255
     a84:	26 1b       	sub	r18, r22
     a86:	37 0b       	sbc	r19, r23
     a88:	2a 31       	cpi	r18, 0x1A	; 26
     a8a:	31 05       	cpc	r19, r1
     a8c:	2c f0       	brlt	.+10     	; 0xa98 <__pack_f+0x76>
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	2a c0       	rjmp	.+84     	; 0xaec <__pack_f+0xca>
     a98:	b8 01       	movw	r22, r16
     a9a:	a7 01       	movw	r20, r14
     a9c:	02 2e       	mov	r0, r18
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__pack_f+0x86>
     aa0:	76 95       	lsr	r23
     aa2:	67 95       	ror	r22
     aa4:	57 95       	ror	r21
     aa6:	47 95       	ror	r20
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__pack_f+0x7e>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <__pack_f+0x9c>
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	2a 95       	dec	r18
     ac0:	d2 f7       	brpl	.-12     	; 0xab6 <__pack_f+0x94>
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	a1 09       	sbc	r26, r1
     ac6:	b1 09       	sbc	r27, r1
     ac8:	8e 21       	and	r24, r14
     aca:	9f 21       	and	r25, r15
     acc:	a0 23       	and	r26, r16
     ace:	b1 23       	and	r27, r17
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	a1 05       	cpc	r26, r1
     ad4:	b1 05       	cpc	r27, r1
     ad6:	21 f0       	breq	.+8      	; 0xae0 <__pack_f+0xbe>
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	9a 01       	movw	r18, r20
     ae2:	ab 01       	movw	r20, r22
     ae4:	28 2b       	or	r18, r24
     ae6:	39 2b       	or	r19, r25
     ae8:	4a 2b       	or	r20, r26
     aea:	5b 2b       	or	r21, r27
     aec:	da 01       	movw	r26, r20
     aee:	c9 01       	movw	r24, r18
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	90 70       	andi	r25, 0x00	; 0
     af4:	a0 70       	andi	r26, 0x00	; 0
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	80 34       	cpi	r24, 0x40	; 64
     afa:	91 05       	cpc	r25, r1
     afc:	a1 05       	cpc	r26, r1
     afe:	b1 05       	cpc	r27, r1
     b00:	39 f4       	brne	.+14     	; 0xb10 <__pack_f+0xee>
     b02:	27 ff       	sbrs	r18, 7
     b04:	09 c0       	rjmp	.+18     	; 0xb18 <__pack_f+0xf6>
     b06:	20 5c       	subi	r18, 0xC0	; 192
     b08:	3f 4f       	sbci	r19, 0xFF	; 255
     b0a:	4f 4f       	sbci	r20, 0xFF	; 255
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__pack_f+0xf6>
     b10:	21 5c       	subi	r18, 0xC1	; 193
     b12:	3f 4f       	sbci	r19, 0xFF	; 255
     b14:	4f 4f       	sbci	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	e0 e0       	ldi	r30, 0x00	; 0
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	20 30       	cpi	r18, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	3a 07       	cpc	r19, r26
     b22:	a0 e0       	ldi	r26, 0x00	; 0
     b24:	4a 07       	cpc	r20, r26
     b26:	a0 e4       	ldi	r26, 0x40	; 64
     b28:	5a 07       	cpc	r21, r26
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__pack_f+0x10e>
     b2c:	e1 e0       	ldi	r30, 0x01	; 1
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	79 01       	movw	r14, r18
     b32:	8a 01       	movw	r16, r20
     b34:	27 c0       	rjmp	.+78     	; 0xb84 <__pack_f+0x162>
     b36:	60 38       	cpi	r22, 0x80	; 128
     b38:	71 05       	cpc	r23, r1
     b3a:	64 f5       	brge	.+88     	; 0xb94 <__pack_f+0x172>
     b3c:	fb 01       	movw	r30, r22
     b3e:	e1 58       	subi	r30, 0x81	; 129
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	d8 01       	movw	r26, r16
     b44:	c7 01       	movw	r24, r14
     b46:	8f 77       	andi	r24, 0x7F	; 127
     b48:	90 70       	andi	r25, 0x00	; 0
     b4a:	a0 70       	andi	r26, 0x00	; 0
     b4c:	b0 70       	andi	r27, 0x00	; 0
     b4e:	80 34       	cpi	r24, 0x40	; 64
     b50:	91 05       	cpc	r25, r1
     b52:	a1 05       	cpc	r26, r1
     b54:	b1 05       	cpc	r27, r1
     b56:	39 f4       	brne	.+14     	; 0xb66 <__pack_f+0x144>
     b58:	e7 fe       	sbrs	r14, 7
     b5a:	0d c0       	rjmp	.+26     	; 0xb76 <__pack_f+0x154>
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x14c>
     b66:	8f e3       	ldi	r24, 0x3F	; 63
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	e8 0e       	add	r14, r24
     b70:	f9 1e       	adc	r15, r25
     b72:	0a 1f       	adc	r16, r26
     b74:	1b 1f       	adc	r17, r27
     b76:	17 ff       	sbrs	r17, 7
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <__pack_f+0x162>
     b7a:	16 95       	lsr	r17
     b7c:	07 95       	ror	r16
     b7e:	f7 94       	ror	r15
     b80:	e7 94       	ror	r14
     b82:	31 96       	adiw	r30, 0x01	; 1
     b84:	87 e0       	ldi	r24, 0x07	; 7
     b86:	16 95       	lsr	r17
     b88:	07 95       	ror	r16
     b8a:	f7 94       	ror	r15
     b8c:	e7 94       	ror	r14
     b8e:	8a 95       	dec	r24
     b90:	d1 f7       	brne	.-12     	; 0xb86 <__pack_f+0x164>
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <__pack_f+0x17c>
     b94:	ee 24       	eor	r14, r14
     b96:	ff 24       	eor	r15, r15
     b98:	87 01       	movw	r16, r14
     b9a:	ef ef       	ldi	r30, 0xFF	; 255
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	6e 2f       	mov	r22, r30
     ba0:	67 95       	ror	r22
     ba2:	66 27       	eor	r22, r22
     ba4:	67 95       	ror	r22
     ba6:	90 2f       	mov	r25, r16
     ba8:	9f 77       	andi	r25, 0x7F	; 127
     baa:	d7 94       	ror	r13
     bac:	dd 24       	eor	r13, r13
     bae:	d7 94       	ror	r13
     bb0:	8e 2f       	mov	r24, r30
     bb2:	86 95       	lsr	r24
     bb4:	49 2f       	mov	r20, r25
     bb6:	46 2b       	or	r20, r22
     bb8:	58 2f       	mov	r21, r24
     bba:	5d 29       	or	r21, r13
     bbc:	b7 01       	movw	r22, r14
     bbe:	ca 01       	movw	r24, r20
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	08 95       	ret

00000bcc <__unpack_f>:
     bcc:	fc 01       	movw	r30, r24
     bce:	db 01       	movw	r26, r22
     bd0:	40 81       	ld	r20, Z
     bd2:	51 81       	ldd	r21, Z+1	; 0x01
     bd4:	22 81       	ldd	r18, Z+2	; 0x02
     bd6:	62 2f       	mov	r22, r18
     bd8:	6f 77       	andi	r22, 0x7F	; 127
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	22 1f       	adc	r18, r18
     bde:	22 27       	eor	r18, r18
     be0:	22 1f       	adc	r18, r18
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	89 2f       	mov	r24, r25
     be6:	88 0f       	add	r24, r24
     be8:	82 2b       	or	r24, r18
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	99 1f       	adc	r25, r25
     bf0:	99 27       	eor	r25, r25
     bf2:	99 1f       	adc	r25, r25
     bf4:	11 96       	adiw	r26, 0x01	; 1
     bf6:	9c 93       	st	X, r25
     bf8:	11 97       	sbiw	r26, 0x01	; 1
     bfa:	21 15       	cp	r18, r1
     bfc:	31 05       	cpc	r19, r1
     bfe:	a9 f5       	brne	.+106    	; 0xc6a <__unpack_f+0x9e>
     c00:	41 15       	cp	r20, r1
     c02:	51 05       	cpc	r21, r1
     c04:	61 05       	cpc	r22, r1
     c06:	71 05       	cpc	r23, r1
     c08:	11 f4       	brne	.+4      	; 0xc0e <__unpack_f+0x42>
     c0a:	82 e0       	ldi	r24, 0x02	; 2
     c0c:	37 c0       	rjmp	.+110    	; 0xc7c <__unpack_f+0xb0>
     c0e:	82 e8       	ldi	r24, 0x82	; 130
     c10:	9f ef       	ldi	r25, 0xFF	; 255
     c12:	13 96       	adiw	r26, 0x03	; 3
     c14:	9c 93       	st	X, r25
     c16:	8e 93       	st	-X, r24
     c18:	12 97       	sbiw	r26, 0x02	; 2
     c1a:	9a 01       	movw	r18, r20
     c1c:	ab 01       	movw	r20, r22
     c1e:	67 e0       	ldi	r22, 0x07	; 7
     c20:	22 0f       	add	r18, r18
     c22:	33 1f       	adc	r19, r19
     c24:	44 1f       	adc	r20, r20
     c26:	55 1f       	adc	r21, r21
     c28:	6a 95       	dec	r22
     c2a:	d1 f7       	brne	.-12     	; 0xc20 <__unpack_f+0x54>
     c2c:	83 e0       	ldi	r24, 0x03	; 3
     c2e:	8c 93       	st	X, r24
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__unpack_f+0x80>
     c32:	22 0f       	add	r18, r18
     c34:	33 1f       	adc	r19, r19
     c36:	44 1f       	adc	r20, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	12 96       	adiw	r26, 0x02	; 2
     c3c:	8d 91       	ld	r24, X+
     c3e:	9c 91       	ld	r25, X
     c40:	13 97       	sbiw	r26, 0x03	; 3
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	13 96       	adiw	r26, 0x03	; 3
     c46:	9c 93       	st	X, r25
     c48:	8e 93       	st	-X, r24
     c4a:	12 97       	sbiw	r26, 0x02	; 2
     c4c:	20 30       	cpi	r18, 0x00	; 0
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	38 07       	cpc	r19, r24
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	48 07       	cpc	r20, r24
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	58 07       	cpc	r21, r24
     c5a:	58 f3       	brcs	.-42     	; 0xc32 <__unpack_f+0x66>
     c5c:	14 96       	adiw	r26, 0x04	; 4
     c5e:	2d 93       	st	X+, r18
     c60:	3d 93       	st	X+, r19
     c62:	4d 93       	st	X+, r20
     c64:	5c 93       	st	X, r21
     c66:	17 97       	sbiw	r26, 0x07	; 7
     c68:	08 95       	ret
     c6a:	2f 3f       	cpi	r18, 0xFF	; 255
     c6c:	31 05       	cpc	r19, r1
     c6e:	79 f4       	brne	.+30     	; 0xc8e <__unpack_f+0xc2>
     c70:	41 15       	cp	r20, r1
     c72:	51 05       	cpc	r21, r1
     c74:	61 05       	cpc	r22, r1
     c76:	71 05       	cpc	r23, r1
     c78:	19 f4       	brne	.+6      	; 0xc80 <__unpack_f+0xb4>
     c7a:	84 e0       	ldi	r24, 0x04	; 4
     c7c:	8c 93       	st	X, r24
     c7e:	08 95       	ret
     c80:	64 ff       	sbrs	r22, 4
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <__unpack_f+0xbe>
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	8c 93       	st	X, r24
     c88:	12 c0       	rjmp	.+36     	; 0xcae <__unpack_f+0xe2>
     c8a:	1c 92       	st	X, r1
     c8c:	10 c0       	rjmp	.+32     	; 0xcae <__unpack_f+0xe2>
     c8e:	2f 57       	subi	r18, 0x7F	; 127
     c90:	30 40       	sbci	r19, 0x00	; 0
     c92:	13 96       	adiw	r26, 0x03	; 3
     c94:	3c 93       	st	X, r19
     c96:	2e 93       	st	-X, r18
     c98:	12 97       	sbiw	r26, 0x02	; 2
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	8c 93       	st	X, r24
     c9e:	87 e0       	ldi	r24, 0x07	; 7
     ca0:	44 0f       	add	r20, r20
     ca2:	55 1f       	adc	r21, r21
     ca4:	66 1f       	adc	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	8a 95       	dec	r24
     caa:	d1 f7       	brne	.-12     	; 0xca0 <__unpack_f+0xd4>
     cac:	70 64       	ori	r23, 0x40	; 64
     cae:	14 96       	adiw	r26, 0x04	; 4
     cb0:	4d 93       	st	X+, r20
     cb2:	5d 93       	st	X+, r21
     cb4:	6d 93       	st	X+, r22
     cb6:	7c 93       	st	X, r23
     cb8:	17 97       	sbiw	r26, 0x07	; 7
     cba:	08 95       	ret

00000cbc <__fpcmp_parts_f>:
     cbc:	1f 93       	push	r17
     cbe:	dc 01       	movw	r26, r24
     cc0:	fb 01       	movw	r30, r22
     cc2:	9c 91       	ld	r25, X
     cc4:	92 30       	cpi	r25, 0x02	; 2
     cc6:	08 f4       	brcc	.+2      	; 0xcca <__fpcmp_parts_f+0xe>
     cc8:	47 c0       	rjmp	.+142    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cca:	80 81       	ld	r24, Z
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	08 f4       	brcc	.+2      	; 0xcd2 <__fpcmp_parts_f+0x16>
     cd0:	43 c0       	rjmp	.+134    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cd2:	94 30       	cpi	r25, 0x04	; 4
     cd4:	51 f4       	brne	.+20     	; 0xcea <__fpcmp_parts_f+0x2e>
     cd6:	11 96       	adiw	r26, 0x01	; 1
     cd8:	1c 91       	ld	r17, X
     cda:	84 30       	cpi	r24, 0x04	; 4
     cdc:	99 f5       	brne	.+102    	; 0xd44 <__fpcmp_parts_f+0x88>
     cde:	81 81       	ldd	r24, Z+1	; 0x01
     ce0:	68 2f       	mov	r22, r24
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	61 1b       	sub	r22, r17
     ce6:	71 09       	sbc	r23, r1
     ce8:	3f c0       	rjmp	.+126    	; 0xd68 <__fpcmp_parts_f+0xac>
     cea:	84 30       	cpi	r24, 0x04	; 4
     cec:	21 f0       	breq	.+8      	; 0xcf6 <__fpcmp_parts_f+0x3a>
     cee:	92 30       	cpi	r25, 0x02	; 2
     cf0:	31 f4       	brne	.+12     	; 0xcfe <__fpcmp_parts_f+0x42>
     cf2:	82 30       	cpi	r24, 0x02	; 2
     cf4:	b9 f1       	breq	.+110    	; 0xd64 <__fpcmp_parts_f+0xa8>
     cf6:	81 81       	ldd	r24, Z+1	; 0x01
     cf8:	88 23       	and	r24, r24
     cfa:	89 f1       	breq	.+98     	; 0xd5e <__fpcmp_parts_f+0xa2>
     cfc:	2d c0       	rjmp	.+90     	; 0xd58 <__fpcmp_parts_f+0x9c>
     cfe:	11 96       	adiw	r26, 0x01	; 1
     d00:	1c 91       	ld	r17, X
     d02:	11 97       	sbiw	r26, 0x01	; 1
     d04:	82 30       	cpi	r24, 0x02	; 2
     d06:	f1 f0       	breq	.+60     	; 0xd44 <__fpcmp_parts_f+0x88>
     d08:	81 81       	ldd	r24, Z+1	; 0x01
     d0a:	18 17       	cp	r17, r24
     d0c:	d9 f4       	brne	.+54     	; 0xd44 <__fpcmp_parts_f+0x88>
     d0e:	12 96       	adiw	r26, 0x02	; 2
     d10:	2d 91       	ld	r18, X+
     d12:	3c 91       	ld	r19, X
     d14:	13 97       	sbiw	r26, 0x03	; 3
     d16:	82 81       	ldd	r24, Z+2	; 0x02
     d18:	93 81       	ldd	r25, Z+3	; 0x03
     d1a:	82 17       	cp	r24, r18
     d1c:	93 07       	cpc	r25, r19
     d1e:	94 f0       	brlt	.+36     	; 0xd44 <__fpcmp_parts_f+0x88>
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	bc f0       	brlt	.+46     	; 0xd54 <__fpcmp_parts_f+0x98>
     d26:	14 96       	adiw	r26, 0x04	; 4
     d28:	8d 91       	ld	r24, X+
     d2a:	9d 91       	ld	r25, X+
     d2c:	0d 90       	ld	r0, X+
     d2e:	bc 91       	ld	r27, X
     d30:	a0 2d       	mov	r26, r0
     d32:	24 81       	ldd	r18, Z+4	; 0x04
     d34:	35 81       	ldd	r19, Z+5	; 0x05
     d36:	46 81       	ldd	r20, Z+6	; 0x06
     d38:	57 81       	ldd	r21, Z+7	; 0x07
     d3a:	28 17       	cp	r18, r24
     d3c:	39 07       	cpc	r19, r25
     d3e:	4a 07       	cpc	r20, r26
     d40:	5b 07       	cpc	r21, r27
     d42:	18 f4       	brcc	.+6      	; 0xd4a <__fpcmp_parts_f+0x8e>
     d44:	11 23       	and	r17, r17
     d46:	41 f0       	breq	.+16     	; 0xd58 <__fpcmp_parts_f+0x9c>
     d48:	0a c0       	rjmp	.+20     	; 0xd5e <__fpcmp_parts_f+0xa2>
     d4a:	82 17       	cp	r24, r18
     d4c:	93 07       	cpc	r25, r19
     d4e:	a4 07       	cpc	r26, r20
     d50:	b5 07       	cpc	r27, r21
     d52:	40 f4       	brcc	.+16     	; 0xd64 <__fpcmp_parts_f+0xa8>
     d54:	11 23       	and	r17, r17
     d56:	19 f0       	breq	.+6      	; 0xd5e <__fpcmp_parts_f+0xa2>
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <__fpcmp_parts_f+0xac>
     d5e:	6f ef       	ldi	r22, 0xFF	; 255
     d60:	7f ef       	ldi	r23, 0xFF	; 255
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__fpcmp_parts_f+0xac>
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	cb 01       	movw	r24, r22
     d6a:	1f 91       	pop	r17
     d6c:	08 95       	ret

00000d6e <GIE_Enable>:

#include "GIE_priv.h"
#include "GIE_int.h"

void GIE_Enable(void)
{
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
	SREG_REG |= (1<<I_Bit);
     d76:	af e5       	ldi	r26, 0x5F	; 95
     d78:	b0 e0       	ldi	r27, 0x00	; 0
     d7a:	ef e5       	ldi	r30, 0x5F	; 95
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	80 68       	ori	r24, 0x80	; 128
     d82:	8c 93       	st	X, r24
}
     d84:	cf 91       	pop	r28
     d86:	df 91       	pop	r29
     d88:	08 95       	ret

00000d8a <GIE_Disable>:

void GIE_Disable(void)
{
     d8a:	df 93       	push	r29
     d8c:	cf 93       	push	r28
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62
	SREG_REG &= ~(1<<I_Bit);
     d92:	af e5       	ldi	r26, 0x5F	; 95
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	ef e5       	ldi	r30, 0x5F	; 95
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	80 81       	ld	r24, Z
     d9c:	8f 77       	andi	r24, 0x7F	; 127
     d9e:	8c 93       	st	X, r24
}
     da0:	cf 91       	pop	r28
     da2:	df 91       	pop	r29
     da4:	08 95       	ret

00000da6 <DIO_voidSetPinDirection>:

#include "GPIO_Int.h"


void DIO_voidSetPinDirection(port* Ptr_PortId,u8 PIN_ID,u8 DIRECTION)
{
     da6:	df 93       	push	r29
     da8:	cf 93       	push	r28
     daa:	00 d0       	rcall	.+0      	; 0xdac <DIO_voidSetPinDirection+0x6>
     dac:	00 d0       	rcall	.+0      	; 0xdae <DIO_voidSetPinDirection+0x8>
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <DIO_voidSetPinDirection+0xa>
     db0:	cd b7       	in	r28, 0x3d	; 61
     db2:	de b7       	in	r29, 0x3e	; 62
     db4:	9a 83       	std	Y+2, r25	; 0x02
     db6:	89 83       	std	Y+1, r24	; 0x01
     db8:	6b 83       	std	Y+3, r22	; 0x03
     dba:	4c 83       	std	Y+4, r20	; 0x04
	switch(PIN_ID)
     dbc:	8b 81       	ldd	r24, Y+3	; 0x03
     dbe:	28 2f       	mov	r18, r24
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	3e 83       	std	Y+6, r19	; 0x06
     dc4:	2d 83       	std	Y+5, r18	; 0x05
     dc6:	8d 81       	ldd	r24, Y+5	; 0x05
     dc8:	9e 81       	ldd	r25, Y+6	; 0x06
     dca:	83 30       	cpi	r24, 0x03	; 3
     dcc:	91 05       	cpc	r25, r1
     dce:	09 f4       	brne	.+2      	; 0xdd2 <DIO_voidSetPinDirection+0x2c>
     dd0:	51 c0       	rjmp	.+162    	; 0xe74 <DIO_voidSetPinDirection+0xce>
     dd2:	2d 81       	ldd	r18, Y+5	; 0x05
     dd4:	3e 81       	ldd	r19, Y+6	; 0x06
     dd6:	24 30       	cpi	r18, 0x04	; 4
     dd8:	31 05       	cpc	r19, r1
     dda:	7c f4       	brge	.+30     	; 0xdfa <DIO_voidSetPinDirection+0x54>
     ddc:	8d 81       	ldd	r24, Y+5	; 0x05
     dde:	9e 81       	ldd	r25, Y+6	; 0x06
     de0:	81 30       	cpi	r24, 0x01	; 1
     de2:	91 05       	cpc	r25, r1
     de4:	71 f1       	breq	.+92     	; 0xe42 <DIO_voidSetPinDirection+0x9c>
     de6:	2d 81       	ldd	r18, Y+5	; 0x05
     de8:	3e 81       	ldd	r19, Y+6	; 0x06
     dea:	22 30       	cpi	r18, 0x02	; 2
     dec:	31 05       	cpc	r19, r1
     dee:	ac f5       	brge	.+106    	; 0xe5a <DIO_voidSetPinDirection+0xb4>
     df0:	8d 81       	ldd	r24, Y+5	; 0x05
     df2:	9e 81       	ldd	r25, Y+6	; 0x06
     df4:	00 97       	sbiw	r24, 0x00	; 0
     df6:	d1 f0       	breq	.+52     	; 0xe2c <DIO_voidSetPinDirection+0x86>
     df8:	81 c0       	rjmp	.+258    	; 0xefc <DIO_voidSetPinDirection+0x156>
     dfa:	2d 81       	ldd	r18, Y+5	; 0x05
     dfc:	3e 81       	ldd	r19, Y+6	; 0x06
     dfe:	25 30       	cpi	r18, 0x05	; 5
     e00:	31 05       	cpc	r19, r1
     e02:	09 f4       	brne	.+2      	; 0xe06 <DIO_voidSetPinDirection+0x60>
     e04:	52 c0       	rjmp	.+164    	; 0xeaa <DIO_voidSetPinDirection+0x104>
     e06:	8d 81       	ldd	r24, Y+5	; 0x05
     e08:	9e 81       	ldd	r25, Y+6	; 0x06
     e0a:	85 30       	cpi	r24, 0x05	; 5
     e0c:	91 05       	cpc	r25, r1
     e0e:	0c f4       	brge	.+2      	; 0xe12 <DIO_voidSetPinDirection+0x6c>
     e10:	3f c0       	rjmp	.+126    	; 0xe90 <DIO_voidSetPinDirection+0xea>
     e12:	2d 81       	ldd	r18, Y+5	; 0x05
     e14:	3e 81       	ldd	r19, Y+6	; 0x06
     e16:	26 30       	cpi	r18, 0x06	; 6
     e18:	31 05       	cpc	r19, r1
     e1a:	09 f4       	brne	.+2      	; 0xe1e <DIO_voidSetPinDirection+0x78>
     e1c:	54 c0       	rjmp	.+168    	; 0xec6 <DIO_voidSetPinDirection+0x120>
     e1e:	8d 81       	ldd	r24, Y+5	; 0x05
     e20:	9e 81       	ldd	r25, Y+6	; 0x06
     e22:	87 30       	cpi	r24, 0x07	; 7
     e24:	91 05       	cpc	r25, r1
     e26:	09 f4       	brne	.+2      	; 0xe2a <DIO_voidSetPinDirection+0x84>
     e28:	5d c0       	rjmp	.+186    	; 0xee4 <DIO_voidSetPinDirection+0x13e>
     e2a:	68 c0       	rjmp	.+208    	; 0xefc <DIO_voidSetPinDirection+0x156>
	{
	case Pin0:
		Ptr_PortId->DDR_reg.bits.bit0 = DIRECTION;
     e2c:	8c 81       	ldd	r24, Y+4	; 0x04
     e2e:	81 70       	andi	r24, 0x01	; 1
     e30:	e9 81       	ldd	r30, Y+1	; 0x01
     e32:	fa 81       	ldd	r31, Y+2	; 0x02
     e34:	98 2f       	mov	r25, r24
     e36:	91 70       	andi	r25, 0x01	; 1
     e38:	81 81       	ldd	r24, Z+1	; 0x01
     e3a:	8e 7f       	andi	r24, 0xFE	; 254
     e3c:	89 2b       	or	r24, r25
     e3e:	81 83       	std	Z+1, r24	; 0x01
     e40:	5d c0       	rjmp	.+186    	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin1:
		Ptr_PortId->DDR_reg.bits.bit1 = DIRECTION;
     e42:	8c 81       	ldd	r24, Y+4	; 0x04
     e44:	81 70       	andi	r24, 0x01	; 1
     e46:	e9 81       	ldd	r30, Y+1	; 0x01
     e48:	fa 81       	ldd	r31, Y+2	; 0x02
     e4a:	81 70       	andi	r24, 0x01	; 1
     e4c:	98 2f       	mov	r25, r24
     e4e:	99 0f       	add	r25, r25
     e50:	81 81       	ldd	r24, Z+1	; 0x01
     e52:	8d 7f       	andi	r24, 0xFD	; 253
     e54:	89 2b       	or	r24, r25
     e56:	81 83       	std	Z+1, r24	; 0x01
     e58:	51 c0       	rjmp	.+162    	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin2:
		Ptr_PortId->DDR_reg.bits.bit2 = DIRECTION;
     e5a:	8c 81       	ldd	r24, Y+4	; 0x04
     e5c:	81 70       	andi	r24, 0x01	; 1
     e5e:	e9 81       	ldd	r30, Y+1	; 0x01
     e60:	fa 81       	ldd	r31, Y+2	; 0x02
     e62:	81 70       	andi	r24, 0x01	; 1
     e64:	98 2f       	mov	r25, r24
     e66:	99 0f       	add	r25, r25
     e68:	99 0f       	add	r25, r25
     e6a:	81 81       	ldd	r24, Z+1	; 0x01
     e6c:	8b 7f       	andi	r24, 0xFB	; 251
     e6e:	89 2b       	or	r24, r25
     e70:	81 83       	std	Z+1, r24	; 0x01
     e72:	44 c0       	rjmp	.+136    	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin3:
		Ptr_PortId->DDR_reg.bits.bit3 = DIRECTION;
     e74:	8c 81       	ldd	r24, Y+4	; 0x04
     e76:	81 70       	andi	r24, 0x01	; 1
     e78:	e9 81       	ldd	r30, Y+1	; 0x01
     e7a:	fa 81       	ldd	r31, Y+2	; 0x02
     e7c:	81 70       	andi	r24, 0x01	; 1
     e7e:	98 2f       	mov	r25, r24
     e80:	99 0f       	add	r25, r25
     e82:	99 0f       	add	r25, r25
     e84:	99 0f       	add	r25, r25
     e86:	81 81       	ldd	r24, Z+1	; 0x01
     e88:	87 7f       	andi	r24, 0xF7	; 247
     e8a:	89 2b       	or	r24, r25
     e8c:	81 83       	std	Z+1, r24	; 0x01
     e8e:	36 c0       	rjmp	.+108    	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin4:
		Ptr_PortId->DDR_reg.bits.bit4 = DIRECTION;
     e90:	8c 81       	ldd	r24, Y+4	; 0x04
     e92:	81 70       	andi	r24, 0x01	; 1
     e94:	e9 81       	ldd	r30, Y+1	; 0x01
     e96:	fa 81       	ldd	r31, Y+2	; 0x02
     e98:	81 70       	andi	r24, 0x01	; 1
     e9a:	98 2f       	mov	r25, r24
     e9c:	92 95       	swap	r25
     e9e:	90 7f       	andi	r25, 0xF0	; 240
     ea0:	81 81       	ldd	r24, Z+1	; 0x01
     ea2:	8f 7e       	andi	r24, 0xEF	; 239
     ea4:	89 2b       	or	r24, r25
     ea6:	81 83       	std	Z+1, r24	; 0x01
     ea8:	29 c0       	rjmp	.+82     	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin5:
		Ptr_PortId->DDR_reg.bits.bit5 = DIRECTION;
     eaa:	8c 81       	ldd	r24, Y+4	; 0x04
     eac:	81 70       	andi	r24, 0x01	; 1
     eae:	e9 81       	ldd	r30, Y+1	; 0x01
     eb0:	fa 81       	ldd	r31, Y+2	; 0x02
     eb2:	81 70       	andi	r24, 0x01	; 1
     eb4:	98 2f       	mov	r25, r24
     eb6:	92 95       	swap	r25
     eb8:	99 0f       	add	r25, r25
     eba:	90 7e       	andi	r25, 0xE0	; 224
     ebc:	81 81       	ldd	r24, Z+1	; 0x01
     ebe:	8f 7d       	andi	r24, 0xDF	; 223
     ec0:	89 2b       	or	r24, r25
     ec2:	81 83       	std	Z+1, r24	; 0x01
     ec4:	1b c0       	rjmp	.+54     	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin6:
		Ptr_PortId->DDR_reg.bits.bit6 = DIRECTION;
     ec6:	8c 81       	ldd	r24, Y+4	; 0x04
     ec8:	81 70       	andi	r24, 0x01	; 1
     eca:	e9 81       	ldd	r30, Y+1	; 0x01
     ecc:	fa 81       	ldd	r31, Y+2	; 0x02
     ece:	81 70       	andi	r24, 0x01	; 1
     ed0:	98 2f       	mov	r25, r24
     ed2:	92 95       	swap	r25
     ed4:	99 0f       	add	r25, r25
     ed6:	99 0f       	add	r25, r25
     ed8:	90 7c       	andi	r25, 0xC0	; 192
     eda:	81 81       	ldd	r24, Z+1	; 0x01
     edc:	8f 7b       	andi	r24, 0xBF	; 191
     ede:	89 2b       	or	r24, r25
     ee0:	81 83       	std	Z+1, r24	; 0x01
     ee2:	0c c0       	rjmp	.+24     	; 0xefc <DIO_voidSetPinDirection+0x156>
		break;
	case pin7:
		Ptr_PortId->DDR_reg.bits.bit7 = DIRECTION;
     ee4:	8c 81       	ldd	r24, Y+4	; 0x04
     ee6:	81 70       	andi	r24, 0x01	; 1
     ee8:	e9 81       	ldd	r30, Y+1	; 0x01
     eea:	fa 81       	ldd	r31, Y+2	; 0x02
     eec:	98 2f       	mov	r25, r24
     eee:	97 95       	ror	r25
     ef0:	99 27       	eor	r25, r25
     ef2:	97 95       	ror	r25
     ef4:	81 81       	ldd	r24, Z+1	; 0x01
     ef6:	8f 77       	andi	r24, 0x7F	; 127
     ef8:	89 2b       	or	r24, r25
     efa:	81 83       	std	Z+1, r24	; 0x01
		break;
	}
}
     efc:	26 96       	adiw	r28, 0x06	; 6
     efe:	0f b6       	in	r0, 0x3f	; 63
     f00:	f8 94       	cli
     f02:	de bf       	out	0x3e, r29	; 62
     f04:	0f be       	out	0x3f, r0	; 63
     f06:	cd bf       	out	0x3d, r28	; 61
     f08:	cf 91       	pop	r28
     f0a:	df 91       	pop	r29
     f0c:	08 95       	ret

00000f0e <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(port* Ptr_PortId, u8 PIN_ID, u8 PIN_VAL)
{
     f0e:	df 93       	push	r29
     f10:	cf 93       	push	r28
     f12:	00 d0       	rcall	.+0      	; 0xf14 <DIO_voidSetPinValue+0x6>
     f14:	00 d0       	rcall	.+0      	; 0xf16 <DIO_voidSetPinValue+0x8>
     f16:	00 d0       	rcall	.+0      	; 0xf18 <DIO_voidSetPinValue+0xa>
     f18:	cd b7       	in	r28, 0x3d	; 61
     f1a:	de b7       	in	r29, 0x3e	; 62
     f1c:	9a 83       	std	Y+2, r25	; 0x02
     f1e:	89 83       	std	Y+1, r24	; 0x01
     f20:	6b 83       	std	Y+3, r22	; 0x03
     f22:	4c 83       	std	Y+4, r20	; 0x04
	switch(PIN_ID)
     f24:	8b 81       	ldd	r24, Y+3	; 0x03
     f26:	28 2f       	mov	r18, r24
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	3e 83       	std	Y+6, r19	; 0x06
     f2c:	2d 83       	std	Y+5, r18	; 0x05
     f2e:	8d 81       	ldd	r24, Y+5	; 0x05
     f30:	9e 81       	ldd	r25, Y+6	; 0x06
     f32:	83 30       	cpi	r24, 0x03	; 3
     f34:	91 05       	cpc	r25, r1
     f36:	09 f4       	brne	.+2      	; 0xf3a <DIO_voidSetPinValue+0x2c>
     f38:	51 c0       	rjmp	.+162    	; 0xfdc <DIO_voidSetPinValue+0xce>
     f3a:	2d 81       	ldd	r18, Y+5	; 0x05
     f3c:	3e 81       	ldd	r19, Y+6	; 0x06
     f3e:	24 30       	cpi	r18, 0x04	; 4
     f40:	31 05       	cpc	r19, r1
     f42:	7c f4       	brge	.+30     	; 0xf62 <DIO_voidSetPinValue+0x54>
     f44:	8d 81       	ldd	r24, Y+5	; 0x05
     f46:	9e 81       	ldd	r25, Y+6	; 0x06
     f48:	81 30       	cpi	r24, 0x01	; 1
     f4a:	91 05       	cpc	r25, r1
     f4c:	71 f1       	breq	.+92     	; 0xfaa <DIO_voidSetPinValue+0x9c>
     f4e:	2d 81       	ldd	r18, Y+5	; 0x05
     f50:	3e 81       	ldd	r19, Y+6	; 0x06
     f52:	22 30       	cpi	r18, 0x02	; 2
     f54:	31 05       	cpc	r19, r1
     f56:	ac f5       	brge	.+106    	; 0xfc2 <DIO_voidSetPinValue+0xb4>
     f58:	8d 81       	ldd	r24, Y+5	; 0x05
     f5a:	9e 81       	ldd	r25, Y+6	; 0x06
     f5c:	00 97       	sbiw	r24, 0x00	; 0
     f5e:	d1 f0       	breq	.+52     	; 0xf94 <DIO_voidSetPinValue+0x86>
     f60:	81 c0       	rjmp	.+258    	; 0x1064 <DIO_voidSetPinValue+0x156>
     f62:	2d 81       	ldd	r18, Y+5	; 0x05
     f64:	3e 81       	ldd	r19, Y+6	; 0x06
     f66:	25 30       	cpi	r18, 0x05	; 5
     f68:	31 05       	cpc	r19, r1
     f6a:	09 f4       	brne	.+2      	; 0xf6e <DIO_voidSetPinValue+0x60>
     f6c:	52 c0       	rjmp	.+164    	; 0x1012 <DIO_voidSetPinValue+0x104>
     f6e:	8d 81       	ldd	r24, Y+5	; 0x05
     f70:	9e 81       	ldd	r25, Y+6	; 0x06
     f72:	85 30       	cpi	r24, 0x05	; 5
     f74:	91 05       	cpc	r25, r1
     f76:	0c f4       	brge	.+2      	; 0xf7a <DIO_voidSetPinValue+0x6c>
     f78:	3f c0       	rjmp	.+126    	; 0xff8 <DIO_voidSetPinValue+0xea>
     f7a:	2d 81       	ldd	r18, Y+5	; 0x05
     f7c:	3e 81       	ldd	r19, Y+6	; 0x06
     f7e:	26 30       	cpi	r18, 0x06	; 6
     f80:	31 05       	cpc	r19, r1
     f82:	09 f4       	brne	.+2      	; 0xf86 <DIO_voidSetPinValue+0x78>
     f84:	54 c0       	rjmp	.+168    	; 0x102e <DIO_voidSetPinValue+0x120>
     f86:	8d 81       	ldd	r24, Y+5	; 0x05
     f88:	9e 81       	ldd	r25, Y+6	; 0x06
     f8a:	87 30       	cpi	r24, 0x07	; 7
     f8c:	91 05       	cpc	r25, r1
     f8e:	09 f4       	brne	.+2      	; 0xf92 <DIO_voidSetPinValue+0x84>
     f90:	5d c0       	rjmp	.+186    	; 0x104c <DIO_voidSetPinValue+0x13e>
     f92:	68 c0       	rjmp	.+208    	; 0x1064 <DIO_voidSetPinValue+0x156>
	{
	case Pin0:
		Ptr_PortId->PORT_reg.bits.bit0 = PIN_VAL;
     f94:	8c 81       	ldd	r24, Y+4	; 0x04
     f96:	81 70       	andi	r24, 0x01	; 1
     f98:	e9 81       	ldd	r30, Y+1	; 0x01
     f9a:	fa 81       	ldd	r31, Y+2	; 0x02
     f9c:	98 2f       	mov	r25, r24
     f9e:	91 70       	andi	r25, 0x01	; 1
     fa0:	82 81       	ldd	r24, Z+2	; 0x02
     fa2:	8e 7f       	andi	r24, 0xFE	; 254
     fa4:	89 2b       	or	r24, r25
     fa6:	82 83       	std	Z+2, r24	; 0x02
     fa8:	5d c0       	rjmp	.+186    	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin1:
		Ptr_PortId->PORT_reg.bits.bit1 = PIN_VAL;
     faa:	8c 81       	ldd	r24, Y+4	; 0x04
     fac:	81 70       	andi	r24, 0x01	; 1
     fae:	e9 81       	ldd	r30, Y+1	; 0x01
     fb0:	fa 81       	ldd	r31, Y+2	; 0x02
     fb2:	81 70       	andi	r24, 0x01	; 1
     fb4:	98 2f       	mov	r25, r24
     fb6:	99 0f       	add	r25, r25
     fb8:	82 81       	ldd	r24, Z+2	; 0x02
     fba:	8d 7f       	andi	r24, 0xFD	; 253
     fbc:	89 2b       	or	r24, r25
     fbe:	82 83       	std	Z+2, r24	; 0x02
     fc0:	51 c0       	rjmp	.+162    	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin2:
		Ptr_PortId->PORT_reg.bits.bit2 = PIN_VAL;
     fc2:	8c 81       	ldd	r24, Y+4	; 0x04
     fc4:	81 70       	andi	r24, 0x01	; 1
     fc6:	e9 81       	ldd	r30, Y+1	; 0x01
     fc8:	fa 81       	ldd	r31, Y+2	; 0x02
     fca:	81 70       	andi	r24, 0x01	; 1
     fcc:	98 2f       	mov	r25, r24
     fce:	99 0f       	add	r25, r25
     fd0:	99 0f       	add	r25, r25
     fd2:	82 81       	ldd	r24, Z+2	; 0x02
     fd4:	8b 7f       	andi	r24, 0xFB	; 251
     fd6:	89 2b       	or	r24, r25
     fd8:	82 83       	std	Z+2, r24	; 0x02
     fda:	44 c0       	rjmp	.+136    	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin3:
		Ptr_PortId->PORT_reg.bits.bit3 = PIN_VAL;
     fdc:	8c 81       	ldd	r24, Y+4	; 0x04
     fde:	81 70       	andi	r24, 0x01	; 1
     fe0:	e9 81       	ldd	r30, Y+1	; 0x01
     fe2:	fa 81       	ldd	r31, Y+2	; 0x02
     fe4:	81 70       	andi	r24, 0x01	; 1
     fe6:	98 2f       	mov	r25, r24
     fe8:	99 0f       	add	r25, r25
     fea:	99 0f       	add	r25, r25
     fec:	99 0f       	add	r25, r25
     fee:	82 81       	ldd	r24, Z+2	; 0x02
     ff0:	87 7f       	andi	r24, 0xF7	; 247
     ff2:	89 2b       	or	r24, r25
     ff4:	82 83       	std	Z+2, r24	; 0x02
     ff6:	36 c0       	rjmp	.+108    	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin4:
		Ptr_PortId->PORT_reg.bits.bit4 = PIN_VAL;
     ff8:	8c 81       	ldd	r24, Y+4	; 0x04
     ffa:	81 70       	andi	r24, 0x01	; 1
     ffc:	e9 81       	ldd	r30, Y+1	; 0x01
     ffe:	fa 81       	ldd	r31, Y+2	; 0x02
    1000:	81 70       	andi	r24, 0x01	; 1
    1002:	98 2f       	mov	r25, r24
    1004:	92 95       	swap	r25
    1006:	90 7f       	andi	r25, 0xF0	; 240
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	8f 7e       	andi	r24, 0xEF	; 239
    100c:	89 2b       	or	r24, r25
    100e:	82 83       	std	Z+2, r24	; 0x02
    1010:	29 c0       	rjmp	.+82     	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin5:
		Ptr_PortId->PORT_reg.bits.bit5 = PIN_VAL;
    1012:	8c 81       	ldd	r24, Y+4	; 0x04
    1014:	81 70       	andi	r24, 0x01	; 1
    1016:	e9 81       	ldd	r30, Y+1	; 0x01
    1018:	fa 81       	ldd	r31, Y+2	; 0x02
    101a:	81 70       	andi	r24, 0x01	; 1
    101c:	98 2f       	mov	r25, r24
    101e:	92 95       	swap	r25
    1020:	99 0f       	add	r25, r25
    1022:	90 7e       	andi	r25, 0xE0	; 224
    1024:	82 81       	ldd	r24, Z+2	; 0x02
    1026:	8f 7d       	andi	r24, 0xDF	; 223
    1028:	89 2b       	or	r24, r25
    102a:	82 83       	std	Z+2, r24	; 0x02
    102c:	1b c0       	rjmp	.+54     	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin6:
		Ptr_PortId->PORT_reg.bits.bit6 = PIN_VAL;
    102e:	8c 81       	ldd	r24, Y+4	; 0x04
    1030:	81 70       	andi	r24, 0x01	; 1
    1032:	e9 81       	ldd	r30, Y+1	; 0x01
    1034:	fa 81       	ldd	r31, Y+2	; 0x02
    1036:	81 70       	andi	r24, 0x01	; 1
    1038:	98 2f       	mov	r25, r24
    103a:	92 95       	swap	r25
    103c:	99 0f       	add	r25, r25
    103e:	99 0f       	add	r25, r25
    1040:	90 7c       	andi	r25, 0xC0	; 192
    1042:	82 81       	ldd	r24, Z+2	; 0x02
    1044:	8f 7b       	andi	r24, 0xBF	; 191
    1046:	89 2b       	or	r24, r25
    1048:	82 83       	std	Z+2, r24	; 0x02
    104a:	0c c0       	rjmp	.+24     	; 0x1064 <DIO_voidSetPinValue+0x156>
		break;
	case pin7:
		Ptr_PortId->PORT_reg.bits.bit7 = PIN_VAL;
    104c:	8c 81       	ldd	r24, Y+4	; 0x04
    104e:	81 70       	andi	r24, 0x01	; 1
    1050:	e9 81       	ldd	r30, Y+1	; 0x01
    1052:	fa 81       	ldd	r31, Y+2	; 0x02
    1054:	98 2f       	mov	r25, r24
    1056:	97 95       	ror	r25
    1058:	99 27       	eor	r25, r25
    105a:	97 95       	ror	r25
    105c:	82 81       	ldd	r24, Z+2	; 0x02
    105e:	8f 77       	andi	r24, 0x7F	; 127
    1060:	89 2b       	or	r24, r25
    1062:	82 83       	std	Z+2, r24	; 0x02
		break;
	}
}
    1064:	26 96       	adiw	r28, 0x06	; 6
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	cf 91       	pop	r28
    1072:	df 91       	pop	r29
    1074:	08 95       	ret

00001076 <DIO_voidGetPinValue>:

u8 DIO_voidGetPinValue(port* Ptr_PortId, u8 PIN_ID)
{
    1076:	df 93       	push	r29
    1078:	cf 93       	push	r28
    107a:	00 d0       	rcall	.+0      	; 0x107c <DIO_voidGetPinValue+0x6>
    107c:	00 d0       	rcall	.+0      	; 0x107e <DIO_voidGetPinValue+0x8>
    107e:	00 d0       	rcall	.+0      	; 0x1080 <DIO_voidGetPinValue+0xa>
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	9b 83       	std	Y+3, r25	; 0x03
    1086:	8a 83       	std	Y+2, r24	; 0x02
    1088:	6c 83       	std	Y+4, r22	; 0x04
	u8 u8PinValue;

	switch(PIN_ID)
    108a:	8c 81       	ldd	r24, Y+4	; 0x04
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	3e 83       	std	Y+6, r19	; 0x06
    1092:	2d 83       	std	Y+5, r18	; 0x05
    1094:	8d 81       	ldd	r24, Y+5	; 0x05
    1096:	9e 81       	ldd	r25, Y+6	; 0x06
    1098:	83 30       	cpi	r24, 0x03	; 3
    109a:	91 05       	cpc	r25, r1
    109c:	09 f4       	brne	.+2      	; 0x10a0 <DIO_voidGetPinValue+0x2a>
    109e:	3e c0       	rjmp	.+124    	; 0x111c <DIO_voidGetPinValue+0xa6>
    10a0:	2d 81       	ldd	r18, Y+5	; 0x05
    10a2:	3e 81       	ldd	r19, Y+6	; 0x06
    10a4:	24 30       	cpi	r18, 0x04	; 4
    10a6:	31 05       	cpc	r19, r1
    10a8:	7c f4       	brge	.+30     	; 0x10c8 <DIO_voidGetPinValue+0x52>
    10aa:	8d 81       	ldd	r24, Y+5	; 0x05
    10ac:	9e 81       	ldd	r25, Y+6	; 0x06
    10ae:	81 30       	cpi	r24, 0x01	; 1
    10b0:	91 05       	cpc	r25, r1
    10b2:	29 f1       	breq	.+74     	; 0x10fe <DIO_voidGetPinValue+0x88>
    10b4:	2d 81       	ldd	r18, Y+5	; 0x05
    10b6:	3e 81       	ldd	r19, Y+6	; 0x06
    10b8:	22 30       	cpi	r18, 0x02	; 2
    10ba:	31 05       	cpc	r19, r1
    10bc:	3c f5       	brge	.+78     	; 0x110c <DIO_voidGetPinValue+0x96>
    10be:	8d 81       	ldd	r24, Y+5	; 0x05
    10c0:	9e 81       	ldd	r25, Y+6	; 0x06
    10c2:	00 97       	sbiw	r24, 0x00	; 0
    10c4:	b1 f0       	breq	.+44     	; 0x10f2 <DIO_voidGetPinValue+0x7c>
    10c6:	55 c0       	rjmp	.+170    	; 0x1172 <DIO_voidGetPinValue+0xfc>
    10c8:	2d 81       	ldd	r18, Y+5	; 0x05
    10ca:	3e 81       	ldd	r19, Y+6	; 0x06
    10cc:	25 30       	cpi	r18, 0x05	; 5
    10ce:	31 05       	cpc	r19, r1
    10d0:	b1 f1       	breq	.+108    	; 0x113e <DIO_voidGetPinValue+0xc8>
    10d2:	8d 81       	ldd	r24, Y+5	; 0x05
    10d4:	9e 81       	ldd	r25, Y+6	; 0x06
    10d6:	85 30       	cpi	r24, 0x05	; 5
    10d8:	91 05       	cpc	r25, r1
    10da:	4c f1       	brlt	.+82     	; 0x112e <DIO_voidGetPinValue+0xb8>
    10dc:	2d 81       	ldd	r18, Y+5	; 0x05
    10de:	3e 81       	ldd	r19, Y+6	; 0x06
    10e0:	26 30       	cpi	r18, 0x06	; 6
    10e2:	31 05       	cpc	r19, r1
    10e4:	a9 f1       	breq	.+106    	; 0x1150 <DIO_voidGetPinValue+0xda>
    10e6:	8d 81       	ldd	r24, Y+5	; 0x05
    10e8:	9e 81       	ldd	r25, Y+6	; 0x06
    10ea:	87 30       	cpi	r24, 0x07	; 7
    10ec:	91 05       	cpc	r25, r1
    10ee:	d1 f1       	breq	.+116    	; 0x1164 <DIO_voidGetPinValue+0xee>
    10f0:	40 c0       	rjmp	.+128    	; 0x1172 <DIO_voidGetPinValue+0xfc>
	{
	case Pin0:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit0;
    10f2:	ea 81       	ldd	r30, Y+2	; 0x02
    10f4:	fb 81       	ldd	r31, Y+3	; 0x03
    10f6:	80 81       	ld	r24, Z
    10f8:	81 70       	andi	r24, 0x01	; 1
    10fa:	89 83       	std	Y+1, r24	; 0x01
    10fc:	3a c0       	rjmp	.+116    	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin1:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit1;
    10fe:	ea 81       	ldd	r30, Y+2	; 0x02
    1100:	fb 81       	ldd	r31, Y+3	; 0x03
    1102:	80 81       	ld	r24, Z
    1104:	86 95       	lsr	r24
    1106:	81 70       	andi	r24, 0x01	; 1
    1108:	89 83       	std	Y+1, r24	; 0x01
    110a:	33 c0       	rjmp	.+102    	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin2:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit2;
    110c:	ea 81       	ldd	r30, Y+2	; 0x02
    110e:	fb 81       	ldd	r31, Y+3	; 0x03
    1110:	80 81       	ld	r24, Z
    1112:	86 95       	lsr	r24
    1114:	86 95       	lsr	r24
    1116:	81 70       	andi	r24, 0x01	; 1
    1118:	89 83       	std	Y+1, r24	; 0x01
    111a:	2b c0       	rjmp	.+86     	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin3:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit3;
    111c:	ea 81       	ldd	r30, Y+2	; 0x02
    111e:	fb 81       	ldd	r31, Y+3	; 0x03
    1120:	80 81       	ld	r24, Z
    1122:	86 95       	lsr	r24
    1124:	86 95       	lsr	r24
    1126:	86 95       	lsr	r24
    1128:	81 70       	andi	r24, 0x01	; 1
    112a:	89 83       	std	Y+1, r24	; 0x01
    112c:	22 c0       	rjmp	.+68     	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin4:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit4;
    112e:	ea 81       	ldd	r30, Y+2	; 0x02
    1130:	fb 81       	ldd	r31, Y+3	; 0x03
    1132:	80 81       	ld	r24, Z
    1134:	82 95       	swap	r24
    1136:	8f 70       	andi	r24, 0x0F	; 15
    1138:	81 70       	andi	r24, 0x01	; 1
    113a:	89 83       	std	Y+1, r24	; 0x01
    113c:	1a c0       	rjmp	.+52     	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin5:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit5;
    113e:	ea 81       	ldd	r30, Y+2	; 0x02
    1140:	fb 81       	ldd	r31, Y+3	; 0x03
    1142:	80 81       	ld	r24, Z
    1144:	82 95       	swap	r24
    1146:	86 95       	lsr	r24
    1148:	87 70       	andi	r24, 0x07	; 7
    114a:	81 70       	andi	r24, 0x01	; 1
    114c:	89 83       	std	Y+1, r24	; 0x01
    114e:	11 c0       	rjmp	.+34     	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin6:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit6;
    1150:	ea 81       	ldd	r30, Y+2	; 0x02
    1152:	fb 81       	ldd	r31, Y+3	; 0x03
    1154:	80 81       	ld	r24, Z
    1156:	82 95       	swap	r24
    1158:	86 95       	lsr	r24
    115a:	86 95       	lsr	r24
    115c:	83 70       	andi	r24, 0x03	; 3
    115e:	81 70       	andi	r24, 0x01	; 1
    1160:	89 83       	std	Y+1, r24	; 0x01
    1162:	07 c0       	rjmp	.+14     	; 0x1172 <DIO_voidGetPinValue+0xfc>
		break;
	case pin7:
		u8PinValue = Ptr_PortId->PIN_reg.bits.bit7;
    1164:	ea 81       	ldd	r30, Y+2	; 0x02
    1166:	fb 81       	ldd	r31, Y+3	; 0x03
    1168:	80 81       	ld	r24, Z
    116a:	88 1f       	adc	r24, r24
    116c:	88 27       	eor	r24, r24
    116e:	88 1f       	adc	r24, r24
    1170:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return u8PinValue;
    1172:	89 81       	ldd	r24, Y+1	; 0x01
}
    1174:	26 96       	adiw	r28, 0x06	; 6
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	cf 91       	pop	r28
    1182:	df 91       	pop	r29
    1184:	08 95       	ret

00001186 <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(port* Ptr_PortId, u8 Copy_u8Direction)
{
    1186:	df 93       	push	r29
    1188:	cf 93       	push	r28
    118a:	00 d0       	rcall	.+0      	; 0x118c <DIO_voidSetPortDirection+0x6>
    118c:	0f 92       	push	r0
    118e:	cd b7       	in	r28, 0x3d	; 61
    1190:	de b7       	in	r29, 0x3e	; 62
    1192:	9a 83       	std	Y+2, r25	; 0x02
    1194:	89 83       	std	Y+1, r24	; 0x01
    1196:	6b 83       	std	Y+3, r22	; 0x03
	Ptr_PortId->DDR_reg.Full_Reg = Copy_u8Direction;
    1198:	e9 81       	ldd	r30, Y+1	; 0x01
    119a:	fa 81       	ldd	r31, Y+2	; 0x02
    119c:	8b 81       	ldd	r24, Y+3	; 0x03
    119e:	81 83       	std	Z+1, r24	; 0x01
}
    11a0:	0f 90       	pop	r0
    11a2:	0f 90       	pop	r0
    11a4:	0f 90       	pop	r0
    11a6:	cf 91       	pop	r28
    11a8:	df 91       	pop	r29
    11aa:	08 95       	ret

000011ac <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(port* Ptr_PortId, u8 Copy_u8Value)
{
    11ac:	df 93       	push	r29
    11ae:	cf 93       	push	r28
    11b0:	00 d0       	rcall	.+0      	; 0x11b2 <DIO_voidSetPortValue+0x6>
    11b2:	0f 92       	push	r0
    11b4:	cd b7       	in	r28, 0x3d	; 61
    11b6:	de b7       	in	r29, 0x3e	; 62
    11b8:	9a 83       	std	Y+2, r25	; 0x02
    11ba:	89 83       	std	Y+1, r24	; 0x01
    11bc:	6b 83       	std	Y+3, r22	; 0x03
	Ptr_PortId->PORT_reg.Full_Reg = Copy_u8Value;
    11be:	e9 81       	ldd	r30, Y+1	; 0x01
    11c0:	fa 81       	ldd	r31, Y+2	; 0x02
    11c2:	8b 81       	ldd	r24, Y+3	; 0x03
    11c4:	82 83       	std	Z+2, r24	; 0x02
}
    11c6:	0f 90       	pop	r0
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	cf 91       	pop	r28
    11ce:	df 91       	pop	r29
    11d0:	08 95       	ret

000011d2 <DIO_voidGetPortValue>:

u8 DIO_voidGetPortValue(port* Ptr_PortId)
{
    11d2:	df 93       	push	r29
    11d4:	cf 93       	push	r28
    11d6:	00 d0       	rcall	.+0      	; 0x11d8 <DIO_voidGetPortValue+0x6>
    11d8:	cd b7       	in	r28, 0x3d	; 61
    11da:	de b7       	in	r29, 0x3e	; 62
    11dc:	9a 83       	std	Y+2, r25	; 0x02
    11de:	89 83       	std	Y+1, r24	; 0x01
	return Ptr_PortId->PIN_reg.Full_Reg;
    11e0:	e9 81       	ldd	r30, Y+1	; 0x01
    11e2:	fa 81       	ldd	r31, Y+2	; 0x02
    11e4:	80 81       	ld	r24, Z
}
    11e6:	0f 90       	pop	r0
    11e8:	0f 90       	pop	r0
    11ea:	cf 91       	pop	r28
    11ec:	df 91       	pop	r29
    11ee:	08 95       	ret

000011f0 <TIMER1_Init>:
u16 timer1RemCounter = 0;

void(*timer1PtrCallBack)(void) = NULL_PTR;

void TIMER1_Init(const TIMER1_INIT_CONFIG* Config_Ptr)
{
    11f0:	df 93       	push	r29
    11f2:	cf 93       	push	r28
    11f4:	00 d0       	rcall	.+0      	; 0x11f6 <TIMER1_Init+0x6>
    11f6:	00 d0       	rcall	.+0      	; 0x11f8 <TIMER1_Init+0x8>
    11f8:	cd b7       	in	r28, 0x3d	; 61
    11fa:	de b7       	in	r29, 0x3e	; 62
    11fc:	9a 83       	std	Y+2, r25	; 0x02
    11fe:	89 83       	std	Y+1, r24	; 0x01
	switch(Config_Ptr->Mode)
    1200:	e9 81       	ldd	r30, Y+1	; 0x01
    1202:	fa 81       	ldd	r31, Y+2	; 0x02
    1204:	84 81       	ldd	r24, Z+4	; 0x04
    1206:	28 2f       	mov	r18, r24
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	3c 83       	std	Y+4, r19	; 0x04
    120c:	2b 83       	std	Y+3, r18	; 0x03
    120e:	8b 81       	ldd	r24, Y+3	; 0x03
    1210:	9c 81       	ldd	r25, Y+4	; 0x04
    1212:	87 30       	cpi	r24, 0x07	; 7
    1214:	91 05       	cpc	r25, r1
    1216:	09 f4       	brne	.+2      	; 0x121a <TIMER1_Init+0x2a>
    1218:	bd c2       	rjmp	.+1402   	; 0x1794 <TIMER1_Init+0x5a4>
    121a:	2b 81       	ldd	r18, Y+3	; 0x03
    121c:	3c 81       	ldd	r19, Y+4	; 0x04
    121e:	28 30       	cpi	r18, 0x08	; 8
    1220:	31 05       	cpc	r19, r1
    1222:	4c f5       	brge	.+82     	; 0x1276 <TIMER1_Init+0x86>
    1224:	8b 81       	ldd	r24, Y+3	; 0x03
    1226:	9c 81       	ldd	r25, Y+4	; 0x04
    1228:	83 30       	cpi	r24, 0x03	; 3
    122a:	91 05       	cpc	r25, r1
    122c:	09 f4       	brne	.+2      	; 0x1230 <TIMER1_Init+0x40>
    122e:	4a c1       	rjmp	.+660    	; 0x14c4 <TIMER1_Init+0x2d4>
    1230:	2b 81       	ldd	r18, Y+3	; 0x03
    1232:	3c 81       	ldd	r19, Y+4	; 0x04
    1234:	24 30       	cpi	r18, 0x04	; 4
    1236:	31 05       	cpc	r19, r1
    1238:	8c f4       	brge	.+34     	; 0x125c <TIMER1_Init+0x6c>
    123a:	8b 81       	ldd	r24, Y+3	; 0x03
    123c:	9c 81       	ldd	r25, Y+4	; 0x04
    123e:	81 30       	cpi	r24, 0x01	; 1
    1240:	91 05       	cpc	r25, r1
    1242:	09 f4       	brne	.+2      	; 0x1246 <TIMER1_Init+0x56>
    1244:	9d c0       	rjmp	.+314    	; 0x1380 <TIMER1_Init+0x190>
    1246:	2b 81       	ldd	r18, Y+3	; 0x03
    1248:	3c 81       	ldd	r19, Y+4	; 0x04
    124a:	22 30       	cpi	r18, 0x02	; 2
    124c:	31 05       	cpc	r19, r1
    124e:	0c f0       	brlt	.+2      	; 0x1252 <TIMER1_Init+0x62>
    1250:	df c0       	rjmp	.+446    	; 0x1410 <TIMER1_Init+0x220>
    1252:	8b 81       	ldd	r24, Y+3	; 0x03
    1254:	9c 81       	ldd	r25, Y+4	; 0x04
    1256:	00 97       	sbiw	r24, 0x00	; 0
    1258:	c9 f1       	breq	.+114    	; 0x12cc <TIMER1_Init+0xdc>
    125a:	6b c5       	rjmp	.+2774   	; 0x1d32 <TIMER1_Init+0xb42>
    125c:	2b 81       	ldd	r18, Y+3	; 0x03
    125e:	3c 81       	ldd	r19, Y+4	; 0x04
    1260:	25 30       	cpi	r18, 0x05	; 5
    1262:	31 05       	cpc	r19, r1
    1264:	09 f4       	brne	.+2      	; 0x1268 <TIMER1_Init+0x78>
    1266:	e2 c1       	rjmp	.+964    	; 0x162c <TIMER1_Init+0x43c>
    1268:	8b 81       	ldd	r24, Y+3	; 0x03
    126a:	9c 81       	ldd	r25, Y+4	; 0x04
    126c:	86 30       	cpi	r24, 0x06	; 6
    126e:	91 05       	cpc	r25, r1
    1270:	0c f0       	brlt	.+2      	; 0x1274 <TIMER1_Init+0x84>
    1272:	36 c2       	rjmp	.+1132   	; 0x16e0 <TIMER1_Init+0x4f0>
    1274:	81 c1       	rjmp	.+770    	; 0x1578 <TIMER1_Init+0x388>
    1276:	2b 81       	ldd	r18, Y+3	; 0x03
    1278:	3c 81       	ldd	r19, Y+4	; 0x04
    127a:	2b 30       	cpi	r18, 0x0B	; 11
    127c:	31 05       	cpc	r19, r1
    127e:	09 f4       	brne	.+2      	; 0x1282 <TIMER1_Init+0x92>
    1280:	f1 c3       	rjmp	.+2018   	; 0x1a64 <TIMER1_Init+0x874>
    1282:	8b 81       	ldd	r24, Y+3	; 0x03
    1284:	9c 81       	ldd	r25, Y+4	; 0x04
    1286:	8c 30       	cpi	r24, 0x0C	; 12
    1288:	91 05       	cpc	r25, r1
    128a:	6c f4       	brge	.+26     	; 0x12a6 <TIMER1_Init+0xb6>
    128c:	2b 81       	ldd	r18, Y+3	; 0x03
    128e:	3c 81       	ldd	r19, Y+4	; 0x04
    1290:	29 30       	cpi	r18, 0x09	; 9
    1292:	31 05       	cpc	r19, r1
    1294:	09 f4       	brne	.+2      	; 0x1298 <TIMER1_Init+0xa8>
    1296:	32 c3       	rjmp	.+1636   	; 0x18fc <TIMER1_Init+0x70c>
    1298:	8b 81       	ldd	r24, Y+3	; 0x03
    129a:	9c 81       	ldd	r25, Y+4	; 0x04
    129c:	8a 30       	cpi	r24, 0x0A	; 10
    129e:	91 05       	cpc	r25, r1
    12a0:	0c f0       	brlt	.+2      	; 0x12a4 <TIMER1_Init+0xb4>
    12a2:	86 c3       	rjmp	.+1804   	; 0x19b0 <TIMER1_Init+0x7c0>
    12a4:	d1 c2       	rjmp	.+1442   	; 0x1848 <TIMER1_Init+0x658>
    12a6:	2b 81       	ldd	r18, Y+3	; 0x03
    12a8:	3c 81       	ldd	r19, Y+4	; 0x04
    12aa:	2e 30       	cpi	r18, 0x0E	; 14
    12ac:	31 05       	cpc	r19, r1
    12ae:	09 f4       	brne	.+2      	; 0x12b2 <TIMER1_Init+0xc2>
    12b0:	8d c4       	rjmp	.+2330   	; 0x1bcc <TIMER1_Init+0x9dc>
    12b2:	8b 81       	ldd	r24, Y+3	; 0x03
    12b4:	9c 81       	ldd	r25, Y+4	; 0x04
    12b6:	8f 30       	cpi	r24, 0x0F	; 15
    12b8:	91 05       	cpc	r25, r1
    12ba:	09 f4       	brne	.+2      	; 0x12be <TIMER1_Init+0xce>
    12bc:	e1 c4       	rjmp	.+2498   	; 0x1c80 <TIMER1_Init+0xa90>
    12be:	2b 81       	ldd	r18, Y+3	; 0x03
    12c0:	3c 81       	ldd	r19, Y+4	; 0x04
    12c2:	2c 30       	cpi	r18, 0x0C	; 12
    12c4:	31 05       	cpc	r19, r1
    12c6:	09 f4       	brne	.+2      	; 0x12ca <TIMER1_Init+0xda>
    12c8:	27 c4       	rjmp	.+2126   	; 0x1b18 <TIMER1_Init+0x928>
    12ca:	33 c5       	rjmp	.+2662   	; 0x1d32 <TIMER1_Init+0xb42>
	{
	case TIMER1_NORMAL_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_HIGH;
    12cc:	ef e4       	ldi	r30, 0x4F	; 79
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	80 81       	ld	r24, Z
    12d2:	88 60       	ori	r24, 0x08	; 8
    12d4:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_HIGH;
    12d6:	ef e4       	ldi	r30, 0x4F	; 79
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	80 81       	ld	r24, Z
    12dc:	84 60       	ori	r24, 0x04	; 4
    12de:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    12e0:	af e4       	ldi	r26, 0x4F	; 79
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	e9 81       	ldd	r30, Y+1	; 0x01
    12e6:	fa 81       	ldd	r31, Y+2	; 0x02
    12e8:	80 81       	ld	r24, Z
    12ea:	86 95       	lsr	r24
    12ec:	81 70       	andi	r24, 0x01	; 1
    12ee:	98 2f       	mov	r25, r24
    12f0:	97 95       	ror	r25
    12f2:	99 27       	eor	r25, r25
    12f4:	97 95       	ror	r25
    12f6:	8c 91       	ld	r24, X
    12f8:	8f 77       	andi	r24, 0x7F	; 127
    12fa:	89 2b       	or	r24, r25
    12fc:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    12fe:	af e4       	ldi	r26, 0x4F	; 79
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	e9 81       	ldd	r30, Y+1	; 0x01
    1304:	fa 81       	ldd	r31, Y+2	; 0x02
    1306:	80 81       	ld	r24, Z
    1308:	81 70       	andi	r24, 0x01	; 1
    130a:	81 70       	andi	r24, 0x01	; 1
    130c:	98 2f       	mov	r25, r24
    130e:	92 95       	swap	r25
    1310:	99 0f       	add	r25, r25
    1312:	99 0f       	add	r25, r25
    1314:	90 7c       	andi	r25, 0xC0	; 192
    1316:	8c 91       	ld	r24, X
    1318:	8f 7b       	andi	r24, 0xBF	; 191
    131a:	89 2b       	or	r24, r25
    131c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    131e:	af e4       	ldi	r26, 0x4F	; 79
    1320:	b0 e0       	ldi	r27, 0x00	; 0
    1322:	e9 81       	ldd	r30, Y+1	; 0x01
    1324:	fa 81       	ldd	r31, Y+2	; 0x02
    1326:	80 81       	ld	r24, Z
    1328:	86 95       	lsr	r24
    132a:	81 70       	andi	r24, 0x01	; 1
    132c:	81 70       	andi	r24, 0x01	; 1
    132e:	98 2f       	mov	r25, r24
    1330:	92 95       	swap	r25
    1332:	99 0f       	add	r25, r25
    1334:	90 7e       	andi	r25, 0xE0	; 224
    1336:	8c 91       	ld	r24, X
    1338:	8f 7d       	andi	r24, 0xDF	; 223
    133a:	89 2b       	or	r24, r25
    133c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    133e:	af e4       	ldi	r26, 0x4F	; 79
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	e9 81       	ldd	r30, Y+1	; 0x01
    1344:	fa 81       	ldd	r31, Y+2	; 0x02
    1346:	80 81       	ld	r24, Z
    1348:	81 70       	andi	r24, 0x01	; 1
    134a:	81 70       	andi	r24, 0x01	; 1
    134c:	98 2f       	mov	r25, r24
    134e:	92 95       	swap	r25
    1350:	90 7f       	andi	r25, 0xF0	; 240
    1352:	8c 91       	ld	r24, X
    1354:	8f 7e       	andi	r24, 0xEF	; 239
    1356:	89 2b       	or	r24, r25
    1358:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    135a:	aa e4       	ldi	r26, 0x4A	; 74
    135c:	b0 e0       	ldi	r27, 0x00	; 0
    135e:	e9 81       	ldd	r30, Y+1	; 0x01
    1360:	fa 81       	ldd	r31, Y+2	; 0x02
    1362:	87 81       	ldd	r24, Z+7	; 0x07
    1364:	90 85       	ldd	r25, Z+8	; 0x08
    1366:	11 96       	adiw	r26, 0x01	; 1
    1368:	9c 93       	st	X, r25
    136a:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    136c:	a8 e4       	ldi	r26, 0x48	; 72
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	e9 81       	ldd	r30, Y+1	; 0x01
    1372:	fa 81       	ldd	r31, Y+2	; 0x02
    1374:	87 81       	ldd	r24, Z+7	; 0x07
    1376:	90 85       	ldd	r25, Z+8	; 0x08
    1378:	11 96       	adiw	r26, 0x01	; 1
    137a:	9c 93       	st	X, r25
    137c:	8e 93       	st	-X, r24
    137e:	d9 c4       	rjmp	.+2482   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_CORRECT_PWM_8bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1380:	ef e4       	ldi	r30, 0x4F	; 79
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	87 7f       	andi	r24, 0xF7	; 247
    1388:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    138a:	ef e4       	ldi	r30, 0x4F	; 79
    138c:	f0 e0       	ldi	r31, 0x00	; 0
    138e:	80 81       	ld	r24, Z
    1390:	8b 7f       	andi	r24, 0xFB	; 251
    1392:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1394:	af e4       	ldi	r26, 0x4F	; 79
    1396:	b0 e0       	ldi	r27, 0x00	; 0
    1398:	e9 81       	ldd	r30, Y+1	; 0x01
    139a:	fa 81       	ldd	r31, Y+2	; 0x02
    139c:	82 81       	ldd	r24, Z+2	; 0x02
    139e:	86 95       	lsr	r24
    13a0:	81 70       	andi	r24, 0x01	; 1
    13a2:	98 2f       	mov	r25, r24
    13a4:	97 95       	ror	r25
    13a6:	99 27       	eor	r25, r25
    13a8:	97 95       	ror	r25
    13aa:	8c 91       	ld	r24, X
    13ac:	8f 77       	andi	r24, 0x7F	; 127
    13ae:	89 2b       	or	r24, r25
    13b0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    13b2:	af e4       	ldi	r26, 0x4F	; 79
    13b4:	b0 e0       	ldi	r27, 0x00	; 0
    13b6:	e9 81       	ldd	r30, Y+1	; 0x01
    13b8:	fa 81       	ldd	r31, Y+2	; 0x02
    13ba:	82 81       	ldd	r24, Z+2	; 0x02
    13bc:	81 70       	andi	r24, 0x01	; 1
    13be:	81 70       	andi	r24, 0x01	; 1
    13c0:	98 2f       	mov	r25, r24
    13c2:	92 95       	swap	r25
    13c4:	99 0f       	add	r25, r25
    13c6:	99 0f       	add	r25, r25
    13c8:	90 7c       	andi	r25, 0xC0	; 192
    13ca:	8c 91       	ld	r24, X
    13cc:	8f 7b       	andi	r24, 0xBF	; 191
    13ce:	89 2b       	or	r24, r25
    13d0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    13d2:	af e4       	ldi	r26, 0x4F	; 79
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	e9 81       	ldd	r30, Y+1	; 0x01
    13d8:	fa 81       	ldd	r31, Y+2	; 0x02
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	86 95       	lsr	r24
    13de:	81 70       	andi	r24, 0x01	; 1
    13e0:	81 70       	andi	r24, 0x01	; 1
    13e2:	98 2f       	mov	r25, r24
    13e4:	92 95       	swap	r25
    13e6:	99 0f       	add	r25, r25
    13e8:	90 7e       	andi	r25, 0xE0	; 224
    13ea:	8c 91       	ld	r24, X
    13ec:	8f 7d       	andi	r24, 0xDF	; 223
    13ee:	89 2b       	or	r24, r25
    13f0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    13f2:	af e4       	ldi	r26, 0x4F	; 79
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	e9 81       	ldd	r30, Y+1	; 0x01
    13f8:	fa 81       	ldd	r31, Y+2	; 0x02
    13fa:	82 81       	ldd	r24, Z+2	; 0x02
    13fc:	81 70       	andi	r24, 0x01	; 1
    13fe:	81 70       	andi	r24, 0x01	; 1
    1400:	98 2f       	mov	r25, r24
    1402:	92 95       	swap	r25
    1404:	90 7f       	andi	r25, 0xF0	; 240
    1406:	8c 91       	ld	r24, X
    1408:	8f 7e       	andi	r24, 0xEF	; 239
    140a:	89 2b       	or	r24, r25
    140c:	8c 93       	st	X, r24
    140e:	91 c4       	rjmp	.+2338   	; 0x1d32 <TIMER1_Init+0xb42>
		//		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
		//		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
		break;
	case TIMER1_PHASE_CORRECT_PWM_9bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1410:	ef e4       	ldi	r30, 0x4F	; 79
    1412:	f0 e0       	ldi	r31, 0x00	; 0
    1414:	80 81       	ld	r24, Z
    1416:	87 7f       	andi	r24, 0xF7	; 247
    1418:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    141a:	ef e4       	ldi	r30, 0x4F	; 79
    141c:	f0 e0       	ldi	r31, 0x00	; 0
    141e:	80 81       	ld	r24, Z
    1420:	8b 7f       	andi	r24, 0xFB	; 251
    1422:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1424:	af e4       	ldi	r26, 0x4F	; 79
    1426:	b0 e0       	ldi	r27, 0x00	; 0
    1428:	e9 81       	ldd	r30, Y+1	; 0x01
    142a:	fa 81       	ldd	r31, Y+2	; 0x02
    142c:	82 81       	ldd	r24, Z+2	; 0x02
    142e:	86 95       	lsr	r24
    1430:	81 70       	andi	r24, 0x01	; 1
    1432:	98 2f       	mov	r25, r24
    1434:	97 95       	ror	r25
    1436:	99 27       	eor	r25, r25
    1438:	97 95       	ror	r25
    143a:	8c 91       	ld	r24, X
    143c:	8f 77       	andi	r24, 0x7F	; 127
    143e:	89 2b       	or	r24, r25
    1440:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1442:	af e4       	ldi	r26, 0x4F	; 79
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	e9 81       	ldd	r30, Y+1	; 0x01
    1448:	fa 81       	ldd	r31, Y+2	; 0x02
    144a:	82 81       	ldd	r24, Z+2	; 0x02
    144c:	81 70       	andi	r24, 0x01	; 1
    144e:	81 70       	andi	r24, 0x01	; 1
    1450:	98 2f       	mov	r25, r24
    1452:	92 95       	swap	r25
    1454:	99 0f       	add	r25, r25
    1456:	99 0f       	add	r25, r25
    1458:	90 7c       	andi	r25, 0xC0	; 192
    145a:	8c 91       	ld	r24, X
    145c:	8f 7b       	andi	r24, 0xBF	; 191
    145e:	89 2b       	or	r24, r25
    1460:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1462:	af e4       	ldi	r26, 0x4F	; 79
    1464:	b0 e0       	ldi	r27, 0x00	; 0
    1466:	e9 81       	ldd	r30, Y+1	; 0x01
    1468:	fa 81       	ldd	r31, Y+2	; 0x02
    146a:	82 81       	ldd	r24, Z+2	; 0x02
    146c:	86 95       	lsr	r24
    146e:	81 70       	andi	r24, 0x01	; 1
    1470:	81 70       	andi	r24, 0x01	; 1
    1472:	98 2f       	mov	r25, r24
    1474:	92 95       	swap	r25
    1476:	99 0f       	add	r25, r25
    1478:	90 7e       	andi	r25, 0xE0	; 224
    147a:	8c 91       	ld	r24, X
    147c:	8f 7d       	andi	r24, 0xDF	; 223
    147e:	89 2b       	or	r24, r25
    1480:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1482:	af e4       	ldi	r26, 0x4F	; 79
    1484:	b0 e0       	ldi	r27, 0x00	; 0
    1486:	e9 81       	ldd	r30, Y+1	; 0x01
    1488:	fa 81       	ldd	r31, Y+2	; 0x02
    148a:	82 81       	ldd	r24, Z+2	; 0x02
    148c:	81 70       	andi	r24, 0x01	; 1
    148e:	81 70       	andi	r24, 0x01	; 1
    1490:	98 2f       	mov	r25, r24
    1492:	92 95       	swap	r25
    1494:	90 7f       	andi	r25, 0xF0	; 240
    1496:	8c 91       	ld	r24, X
    1498:	8f 7e       	andi	r24, 0xEF	; 239
    149a:	89 2b       	or	r24, r25
    149c:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    149e:	aa e4       	ldi	r26, 0x4A	; 74
    14a0:	b0 e0       	ldi	r27, 0x00	; 0
    14a2:	e9 81       	ldd	r30, Y+1	; 0x01
    14a4:	fa 81       	ldd	r31, Y+2	; 0x02
    14a6:	87 81       	ldd	r24, Z+7	; 0x07
    14a8:	90 85       	ldd	r25, Z+8	; 0x08
    14aa:	11 96       	adiw	r26, 0x01	; 1
    14ac:	9c 93       	st	X, r25
    14ae:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    14b0:	a8 e4       	ldi	r26, 0x48	; 72
    14b2:	b0 e0       	ldi	r27, 0x00	; 0
    14b4:	e9 81       	ldd	r30, Y+1	; 0x01
    14b6:	fa 81       	ldd	r31, Y+2	; 0x02
    14b8:	87 81       	ldd	r24, Z+7	; 0x07
    14ba:	90 85       	ldd	r25, Z+8	; 0x08
    14bc:	11 96       	adiw	r26, 0x01	; 1
    14be:	9c 93       	st	X, r25
    14c0:	8e 93       	st	-X, r24
    14c2:	37 c4       	rjmp	.+2158   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_CORRECT_PWM_10bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    14c4:	ef e4       	ldi	r30, 0x4F	; 79
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	87 7f       	andi	r24, 0xF7	; 247
    14cc:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    14ce:	ef e4       	ldi	r30, 0x4F	; 79
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	80 81       	ld	r24, Z
    14d4:	8b 7f       	andi	r24, 0xFB	; 251
    14d6:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    14d8:	af e4       	ldi	r26, 0x4F	; 79
    14da:	b0 e0       	ldi	r27, 0x00	; 0
    14dc:	e9 81       	ldd	r30, Y+1	; 0x01
    14de:	fa 81       	ldd	r31, Y+2	; 0x02
    14e0:	82 81       	ldd	r24, Z+2	; 0x02
    14e2:	86 95       	lsr	r24
    14e4:	81 70       	andi	r24, 0x01	; 1
    14e6:	98 2f       	mov	r25, r24
    14e8:	97 95       	ror	r25
    14ea:	99 27       	eor	r25, r25
    14ec:	97 95       	ror	r25
    14ee:	8c 91       	ld	r24, X
    14f0:	8f 77       	andi	r24, 0x7F	; 127
    14f2:	89 2b       	or	r24, r25
    14f4:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    14f6:	af e4       	ldi	r26, 0x4F	; 79
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e9 81       	ldd	r30, Y+1	; 0x01
    14fc:	fa 81       	ldd	r31, Y+2	; 0x02
    14fe:	82 81       	ldd	r24, Z+2	; 0x02
    1500:	81 70       	andi	r24, 0x01	; 1
    1502:	81 70       	andi	r24, 0x01	; 1
    1504:	98 2f       	mov	r25, r24
    1506:	92 95       	swap	r25
    1508:	99 0f       	add	r25, r25
    150a:	99 0f       	add	r25, r25
    150c:	90 7c       	andi	r25, 0xC0	; 192
    150e:	8c 91       	ld	r24, X
    1510:	8f 7b       	andi	r24, 0xBF	; 191
    1512:	89 2b       	or	r24, r25
    1514:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1516:	af e4       	ldi	r26, 0x4F	; 79
    1518:	b0 e0       	ldi	r27, 0x00	; 0
    151a:	e9 81       	ldd	r30, Y+1	; 0x01
    151c:	fa 81       	ldd	r31, Y+2	; 0x02
    151e:	82 81       	ldd	r24, Z+2	; 0x02
    1520:	86 95       	lsr	r24
    1522:	81 70       	andi	r24, 0x01	; 1
    1524:	81 70       	andi	r24, 0x01	; 1
    1526:	98 2f       	mov	r25, r24
    1528:	92 95       	swap	r25
    152a:	99 0f       	add	r25, r25
    152c:	90 7e       	andi	r25, 0xE0	; 224
    152e:	8c 91       	ld	r24, X
    1530:	8f 7d       	andi	r24, 0xDF	; 223
    1532:	89 2b       	or	r24, r25
    1534:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1536:	af e4       	ldi	r26, 0x4F	; 79
    1538:	b0 e0       	ldi	r27, 0x00	; 0
    153a:	e9 81       	ldd	r30, Y+1	; 0x01
    153c:	fa 81       	ldd	r31, Y+2	; 0x02
    153e:	82 81       	ldd	r24, Z+2	; 0x02
    1540:	81 70       	andi	r24, 0x01	; 1
    1542:	81 70       	andi	r24, 0x01	; 1
    1544:	98 2f       	mov	r25, r24
    1546:	92 95       	swap	r25
    1548:	90 7f       	andi	r25, 0xF0	; 240
    154a:	8c 91       	ld	r24, X
    154c:	8f 7e       	andi	r24, 0xEF	; 239
    154e:	89 2b       	or	r24, r25
    1550:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1552:	aa e4       	ldi	r26, 0x4A	; 74
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	e9 81       	ldd	r30, Y+1	; 0x01
    1558:	fa 81       	ldd	r31, Y+2	; 0x02
    155a:	87 81       	ldd	r24, Z+7	; 0x07
    155c:	90 85       	ldd	r25, Z+8	; 0x08
    155e:	11 96       	adiw	r26, 0x01	; 1
    1560:	9c 93       	st	X, r25
    1562:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1564:	a8 e4       	ldi	r26, 0x48	; 72
    1566:	b0 e0       	ldi	r27, 0x00	; 0
    1568:	e9 81       	ldd	r30, Y+1	; 0x01
    156a:	fa 81       	ldd	r31, Y+2	; 0x02
    156c:	87 81       	ldd	r24, Z+7	; 0x07
    156e:	90 85       	ldd	r25, Z+8	; 0x08
    1570:	11 96       	adiw	r26, 0x01	; 1
    1572:	9c 93       	st	X, r25
    1574:	8e 93       	st	-X, r24
    1576:	dd c3       	rjmp	.+1978   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_CTC_OCR1A_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1578:	ef e4       	ldi	r30, 0x4F	; 79
    157a:	f0 e0       	ldi	r31, 0x00	; 0
    157c:	80 81       	ld	r24, Z
    157e:	87 7f       	andi	r24, 0xF7	; 247
    1580:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1582:	ef e4       	ldi	r30, 0x4F	; 79
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	8b 7f       	andi	r24, 0xFB	; 251
    158a:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    158c:	af e4       	ldi	r26, 0x4F	; 79
    158e:	b0 e0       	ldi	r27, 0x00	; 0
    1590:	e9 81       	ldd	r30, Y+1	; 0x01
    1592:	fa 81       	ldd	r31, Y+2	; 0x02
    1594:	80 81       	ld	r24, Z
    1596:	86 95       	lsr	r24
    1598:	81 70       	andi	r24, 0x01	; 1
    159a:	98 2f       	mov	r25, r24
    159c:	97 95       	ror	r25
    159e:	99 27       	eor	r25, r25
    15a0:	97 95       	ror	r25
    15a2:	8c 91       	ld	r24, X
    15a4:	8f 77       	andi	r24, 0x7F	; 127
    15a6:	89 2b       	or	r24, r25
    15a8:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    15aa:	af e4       	ldi	r26, 0x4F	; 79
    15ac:	b0 e0       	ldi	r27, 0x00	; 0
    15ae:	e9 81       	ldd	r30, Y+1	; 0x01
    15b0:	fa 81       	ldd	r31, Y+2	; 0x02
    15b2:	80 81       	ld	r24, Z
    15b4:	81 70       	andi	r24, 0x01	; 1
    15b6:	81 70       	andi	r24, 0x01	; 1
    15b8:	98 2f       	mov	r25, r24
    15ba:	92 95       	swap	r25
    15bc:	99 0f       	add	r25, r25
    15be:	99 0f       	add	r25, r25
    15c0:	90 7c       	andi	r25, 0xC0	; 192
    15c2:	8c 91       	ld	r24, X
    15c4:	8f 7b       	andi	r24, 0xBF	; 191
    15c6:	89 2b       	or	r24, r25
    15c8:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    15ca:	af e4       	ldi	r26, 0x4F	; 79
    15cc:	b0 e0       	ldi	r27, 0x00	; 0
    15ce:	e9 81       	ldd	r30, Y+1	; 0x01
    15d0:	fa 81       	ldd	r31, Y+2	; 0x02
    15d2:	80 81       	ld	r24, Z
    15d4:	86 95       	lsr	r24
    15d6:	81 70       	andi	r24, 0x01	; 1
    15d8:	81 70       	andi	r24, 0x01	; 1
    15da:	98 2f       	mov	r25, r24
    15dc:	92 95       	swap	r25
    15de:	99 0f       	add	r25, r25
    15e0:	90 7e       	andi	r25, 0xE0	; 224
    15e2:	8c 91       	ld	r24, X
    15e4:	8f 7d       	andi	r24, 0xDF	; 223
    15e6:	89 2b       	or	r24, r25
    15e8:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    15ea:	af e4       	ldi	r26, 0x4F	; 79
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	e9 81       	ldd	r30, Y+1	; 0x01
    15f0:	fa 81       	ldd	r31, Y+2	; 0x02
    15f2:	80 81       	ld	r24, Z
    15f4:	81 70       	andi	r24, 0x01	; 1
    15f6:	81 70       	andi	r24, 0x01	; 1
    15f8:	98 2f       	mov	r25, r24
    15fa:	92 95       	swap	r25
    15fc:	90 7f       	andi	r25, 0xF0	; 240
    15fe:	8c 91       	ld	r24, X
    1600:	8f 7e       	andi	r24, 0xEF	; 239
    1602:	89 2b       	or	r24, r25
    1604:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1606:	aa e4       	ldi	r26, 0x4A	; 74
    1608:	b0 e0       	ldi	r27, 0x00	; 0
    160a:	e9 81       	ldd	r30, Y+1	; 0x01
    160c:	fa 81       	ldd	r31, Y+2	; 0x02
    160e:	87 81       	ldd	r24, Z+7	; 0x07
    1610:	90 85       	ldd	r25, Z+8	; 0x08
    1612:	11 96       	adiw	r26, 0x01	; 1
    1614:	9c 93       	st	X, r25
    1616:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1618:	a8 e4       	ldi	r26, 0x48	; 72
    161a:	b0 e0       	ldi	r27, 0x00	; 0
    161c:	e9 81       	ldd	r30, Y+1	; 0x01
    161e:	fa 81       	ldd	r31, Y+2	; 0x02
    1620:	87 81       	ldd	r24, Z+7	; 0x07
    1622:	90 85       	ldd	r25, Z+8	; 0x08
    1624:	11 96       	adiw	r26, 0x01	; 1
    1626:	9c 93       	st	X, r25
    1628:	8e 93       	st	-X, r24
    162a:	83 c3       	rjmp	.+1798   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_FAST_PWM_8bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    162c:	ef e4       	ldi	r30, 0x4F	; 79
    162e:	f0 e0       	ldi	r31, 0x00	; 0
    1630:	80 81       	ld	r24, Z
    1632:	87 7f       	andi	r24, 0xF7	; 247
    1634:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1636:	ef e4       	ldi	r30, 0x4F	; 79
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 81       	ld	r24, Z
    163c:	8b 7f       	andi	r24, 0xFB	; 251
    163e:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1640:	af e4       	ldi	r26, 0x4F	; 79
    1642:	b0 e0       	ldi	r27, 0x00	; 0
    1644:	e9 81       	ldd	r30, Y+1	; 0x01
    1646:	fa 81       	ldd	r31, Y+2	; 0x02
    1648:	81 81       	ldd	r24, Z+1	; 0x01
    164a:	86 95       	lsr	r24
    164c:	81 70       	andi	r24, 0x01	; 1
    164e:	98 2f       	mov	r25, r24
    1650:	97 95       	ror	r25
    1652:	99 27       	eor	r25, r25
    1654:	97 95       	ror	r25
    1656:	8c 91       	ld	r24, X
    1658:	8f 77       	andi	r24, 0x7F	; 127
    165a:	89 2b       	or	r24, r25
    165c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    165e:	af e4       	ldi	r26, 0x4F	; 79
    1660:	b0 e0       	ldi	r27, 0x00	; 0
    1662:	e9 81       	ldd	r30, Y+1	; 0x01
    1664:	fa 81       	ldd	r31, Y+2	; 0x02
    1666:	81 81       	ldd	r24, Z+1	; 0x01
    1668:	81 70       	andi	r24, 0x01	; 1
    166a:	81 70       	andi	r24, 0x01	; 1
    166c:	98 2f       	mov	r25, r24
    166e:	92 95       	swap	r25
    1670:	99 0f       	add	r25, r25
    1672:	99 0f       	add	r25, r25
    1674:	90 7c       	andi	r25, 0xC0	; 192
    1676:	8c 91       	ld	r24, X
    1678:	8f 7b       	andi	r24, 0xBF	; 191
    167a:	89 2b       	or	r24, r25
    167c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    167e:	af e4       	ldi	r26, 0x4F	; 79
    1680:	b0 e0       	ldi	r27, 0x00	; 0
    1682:	e9 81       	ldd	r30, Y+1	; 0x01
    1684:	fa 81       	ldd	r31, Y+2	; 0x02
    1686:	81 81       	ldd	r24, Z+1	; 0x01
    1688:	86 95       	lsr	r24
    168a:	81 70       	andi	r24, 0x01	; 1
    168c:	81 70       	andi	r24, 0x01	; 1
    168e:	98 2f       	mov	r25, r24
    1690:	92 95       	swap	r25
    1692:	99 0f       	add	r25, r25
    1694:	90 7e       	andi	r25, 0xE0	; 224
    1696:	8c 91       	ld	r24, X
    1698:	8f 7d       	andi	r24, 0xDF	; 223
    169a:	89 2b       	or	r24, r25
    169c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    169e:	af e4       	ldi	r26, 0x4F	; 79
    16a0:	b0 e0       	ldi	r27, 0x00	; 0
    16a2:	e9 81       	ldd	r30, Y+1	; 0x01
    16a4:	fa 81       	ldd	r31, Y+2	; 0x02
    16a6:	81 81       	ldd	r24, Z+1	; 0x01
    16a8:	81 70       	andi	r24, 0x01	; 1
    16aa:	81 70       	andi	r24, 0x01	; 1
    16ac:	98 2f       	mov	r25, r24
    16ae:	92 95       	swap	r25
    16b0:	90 7f       	andi	r25, 0xF0	; 240
    16b2:	8c 91       	ld	r24, X
    16b4:	8f 7e       	andi	r24, 0xEF	; 239
    16b6:	89 2b       	or	r24, r25
    16b8:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    16ba:	aa e4       	ldi	r26, 0x4A	; 74
    16bc:	b0 e0       	ldi	r27, 0x00	; 0
    16be:	e9 81       	ldd	r30, Y+1	; 0x01
    16c0:	fa 81       	ldd	r31, Y+2	; 0x02
    16c2:	87 81       	ldd	r24, Z+7	; 0x07
    16c4:	90 85       	ldd	r25, Z+8	; 0x08
    16c6:	11 96       	adiw	r26, 0x01	; 1
    16c8:	9c 93       	st	X, r25
    16ca:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    16cc:	a8 e4       	ldi	r26, 0x48	; 72
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	e9 81       	ldd	r30, Y+1	; 0x01
    16d2:	fa 81       	ldd	r31, Y+2	; 0x02
    16d4:	87 81       	ldd	r24, Z+7	; 0x07
    16d6:	90 85       	ldd	r25, Z+8	; 0x08
    16d8:	11 96       	adiw	r26, 0x01	; 1
    16da:	9c 93       	st	X, r25
    16dc:	8e 93       	st	-X, r24
    16de:	29 c3       	rjmp	.+1618   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_FAST_PWM_9bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    16e0:	ef e4       	ldi	r30, 0x4F	; 79
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	80 81       	ld	r24, Z
    16e6:	87 7f       	andi	r24, 0xF7	; 247
    16e8:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    16ea:	ef e4       	ldi	r30, 0x4F	; 79
    16ec:	f0 e0       	ldi	r31, 0x00	; 0
    16ee:	80 81       	ld	r24, Z
    16f0:	8b 7f       	andi	r24, 0xFB	; 251
    16f2:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    16f4:	af e4       	ldi	r26, 0x4F	; 79
    16f6:	b0 e0       	ldi	r27, 0x00	; 0
    16f8:	e9 81       	ldd	r30, Y+1	; 0x01
    16fa:	fa 81       	ldd	r31, Y+2	; 0x02
    16fc:	81 81       	ldd	r24, Z+1	; 0x01
    16fe:	86 95       	lsr	r24
    1700:	81 70       	andi	r24, 0x01	; 1
    1702:	98 2f       	mov	r25, r24
    1704:	97 95       	ror	r25
    1706:	99 27       	eor	r25, r25
    1708:	97 95       	ror	r25
    170a:	8c 91       	ld	r24, X
    170c:	8f 77       	andi	r24, 0x7F	; 127
    170e:	89 2b       	or	r24, r25
    1710:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1712:	af e4       	ldi	r26, 0x4F	; 79
    1714:	b0 e0       	ldi	r27, 0x00	; 0
    1716:	e9 81       	ldd	r30, Y+1	; 0x01
    1718:	fa 81       	ldd	r31, Y+2	; 0x02
    171a:	81 81       	ldd	r24, Z+1	; 0x01
    171c:	81 70       	andi	r24, 0x01	; 1
    171e:	81 70       	andi	r24, 0x01	; 1
    1720:	98 2f       	mov	r25, r24
    1722:	92 95       	swap	r25
    1724:	99 0f       	add	r25, r25
    1726:	99 0f       	add	r25, r25
    1728:	90 7c       	andi	r25, 0xC0	; 192
    172a:	8c 91       	ld	r24, X
    172c:	8f 7b       	andi	r24, 0xBF	; 191
    172e:	89 2b       	or	r24, r25
    1730:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1732:	af e4       	ldi	r26, 0x4F	; 79
    1734:	b0 e0       	ldi	r27, 0x00	; 0
    1736:	e9 81       	ldd	r30, Y+1	; 0x01
    1738:	fa 81       	ldd	r31, Y+2	; 0x02
    173a:	81 81       	ldd	r24, Z+1	; 0x01
    173c:	86 95       	lsr	r24
    173e:	81 70       	andi	r24, 0x01	; 1
    1740:	81 70       	andi	r24, 0x01	; 1
    1742:	98 2f       	mov	r25, r24
    1744:	92 95       	swap	r25
    1746:	99 0f       	add	r25, r25
    1748:	90 7e       	andi	r25, 0xE0	; 224
    174a:	8c 91       	ld	r24, X
    174c:	8f 7d       	andi	r24, 0xDF	; 223
    174e:	89 2b       	or	r24, r25
    1750:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1752:	af e4       	ldi	r26, 0x4F	; 79
    1754:	b0 e0       	ldi	r27, 0x00	; 0
    1756:	e9 81       	ldd	r30, Y+1	; 0x01
    1758:	fa 81       	ldd	r31, Y+2	; 0x02
    175a:	81 81       	ldd	r24, Z+1	; 0x01
    175c:	81 70       	andi	r24, 0x01	; 1
    175e:	81 70       	andi	r24, 0x01	; 1
    1760:	98 2f       	mov	r25, r24
    1762:	92 95       	swap	r25
    1764:	90 7f       	andi	r25, 0xF0	; 240
    1766:	8c 91       	ld	r24, X
    1768:	8f 7e       	andi	r24, 0xEF	; 239
    176a:	89 2b       	or	r24, r25
    176c:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    176e:	aa e4       	ldi	r26, 0x4A	; 74
    1770:	b0 e0       	ldi	r27, 0x00	; 0
    1772:	e9 81       	ldd	r30, Y+1	; 0x01
    1774:	fa 81       	ldd	r31, Y+2	; 0x02
    1776:	87 81       	ldd	r24, Z+7	; 0x07
    1778:	90 85       	ldd	r25, Z+8	; 0x08
    177a:	11 96       	adiw	r26, 0x01	; 1
    177c:	9c 93       	st	X, r25
    177e:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1780:	a8 e4       	ldi	r26, 0x48	; 72
    1782:	b0 e0       	ldi	r27, 0x00	; 0
    1784:	e9 81       	ldd	r30, Y+1	; 0x01
    1786:	fa 81       	ldd	r31, Y+2	; 0x02
    1788:	87 81       	ldd	r24, Z+7	; 0x07
    178a:	90 85       	ldd	r25, Z+8	; 0x08
    178c:	11 96       	adiw	r26, 0x01	; 1
    178e:	9c 93       	st	X, r25
    1790:	8e 93       	st	-X, r24
    1792:	cf c2       	rjmp	.+1438   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_FAST_PWM_10bIT_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1794:	ef e4       	ldi	r30, 0x4F	; 79
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	80 81       	ld	r24, Z
    179a:	87 7f       	andi	r24, 0xF7	; 247
    179c:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    179e:	ef e4       	ldi	r30, 0x4F	; 79
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	80 81       	ld	r24, Z
    17a4:	8b 7f       	andi	r24, 0xFB	; 251
    17a6:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    17a8:	af e4       	ldi	r26, 0x4F	; 79
    17aa:	b0 e0       	ldi	r27, 0x00	; 0
    17ac:	e9 81       	ldd	r30, Y+1	; 0x01
    17ae:	fa 81       	ldd	r31, Y+2	; 0x02
    17b0:	81 81       	ldd	r24, Z+1	; 0x01
    17b2:	86 95       	lsr	r24
    17b4:	81 70       	andi	r24, 0x01	; 1
    17b6:	98 2f       	mov	r25, r24
    17b8:	97 95       	ror	r25
    17ba:	99 27       	eor	r25, r25
    17bc:	97 95       	ror	r25
    17be:	8c 91       	ld	r24, X
    17c0:	8f 77       	andi	r24, 0x7F	; 127
    17c2:	89 2b       	or	r24, r25
    17c4:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    17c6:	af e4       	ldi	r26, 0x4F	; 79
    17c8:	b0 e0       	ldi	r27, 0x00	; 0
    17ca:	e9 81       	ldd	r30, Y+1	; 0x01
    17cc:	fa 81       	ldd	r31, Y+2	; 0x02
    17ce:	81 81       	ldd	r24, Z+1	; 0x01
    17d0:	81 70       	andi	r24, 0x01	; 1
    17d2:	81 70       	andi	r24, 0x01	; 1
    17d4:	98 2f       	mov	r25, r24
    17d6:	92 95       	swap	r25
    17d8:	99 0f       	add	r25, r25
    17da:	99 0f       	add	r25, r25
    17dc:	90 7c       	andi	r25, 0xC0	; 192
    17de:	8c 91       	ld	r24, X
    17e0:	8f 7b       	andi	r24, 0xBF	; 191
    17e2:	89 2b       	or	r24, r25
    17e4:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    17e6:	af e4       	ldi	r26, 0x4F	; 79
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	e9 81       	ldd	r30, Y+1	; 0x01
    17ec:	fa 81       	ldd	r31, Y+2	; 0x02
    17ee:	81 81       	ldd	r24, Z+1	; 0x01
    17f0:	86 95       	lsr	r24
    17f2:	81 70       	andi	r24, 0x01	; 1
    17f4:	81 70       	andi	r24, 0x01	; 1
    17f6:	98 2f       	mov	r25, r24
    17f8:	92 95       	swap	r25
    17fa:	99 0f       	add	r25, r25
    17fc:	90 7e       	andi	r25, 0xE0	; 224
    17fe:	8c 91       	ld	r24, X
    1800:	8f 7d       	andi	r24, 0xDF	; 223
    1802:	89 2b       	or	r24, r25
    1804:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1806:	af e4       	ldi	r26, 0x4F	; 79
    1808:	b0 e0       	ldi	r27, 0x00	; 0
    180a:	e9 81       	ldd	r30, Y+1	; 0x01
    180c:	fa 81       	ldd	r31, Y+2	; 0x02
    180e:	81 81       	ldd	r24, Z+1	; 0x01
    1810:	81 70       	andi	r24, 0x01	; 1
    1812:	81 70       	andi	r24, 0x01	; 1
    1814:	98 2f       	mov	r25, r24
    1816:	92 95       	swap	r25
    1818:	90 7f       	andi	r25, 0xF0	; 240
    181a:	8c 91       	ld	r24, X
    181c:	8f 7e       	andi	r24, 0xEF	; 239
    181e:	89 2b       	or	r24, r25
    1820:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1822:	aa e4       	ldi	r26, 0x4A	; 74
    1824:	b0 e0       	ldi	r27, 0x00	; 0
    1826:	e9 81       	ldd	r30, Y+1	; 0x01
    1828:	fa 81       	ldd	r31, Y+2	; 0x02
    182a:	87 81       	ldd	r24, Z+7	; 0x07
    182c:	90 85       	ldd	r25, Z+8	; 0x08
    182e:	11 96       	adiw	r26, 0x01	; 1
    1830:	9c 93       	st	X, r25
    1832:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1834:	a8 e4       	ldi	r26, 0x48	; 72
    1836:	b0 e0       	ldi	r27, 0x00	; 0
    1838:	e9 81       	ldd	r30, Y+1	; 0x01
    183a:	fa 81       	ldd	r31, Y+2	; 0x02
    183c:	87 81       	ldd	r24, Z+7	; 0x07
    183e:	90 85       	ldd	r25, Z+8	; 0x08
    1840:	11 96       	adiw	r26, 0x01	; 1
    1842:	9c 93       	st	X, r25
    1844:	8e 93       	st	-X, r24
    1846:	75 c2       	rjmp	.+1258   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_FREQUENCY_CORRECT_PWM_ICR1_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1848:	ef e4       	ldi	r30, 0x4F	; 79
    184a:	f0 e0       	ldi	r31, 0x00	; 0
    184c:	80 81       	ld	r24, Z
    184e:	87 7f       	andi	r24, 0xF7	; 247
    1850:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1852:	ef e4       	ldi	r30, 0x4F	; 79
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	80 81       	ld	r24, Z
    1858:	8b 7f       	andi	r24, 0xFB	; 251
    185a:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    185c:	af e4       	ldi	r26, 0x4F	; 79
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	e9 81       	ldd	r30, Y+1	; 0x01
    1862:	fa 81       	ldd	r31, Y+2	; 0x02
    1864:	82 81       	ldd	r24, Z+2	; 0x02
    1866:	86 95       	lsr	r24
    1868:	81 70       	andi	r24, 0x01	; 1
    186a:	98 2f       	mov	r25, r24
    186c:	97 95       	ror	r25
    186e:	99 27       	eor	r25, r25
    1870:	97 95       	ror	r25
    1872:	8c 91       	ld	r24, X
    1874:	8f 77       	andi	r24, 0x7F	; 127
    1876:	89 2b       	or	r24, r25
    1878:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    187a:	af e4       	ldi	r26, 0x4F	; 79
    187c:	b0 e0       	ldi	r27, 0x00	; 0
    187e:	e9 81       	ldd	r30, Y+1	; 0x01
    1880:	fa 81       	ldd	r31, Y+2	; 0x02
    1882:	82 81       	ldd	r24, Z+2	; 0x02
    1884:	81 70       	andi	r24, 0x01	; 1
    1886:	81 70       	andi	r24, 0x01	; 1
    1888:	98 2f       	mov	r25, r24
    188a:	92 95       	swap	r25
    188c:	99 0f       	add	r25, r25
    188e:	99 0f       	add	r25, r25
    1890:	90 7c       	andi	r25, 0xC0	; 192
    1892:	8c 91       	ld	r24, X
    1894:	8f 7b       	andi	r24, 0xBF	; 191
    1896:	89 2b       	or	r24, r25
    1898:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    189a:	af e4       	ldi	r26, 0x4F	; 79
    189c:	b0 e0       	ldi	r27, 0x00	; 0
    189e:	e9 81       	ldd	r30, Y+1	; 0x01
    18a0:	fa 81       	ldd	r31, Y+2	; 0x02
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	86 95       	lsr	r24
    18a6:	81 70       	andi	r24, 0x01	; 1
    18a8:	81 70       	andi	r24, 0x01	; 1
    18aa:	98 2f       	mov	r25, r24
    18ac:	92 95       	swap	r25
    18ae:	99 0f       	add	r25, r25
    18b0:	90 7e       	andi	r25, 0xE0	; 224
    18b2:	8c 91       	ld	r24, X
    18b4:	8f 7d       	andi	r24, 0xDF	; 223
    18b6:	89 2b       	or	r24, r25
    18b8:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    18ba:	af e4       	ldi	r26, 0x4F	; 79
    18bc:	b0 e0       	ldi	r27, 0x00	; 0
    18be:	e9 81       	ldd	r30, Y+1	; 0x01
    18c0:	fa 81       	ldd	r31, Y+2	; 0x02
    18c2:	82 81       	ldd	r24, Z+2	; 0x02
    18c4:	81 70       	andi	r24, 0x01	; 1
    18c6:	81 70       	andi	r24, 0x01	; 1
    18c8:	98 2f       	mov	r25, r24
    18ca:	92 95       	swap	r25
    18cc:	90 7f       	andi	r25, 0xF0	; 240
    18ce:	8c 91       	ld	r24, X
    18d0:	8f 7e       	andi	r24, 0xEF	; 239
    18d2:	89 2b       	or	r24, r25
    18d4:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    18d6:	aa e4       	ldi	r26, 0x4A	; 74
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	e9 81       	ldd	r30, Y+1	; 0x01
    18dc:	fa 81       	ldd	r31, Y+2	; 0x02
    18de:	87 81       	ldd	r24, Z+7	; 0x07
    18e0:	90 85       	ldd	r25, Z+8	; 0x08
    18e2:	11 96       	adiw	r26, 0x01	; 1
    18e4:	9c 93       	st	X, r25
    18e6:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    18e8:	a8 e4       	ldi	r26, 0x48	; 72
    18ea:	b0 e0       	ldi	r27, 0x00	; 0
    18ec:	e9 81       	ldd	r30, Y+1	; 0x01
    18ee:	fa 81       	ldd	r31, Y+2	; 0x02
    18f0:	87 81       	ldd	r24, Z+7	; 0x07
    18f2:	90 85       	ldd	r25, Z+8	; 0x08
    18f4:	11 96       	adiw	r26, 0x01	; 1
    18f6:	9c 93       	st	X, r25
    18f8:	8e 93       	st	-X, r24
    18fa:	1b c2       	rjmp	.+1078   	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_FREQUENCY_CORRECT_PWM_OCR1A_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    18fc:	ef e4       	ldi	r30, 0x4F	; 79
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	87 7f       	andi	r24, 0xF7	; 247
    1904:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1906:	ef e4       	ldi	r30, 0x4F	; 79
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	80 81       	ld	r24, Z
    190c:	8b 7f       	andi	r24, 0xFB	; 251
    190e:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1910:	af e4       	ldi	r26, 0x4F	; 79
    1912:	b0 e0       	ldi	r27, 0x00	; 0
    1914:	e9 81       	ldd	r30, Y+1	; 0x01
    1916:	fa 81       	ldd	r31, Y+2	; 0x02
    1918:	82 81       	ldd	r24, Z+2	; 0x02
    191a:	86 95       	lsr	r24
    191c:	81 70       	andi	r24, 0x01	; 1
    191e:	98 2f       	mov	r25, r24
    1920:	97 95       	ror	r25
    1922:	99 27       	eor	r25, r25
    1924:	97 95       	ror	r25
    1926:	8c 91       	ld	r24, X
    1928:	8f 77       	andi	r24, 0x7F	; 127
    192a:	89 2b       	or	r24, r25
    192c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    192e:	af e4       	ldi	r26, 0x4F	; 79
    1930:	b0 e0       	ldi	r27, 0x00	; 0
    1932:	e9 81       	ldd	r30, Y+1	; 0x01
    1934:	fa 81       	ldd	r31, Y+2	; 0x02
    1936:	82 81       	ldd	r24, Z+2	; 0x02
    1938:	81 70       	andi	r24, 0x01	; 1
    193a:	81 70       	andi	r24, 0x01	; 1
    193c:	98 2f       	mov	r25, r24
    193e:	92 95       	swap	r25
    1940:	99 0f       	add	r25, r25
    1942:	99 0f       	add	r25, r25
    1944:	90 7c       	andi	r25, 0xC0	; 192
    1946:	8c 91       	ld	r24, X
    1948:	8f 7b       	andi	r24, 0xBF	; 191
    194a:	89 2b       	or	r24, r25
    194c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    194e:	af e4       	ldi	r26, 0x4F	; 79
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	e9 81       	ldd	r30, Y+1	; 0x01
    1954:	fa 81       	ldd	r31, Y+2	; 0x02
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	86 95       	lsr	r24
    195a:	81 70       	andi	r24, 0x01	; 1
    195c:	81 70       	andi	r24, 0x01	; 1
    195e:	98 2f       	mov	r25, r24
    1960:	92 95       	swap	r25
    1962:	99 0f       	add	r25, r25
    1964:	90 7e       	andi	r25, 0xE0	; 224
    1966:	8c 91       	ld	r24, X
    1968:	8f 7d       	andi	r24, 0xDF	; 223
    196a:	89 2b       	or	r24, r25
    196c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    196e:	af e4       	ldi	r26, 0x4F	; 79
    1970:	b0 e0       	ldi	r27, 0x00	; 0
    1972:	e9 81       	ldd	r30, Y+1	; 0x01
    1974:	fa 81       	ldd	r31, Y+2	; 0x02
    1976:	82 81       	ldd	r24, Z+2	; 0x02
    1978:	81 70       	andi	r24, 0x01	; 1
    197a:	81 70       	andi	r24, 0x01	; 1
    197c:	98 2f       	mov	r25, r24
    197e:	92 95       	swap	r25
    1980:	90 7f       	andi	r25, 0xF0	; 240
    1982:	8c 91       	ld	r24, X
    1984:	8f 7e       	andi	r24, 0xEF	; 239
    1986:	89 2b       	or	r24, r25
    1988:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    198a:	aa e4       	ldi	r26, 0x4A	; 74
    198c:	b0 e0       	ldi	r27, 0x00	; 0
    198e:	e9 81       	ldd	r30, Y+1	; 0x01
    1990:	fa 81       	ldd	r31, Y+2	; 0x02
    1992:	87 81       	ldd	r24, Z+7	; 0x07
    1994:	90 85       	ldd	r25, Z+8	; 0x08
    1996:	11 96       	adiw	r26, 0x01	; 1
    1998:	9c 93       	st	X, r25
    199a:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    199c:	a8 e4       	ldi	r26, 0x48	; 72
    199e:	b0 e0       	ldi	r27, 0x00	; 0
    19a0:	e9 81       	ldd	r30, Y+1	; 0x01
    19a2:	fa 81       	ldd	r31, Y+2	; 0x02
    19a4:	87 81       	ldd	r24, Z+7	; 0x07
    19a6:	90 85       	ldd	r25, Z+8	; 0x08
    19a8:	11 96       	adiw	r26, 0x01	; 1
    19aa:	9c 93       	st	X, r25
    19ac:	8e 93       	st	-X, r24
    19ae:	c1 c1       	rjmp	.+898    	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_CORRECT_PWM_ICR1_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    19b0:	ef e4       	ldi	r30, 0x4F	; 79
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	80 81       	ld	r24, Z
    19b6:	87 7f       	andi	r24, 0xF7	; 247
    19b8:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    19ba:	ef e4       	ldi	r30, 0x4F	; 79
    19bc:	f0 e0       	ldi	r31, 0x00	; 0
    19be:	80 81       	ld	r24, Z
    19c0:	8b 7f       	andi	r24, 0xFB	; 251
    19c2:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    19c4:	af e4       	ldi	r26, 0x4F	; 79
    19c6:	b0 e0       	ldi	r27, 0x00	; 0
    19c8:	e9 81       	ldd	r30, Y+1	; 0x01
    19ca:	fa 81       	ldd	r31, Y+2	; 0x02
    19cc:	82 81       	ldd	r24, Z+2	; 0x02
    19ce:	86 95       	lsr	r24
    19d0:	81 70       	andi	r24, 0x01	; 1
    19d2:	98 2f       	mov	r25, r24
    19d4:	97 95       	ror	r25
    19d6:	99 27       	eor	r25, r25
    19d8:	97 95       	ror	r25
    19da:	8c 91       	ld	r24, X
    19dc:	8f 77       	andi	r24, 0x7F	; 127
    19de:	89 2b       	or	r24, r25
    19e0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    19e2:	af e4       	ldi	r26, 0x4F	; 79
    19e4:	b0 e0       	ldi	r27, 0x00	; 0
    19e6:	e9 81       	ldd	r30, Y+1	; 0x01
    19e8:	fa 81       	ldd	r31, Y+2	; 0x02
    19ea:	82 81       	ldd	r24, Z+2	; 0x02
    19ec:	81 70       	andi	r24, 0x01	; 1
    19ee:	81 70       	andi	r24, 0x01	; 1
    19f0:	98 2f       	mov	r25, r24
    19f2:	92 95       	swap	r25
    19f4:	99 0f       	add	r25, r25
    19f6:	99 0f       	add	r25, r25
    19f8:	90 7c       	andi	r25, 0xC0	; 192
    19fa:	8c 91       	ld	r24, X
    19fc:	8f 7b       	andi	r24, 0xBF	; 191
    19fe:	89 2b       	or	r24, r25
    1a00:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1a02:	af e4       	ldi	r26, 0x4F	; 79
    1a04:	b0 e0       	ldi	r27, 0x00	; 0
    1a06:	e9 81       	ldd	r30, Y+1	; 0x01
    1a08:	fa 81       	ldd	r31, Y+2	; 0x02
    1a0a:	82 81       	ldd	r24, Z+2	; 0x02
    1a0c:	86 95       	lsr	r24
    1a0e:	81 70       	andi	r24, 0x01	; 1
    1a10:	81 70       	andi	r24, 0x01	; 1
    1a12:	98 2f       	mov	r25, r24
    1a14:	92 95       	swap	r25
    1a16:	99 0f       	add	r25, r25
    1a18:	90 7e       	andi	r25, 0xE0	; 224
    1a1a:	8c 91       	ld	r24, X
    1a1c:	8f 7d       	andi	r24, 0xDF	; 223
    1a1e:	89 2b       	or	r24, r25
    1a20:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1a22:	af e4       	ldi	r26, 0x4F	; 79
    1a24:	b0 e0       	ldi	r27, 0x00	; 0
    1a26:	e9 81       	ldd	r30, Y+1	; 0x01
    1a28:	fa 81       	ldd	r31, Y+2	; 0x02
    1a2a:	82 81       	ldd	r24, Z+2	; 0x02
    1a2c:	81 70       	andi	r24, 0x01	; 1
    1a2e:	81 70       	andi	r24, 0x01	; 1
    1a30:	98 2f       	mov	r25, r24
    1a32:	92 95       	swap	r25
    1a34:	90 7f       	andi	r25, 0xF0	; 240
    1a36:	8c 91       	ld	r24, X
    1a38:	8f 7e       	andi	r24, 0xEF	; 239
    1a3a:	89 2b       	or	r24, r25
    1a3c:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1a3e:	aa e4       	ldi	r26, 0x4A	; 74
    1a40:	b0 e0       	ldi	r27, 0x00	; 0
    1a42:	e9 81       	ldd	r30, Y+1	; 0x01
    1a44:	fa 81       	ldd	r31, Y+2	; 0x02
    1a46:	87 81       	ldd	r24, Z+7	; 0x07
    1a48:	90 85       	ldd	r25, Z+8	; 0x08
    1a4a:	11 96       	adiw	r26, 0x01	; 1
    1a4c:	9c 93       	st	X, r25
    1a4e:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1a50:	a8 e4       	ldi	r26, 0x48	; 72
    1a52:	b0 e0       	ldi	r27, 0x00	; 0
    1a54:	e9 81       	ldd	r30, Y+1	; 0x01
    1a56:	fa 81       	ldd	r31, Y+2	; 0x02
    1a58:	87 81       	ldd	r24, Z+7	; 0x07
    1a5a:	90 85       	ldd	r25, Z+8	; 0x08
    1a5c:	11 96       	adiw	r26, 0x01	; 1
    1a5e:	9c 93       	st	X, r25
    1a60:	8e 93       	st	-X, r24
    1a62:	67 c1       	rjmp	.+718    	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_PHASE_CORRECT_PWM_OCR1A_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1a64:	ef e4       	ldi	r30, 0x4F	; 79
    1a66:	f0 e0       	ldi	r31, 0x00	; 0
    1a68:	80 81       	ld	r24, Z
    1a6a:	87 7f       	andi	r24, 0xF7	; 247
    1a6c:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1a6e:	ef e4       	ldi	r30, 0x4F	; 79
    1a70:	f0 e0       	ldi	r31, 0x00	; 0
    1a72:	80 81       	ld	r24, Z
    1a74:	8b 7f       	andi	r24, 0xFB	; 251
    1a76:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1a78:	af e4       	ldi	r26, 0x4F	; 79
    1a7a:	b0 e0       	ldi	r27, 0x00	; 0
    1a7c:	e9 81       	ldd	r30, Y+1	; 0x01
    1a7e:	fa 81       	ldd	r31, Y+2	; 0x02
    1a80:	82 81       	ldd	r24, Z+2	; 0x02
    1a82:	86 95       	lsr	r24
    1a84:	81 70       	andi	r24, 0x01	; 1
    1a86:	98 2f       	mov	r25, r24
    1a88:	97 95       	ror	r25
    1a8a:	99 27       	eor	r25, r25
    1a8c:	97 95       	ror	r25
    1a8e:	8c 91       	ld	r24, X
    1a90:	8f 77       	andi	r24, 0x7F	; 127
    1a92:	89 2b       	or	r24, r25
    1a94:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1a96:	af e4       	ldi	r26, 0x4F	; 79
    1a98:	b0 e0       	ldi	r27, 0x00	; 0
    1a9a:	e9 81       	ldd	r30, Y+1	; 0x01
    1a9c:	fa 81       	ldd	r31, Y+2	; 0x02
    1a9e:	82 81       	ldd	r24, Z+2	; 0x02
    1aa0:	81 70       	andi	r24, 0x01	; 1
    1aa2:	81 70       	andi	r24, 0x01	; 1
    1aa4:	98 2f       	mov	r25, r24
    1aa6:	92 95       	swap	r25
    1aa8:	99 0f       	add	r25, r25
    1aaa:	99 0f       	add	r25, r25
    1aac:	90 7c       	andi	r25, 0xC0	; 192
    1aae:	8c 91       	ld	r24, X
    1ab0:	8f 7b       	andi	r24, 0xBF	; 191
    1ab2:	89 2b       	or	r24, r25
    1ab4:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>1);
    1ab6:	af e4       	ldi	r26, 0x4F	; 79
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	e9 81       	ldd	r30, Y+1	; 0x01
    1abc:	fa 81       	ldd	r31, Y+2	; 0x02
    1abe:	82 81       	ldd	r24, Z+2	; 0x02
    1ac0:	86 95       	lsr	r24
    1ac2:	81 70       	andi	r24, 0x01	; 1
    1ac4:	81 70       	andi	r24, 0x01	; 1
    1ac6:	98 2f       	mov	r25, r24
    1ac8:	92 95       	swap	r25
    1aca:	99 0f       	add	r25, r25
    1acc:	90 7e       	andi	r25, 0xE0	; 224
    1ace:	8c 91       	ld	r24, X
    1ad0:	8f 7d       	andi	r24, 0xDF	; 223
    1ad2:	89 2b       	or	r24, r25
    1ad4:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Phase_Correct_PWM>>0);
    1ad6:	af e4       	ldi	r26, 0x4F	; 79
    1ad8:	b0 e0       	ldi	r27, 0x00	; 0
    1ada:	e9 81       	ldd	r30, Y+1	; 0x01
    1adc:	fa 81       	ldd	r31, Y+2	; 0x02
    1ade:	82 81       	ldd	r24, Z+2	; 0x02
    1ae0:	81 70       	andi	r24, 0x01	; 1
    1ae2:	81 70       	andi	r24, 0x01	; 1
    1ae4:	98 2f       	mov	r25, r24
    1ae6:	92 95       	swap	r25
    1ae8:	90 7f       	andi	r25, 0xF0	; 240
    1aea:	8c 91       	ld	r24, X
    1aec:	8f 7e       	andi	r24, 0xEF	; 239
    1aee:	89 2b       	or	r24, r25
    1af0:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1af2:	aa e4       	ldi	r26, 0x4A	; 74
    1af4:	b0 e0       	ldi	r27, 0x00	; 0
    1af6:	e9 81       	ldd	r30, Y+1	; 0x01
    1af8:	fa 81       	ldd	r31, Y+2	; 0x02
    1afa:	87 81       	ldd	r24, Z+7	; 0x07
    1afc:	90 85       	ldd	r25, Z+8	; 0x08
    1afe:	11 96       	adiw	r26, 0x01	; 1
    1b00:	9c 93       	st	X, r25
    1b02:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1b04:	a8 e4       	ldi	r26, 0x48	; 72
    1b06:	b0 e0       	ldi	r27, 0x00	; 0
    1b08:	e9 81       	ldd	r30, Y+1	; 0x01
    1b0a:	fa 81       	ldd	r31, Y+2	; 0x02
    1b0c:	87 81       	ldd	r24, Z+7	; 0x07
    1b0e:	90 85       	ldd	r25, Z+8	; 0x08
    1b10:	11 96       	adiw	r26, 0x01	; 1
    1b12:	9c 93       	st	X, r25
    1b14:	8e 93       	st	-X, r24
    1b16:	0d c1       	rjmp	.+538    	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_CTC_ICR1_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1b18:	ef e4       	ldi	r30, 0x4F	; 79
    1b1a:	f0 e0       	ldi	r31, 0x00	; 0
    1b1c:	80 81       	ld	r24, Z
    1b1e:	87 7f       	andi	r24, 0xF7	; 247
    1b20:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1b22:	ef e4       	ldi	r30, 0x4F	; 79
    1b24:	f0 e0       	ldi	r31, 0x00	; 0
    1b26:	80 81       	ld	r24, Z
    1b28:	8b 7f       	andi	r24, 0xFB	; 251
    1b2a:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    1b2c:	af e4       	ldi	r26, 0x4F	; 79
    1b2e:	b0 e0       	ldi	r27, 0x00	; 0
    1b30:	e9 81       	ldd	r30, Y+1	; 0x01
    1b32:	fa 81       	ldd	r31, Y+2	; 0x02
    1b34:	80 81       	ld	r24, Z
    1b36:	86 95       	lsr	r24
    1b38:	81 70       	andi	r24, 0x01	; 1
    1b3a:	98 2f       	mov	r25, r24
    1b3c:	97 95       	ror	r25
    1b3e:	99 27       	eor	r25, r25
    1b40:	97 95       	ror	r25
    1b42:	8c 91       	ld	r24, X
    1b44:	8f 77       	andi	r24, 0x7F	; 127
    1b46:	89 2b       	or	r24, r25
    1b48:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    1b4a:	af e4       	ldi	r26, 0x4F	; 79
    1b4c:	b0 e0       	ldi	r27, 0x00	; 0
    1b4e:	e9 81       	ldd	r30, Y+1	; 0x01
    1b50:	fa 81       	ldd	r31, Y+2	; 0x02
    1b52:	80 81       	ld	r24, Z
    1b54:	81 70       	andi	r24, 0x01	; 1
    1b56:	81 70       	andi	r24, 0x01	; 1
    1b58:	98 2f       	mov	r25, r24
    1b5a:	92 95       	swap	r25
    1b5c:	99 0f       	add	r25, r25
    1b5e:	99 0f       	add	r25, r25
    1b60:	90 7c       	andi	r25, 0xC0	; 192
    1b62:	8c 91       	ld	r24, X
    1b64:	8f 7b       	andi	r24, 0xBF	; 191
    1b66:	89 2b       	or	r24, r25
    1b68:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Non_PWM>>1);
    1b6a:	af e4       	ldi	r26, 0x4F	; 79
    1b6c:	b0 e0       	ldi	r27, 0x00	; 0
    1b6e:	e9 81       	ldd	r30, Y+1	; 0x01
    1b70:	fa 81       	ldd	r31, Y+2	; 0x02
    1b72:	80 81       	ld	r24, Z
    1b74:	86 95       	lsr	r24
    1b76:	81 70       	andi	r24, 0x01	; 1
    1b78:	81 70       	andi	r24, 0x01	; 1
    1b7a:	98 2f       	mov	r25, r24
    1b7c:	92 95       	swap	r25
    1b7e:	99 0f       	add	r25, r25
    1b80:	90 7e       	andi	r25, 0xE0	; 224
    1b82:	8c 91       	ld	r24, X
    1b84:	8f 7d       	andi	r24, 0xDF	; 223
    1b86:	89 2b       	or	r24, r25
    1b88:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Non_PWM>>0);
    1b8a:	af e4       	ldi	r26, 0x4F	; 79
    1b8c:	b0 e0       	ldi	r27, 0x00	; 0
    1b8e:	e9 81       	ldd	r30, Y+1	; 0x01
    1b90:	fa 81       	ldd	r31, Y+2	; 0x02
    1b92:	80 81       	ld	r24, Z
    1b94:	81 70       	andi	r24, 0x01	; 1
    1b96:	81 70       	andi	r24, 0x01	; 1
    1b98:	98 2f       	mov	r25, r24
    1b9a:	92 95       	swap	r25
    1b9c:	90 7f       	andi	r25, 0xF0	; 240
    1b9e:	8c 91       	ld	r24, X
    1ba0:	8f 7e       	andi	r24, 0xEF	; 239
    1ba2:	89 2b       	or	r24, r25
    1ba4:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1ba6:	aa e4       	ldi	r26, 0x4A	; 74
    1ba8:	b0 e0       	ldi	r27, 0x00	; 0
    1baa:	e9 81       	ldd	r30, Y+1	; 0x01
    1bac:	fa 81       	ldd	r31, Y+2	; 0x02
    1bae:	87 81       	ldd	r24, Z+7	; 0x07
    1bb0:	90 85       	ldd	r25, Z+8	; 0x08
    1bb2:	11 96       	adiw	r26, 0x01	; 1
    1bb4:	9c 93       	st	X, r25
    1bb6:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1bb8:	a8 e4       	ldi	r26, 0x48	; 72
    1bba:	b0 e0       	ldi	r27, 0x00	; 0
    1bbc:	e9 81       	ldd	r30, Y+1	; 0x01
    1bbe:	fa 81       	ldd	r31, Y+2	; 0x02
    1bc0:	87 81       	ldd	r24, Z+7	; 0x07
    1bc2:	90 85       	ldd	r25, Z+8	; 0x08
    1bc4:	11 96       	adiw	r26, 0x01	; 1
    1bc6:	9c 93       	st	X, r25
    1bc8:	8e 93       	st	-X, r24
    1bca:	b3 c0       	rjmp	.+358    	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_FAST_PWM_ICR1_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1bcc:	ef e4       	ldi	r30, 0x4F	; 79
    1bce:	f0 e0       	ldi	r31, 0x00	; 0
    1bd0:	80 81       	ld	r24, Z
    1bd2:	87 7f       	andi	r24, 0xF7	; 247
    1bd4:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1bd6:	ef e4       	ldi	r30, 0x4F	; 79
    1bd8:	f0 e0       	ldi	r31, 0x00	; 0
    1bda:	80 81       	ld	r24, Z
    1bdc:	8b 7f       	andi	r24, 0xFB	; 251
    1bde:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1be0:	af e4       	ldi	r26, 0x4F	; 79
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	e9 81       	ldd	r30, Y+1	; 0x01
    1be6:	fa 81       	ldd	r31, Y+2	; 0x02
    1be8:	81 81       	ldd	r24, Z+1	; 0x01
    1bea:	86 95       	lsr	r24
    1bec:	81 70       	andi	r24, 0x01	; 1
    1bee:	98 2f       	mov	r25, r24
    1bf0:	97 95       	ror	r25
    1bf2:	99 27       	eor	r25, r25
    1bf4:	97 95       	ror	r25
    1bf6:	8c 91       	ld	r24, X
    1bf8:	8f 77       	andi	r24, 0x7F	; 127
    1bfa:	89 2b       	or	r24, r25
    1bfc:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1bfe:	af e4       	ldi	r26, 0x4F	; 79
    1c00:	b0 e0       	ldi	r27, 0x00	; 0
    1c02:	e9 81       	ldd	r30, Y+1	; 0x01
    1c04:	fa 81       	ldd	r31, Y+2	; 0x02
    1c06:	81 81       	ldd	r24, Z+1	; 0x01
    1c08:	81 70       	andi	r24, 0x01	; 1
    1c0a:	81 70       	andi	r24, 0x01	; 1
    1c0c:	98 2f       	mov	r25, r24
    1c0e:	92 95       	swap	r25
    1c10:	99 0f       	add	r25, r25
    1c12:	99 0f       	add	r25, r25
    1c14:	90 7c       	andi	r25, 0xC0	; 192
    1c16:	8c 91       	ld	r24, X
    1c18:	8f 7b       	andi	r24, 0xBF	; 191
    1c1a:	89 2b       	or	r24, r25
    1c1c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1c1e:	af e4       	ldi	r26, 0x4F	; 79
    1c20:	b0 e0       	ldi	r27, 0x00	; 0
    1c22:	e9 81       	ldd	r30, Y+1	; 0x01
    1c24:	fa 81       	ldd	r31, Y+2	; 0x02
    1c26:	81 81       	ldd	r24, Z+1	; 0x01
    1c28:	86 95       	lsr	r24
    1c2a:	81 70       	andi	r24, 0x01	; 1
    1c2c:	81 70       	andi	r24, 0x01	; 1
    1c2e:	98 2f       	mov	r25, r24
    1c30:	92 95       	swap	r25
    1c32:	99 0f       	add	r25, r25
    1c34:	90 7e       	andi	r25, 0xE0	; 224
    1c36:	8c 91       	ld	r24, X
    1c38:	8f 7d       	andi	r24, 0xDF	; 223
    1c3a:	89 2b       	or	r24, r25
    1c3c:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1c3e:	af e4       	ldi	r26, 0x4F	; 79
    1c40:	b0 e0       	ldi	r27, 0x00	; 0
    1c42:	e9 81       	ldd	r30, Y+1	; 0x01
    1c44:	fa 81       	ldd	r31, Y+2	; 0x02
    1c46:	81 81       	ldd	r24, Z+1	; 0x01
    1c48:	81 70       	andi	r24, 0x01	; 1
    1c4a:	81 70       	andi	r24, 0x01	; 1
    1c4c:	98 2f       	mov	r25, r24
    1c4e:	92 95       	swap	r25
    1c50:	90 7f       	andi	r25, 0xF0	; 240
    1c52:	8c 91       	ld	r24, X
    1c54:	8f 7e       	andi	r24, 0xEF	; 239
    1c56:	89 2b       	or	r24, r25
    1c58:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1c5a:	aa e4       	ldi	r26, 0x4A	; 74
    1c5c:	b0 e0       	ldi	r27, 0x00	; 0
    1c5e:	e9 81       	ldd	r30, Y+1	; 0x01
    1c60:	fa 81       	ldd	r31, Y+2	; 0x02
    1c62:	87 81       	ldd	r24, Z+7	; 0x07
    1c64:	90 85       	ldd	r25, Z+8	; 0x08
    1c66:	11 96       	adiw	r26, 0x01	; 1
    1c68:	9c 93       	st	X, r25
    1c6a:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1c6c:	a8 e4       	ldi	r26, 0x48	; 72
    1c6e:	b0 e0       	ldi	r27, 0x00	; 0
    1c70:	e9 81       	ldd	r30, Y+1	; 0x01
    1c72:	fa 81       	ldd	r31, Y+2	; 0x02
    1c74:	87 81       	ldd	r24, Z+7	; 0x07
    1c76:	90 85       	ldd	r25, Z+8	; 0x08
    1c78:	11 96       	adiw	r26, 0x01	; 1
    1c7a:	9c 93       	st	X, r25
    1c7c:	8e 93       	st	-X, r24
    1c7e:	59 c0       	rjmp	.+178    	; 0x1d32 <TIMER1_Init+0xb42>
		break;
	case TIMER1_FAST_PWM_OCR1A_MODE:
		TCCR1A_REG->bits.FOC1A_BIT = LOGIC_LOW;
    1c80:	ef e4       	ldi	r30, 0x4F	; 79
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	87 7f       	andi	r24, 0xF7	; 247
    1c88:	80 83       	st	Z, r24
		TCCR1A_REG->bits.FOC1B_BIT = LOGIC_LOW;
    1c8a:	ef e4       	ldi	r30, 0x4F	; 79
    1c8c:	f0 e0       	ldi	r31, 0x00	; 0
    1c8e:	80 81       	ld	r24, Z
    1c90:	8b 7f       	andi	r24, 0xFB	; 251
    1c92:	80 83       	st	Z, r24
		TCCR1A_REG->bits.COM1A1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1c94:	af e4       	ldi	r26, 0x4F	; 79
    1c96:	b0 e0       	ldi	r27, 0x00	; 0
    1c98:	e9 81       	ldd	r30, Y+1	; 0x01
    1c9a:	fa 81       	ldd	r31, Y+2	; 0x02
    1c9c:	81 81       	ldd	r24, Z+1	; 0x01
    1c9e:	86 95       	lsr	r24
    1ca0:	81 70       	andi	r24, 0x01	; 1
    1ca2:	98 2f       	mov	r25, r24
    1ca4:	97 95       	ror	r25
    1ca6:	99 27       	eor	r25, r25
    1ca8:	97 95       	ror	r25
    1caa:	8c 91       	ld	r24, X
    1cac:	8f 77       	andi	r24, 0x7F	; 127
    1cae:	89 2b       	or	r24, r25
    1cb0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1A0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1cb2:	af e4       	ldi	r26, 0x4F	; 79
    1cb4:	b0 e0       	ldi	r27, 0x00	; 0
    1cb6:	e9 81       	ldd	r30, Y+1	; 0x01
    1cb8:	fa 81       	ldd	r31, Y+2	; 0x02
    1cba:	81 81       	ldd	r24, Z+1	; 0x01
    1cbc:	81 70       	andi	r24, 0x01	; 1
    1cbe:	81 70       	andi	r24, 0x01	; 1
    1cc0:	98 2f       	mov	r25, r24
    1cc2:	92 95       	swap	r25
    1cc4:	99 0f       	add	r25, r25
    1cc6:	99 0f       	add	r25, r25
    1cc8:	90 7c       	andi	r25, 0xC0	; 192
    1cca:	8c 91       	ld	r24, X
    1ccc:	8f 7b       	andi	r24, 0xBF	; 191
    1cce:	89 2b       	or	r24, r25
    1cd0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B1_BIT = (Config_Ptr->Compare_output_Fast_PWM>>1);
    1cd2:	af e4       	ldi	r26, 0x4F	; 79
    1cd4:	b0 e0       	ldi	r27, 0x00	; 0
    1cd6:	e9 81       	ldd	r30, Y+1	; 0x01
    1cd8:	fa 81       	ldd	r31, Y+2	; 0x02
    1cda:	81 81       	ldd	r24, Z+1	; 0x01
    1cdc:	86 95       	lsr	r24
    1cde:	81 70       	andi	r24, 0x01	; 1
    1ce0:	81 70       	andi	r24, 0x01	; 1
    1ce2:	98 2f       	mov	r25, r24
    1ce4:	92 95       	swap	r25
    1ce6:	99 0f       	add	r25, r25
    1ce8:	90 7e       	andi	r25, 0xE0	; 224
    1cea:	8c 91       	ld	r24, X
    1cec:	8f 7d       	andi	r24, 0xDF	; 223
    1cee:	89 2b       	or	r24, r25
    1cf0:	8c 93       	st	X, r24
		TCCR1A_REG->bits.COM1B0_BIT = (Config_Ptr->Compare_output_Fast_PWM>>0);
    1cf2:	af e4       	ldi	r26, 0x4F	; 79
    1cf4:	b0 e0       	ldi	r27, 0x00	; 0
    1cf6:	e9 81       	ldd	r30, Y+1	; 0x01
    1cf8:	fa 81       	ldd	r31, Y+2	; 0x02
    1cfa:	81 81       	ldd	r24, Z+1	; 0x01
    1cfc:	81 70       	andi	r24, 0x01	; 1
    1cfe:	81 70       	andi	r24, 0x01	; 1
    1d00:	98 2f       	mov	r25, r24
    1d02:	92 95       	swap	r25
    1d04:	90 7f       	andi	r25, 0xF0	; 240
    1d06:	8c 91       	ld	r24, X
    1d08:	8f 7e       	andi	r24, 0xEF	; 239
    1d0a:	89 2b       	or	r24, r25
    1d0c:	8c 93       	st	X, r24
		OCR1A_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1d0e:	aa e4       	ldi	r26, 0x4A	; 74
    1d10:	b0 e0       	ldi	r27, 0x00	; 0
    1d12:	e9 81       	ldd	r30, Y+1	; 0x01
    1d14:	fa 81       	ldd	r31, Y+2	; 0x02
    1d16:	87 81       	ldd	r24, Z+7	; 0x07
    1d18:	90 85       	ldd	r25, Z+8	; 0x08
    1d1a:	11 96       	adiw	r26, 0x01	; 1
    1d1c:	9c 93       	st	X, r25
    1d1e:	8e 93       	st	-X, r24
		OCR1B_REG = Config_Ptr->TIMER1_COMPARE_VALUE;
    1d20:	a8 e4       	ldi	r26, 0x48	; 72
    1d22:	b0 e0       	ldi	r27, 0x00	; 0
    1d24:	e9 81       	ldd	r30, Y+1	; 0x01
    1d26:	fa 81       	ldd	r31, Y+2	; 0x02
    1d28:	87 81       	ldd	r24, Z+7	; 0x07
    1d2a:	90 85       	ldd	r25, Z+8	; 0x08
    1d2c:	11 96       	adiw	r26, 0x01	; 1
    1d2e:	9c 93       	st	X, r25
    1d30:	8e 93       	st	-X, r24
		break;
	}
	TCNT1_REG = (Config_Ptr->TIMER1_INITIAL_VALUE);
    1d32:	ac e4       	ldi	r26, 0x4C	; 76
    1d34:	b0 e0       	ldi	r27, 0x00	; 0
    1d36:	e9 81       	ldd	r30, Y+1	; 0x01
    1d38:	fa 81       	ldd	r31, Y+2	; 0x02
    1d3a:	85 81       	ldd	r24, Z+5	; 0x05
    1d3c:	96 81       	ldd	r25, Z+6	; 0x06
    1d3e:	11 96       	adiw	r26, 0x01	; 1
    1d40:	9c 93       	st	X, r25
    1d42:	8e 93       	st	-X, r24
	TCCR1A_REG->bits.WGM10_BIT = (Config_Ptr->Mode);
    1d44:	af e4       	ldi	r26, 0x4F	; 79
    1d46:	b0 e0       	ldi	r27, 0x00	; 0
    1d48:	e9 81       	ldd	r30, Y+1	; 0x01
    1d4a:	fa 81       	ldd	r31, Y+2	; 0x02
    1d4c:	84 81       	ldd	r24, Z+4	; 0x04
    1d4e:	81 70       	andi	r24, 0x01	; 1
    1d50:	98 2f       	mov	r25, r24
    1d52:	91 70       	andi	r25, 0x01	; 1
    1d54:	8c 91       	ld	r24, X
    1d56:	8e 7f       	andi	r24, 0xFE	; 254
    1d58:	89 2b       	or	r24, r25
    1d5a:	8c 93       	st	X, r24
	TCCR1A_REG->bits.WGM11_BIT = (Config_Ptr->Mode>> 1);
    1d5c:	af e4       	ldi	r26, 0x4F	; 79
    1d5e:	b0 e0       	ldi	r27, 0x00	; 0
    1d60:	e9 81       	ldd	r30, Y+1	; 0x01
    1d62:	fa 81       	ldd	r31, Y+2	; 0x02
    1d64:	84 81       	ldd	r24, Z+4	; 0x04
    1d66:	86 95       	lsr	r24
    1d68:	81 70       	andi	r24, 0x01	; 1
    1d6a:	81 70       	andi	r24, 0x01	; 1
    1d6c:	98 2f       	mov	r25, r24
    1d6e:	99 0f       	add	r25, r25
    1d70:	8c 91       	ld	r24, X
    1d72:	8d 7f       	andi	r24, 0xFD	; 253
    1d74:	89 2b       	or	r24, r25
    1d76:	8c 93       	st	X, r24
	TCCR1B_REG->bits.WGM12_BIT = (Config_Ptr->Mode >> 2);
    1d78:	ae e4       	ldi	r26, 0x4E	; 78
    1d7a:	b0 e0       	ldi	r27, 0x00	; 0
    1d7c:	e9 81       	ldd	r30, Y+1	; 0x01
    1d7e:	fa 81       	ldd	r31, Y+2	; 0x02
    1d80:	84 81       	ldd	r24, Z+4	; 0x04
    1d82:	86 95       	lsr	r24
    1d84:	86 95       	lsr	r24
    1d86:	81 70       	andi	r24, 0x01	; 1
    1d88:	81 70       	andi	r24, 0x01	; 1
    1d8a:	98 2f       	mov	r25, r24
    1d8c:	99 0f       	add	r25, r25
    1d8e:	99 0f       	add	r25, r25
    1d90:	99 0f       	add	r25, r25
    1d92:	8c 91       	ld	r24, X
    1d94:	87 7f       	andi	r24, 0xF7	; 247
    1d96:	89 2b       	or	r24, r25
    1d98:	8c 93       	st	X, r24
	TCCR1B_REG->bits.WGM13_BIT = (Config_Ptr->Mode >> 3);
    1d9a:	ae e4       	ldi	r26, 0x4E	; 78
    1d9c:	b0 e0       	ldi	r27, 0x00	; 0
    1d9e:	e9 81       	ldd	r30, Y+1	; 0x01
    1da0:	fa 81       	ldd	r31, Y+2	; 0x02
    1da2:	84 81       	ldd	r24, Z+4	; 0x04
    1da4:	86 95       	lsr	r24
    1da6:	86 95       	lsr	r24
    1da8:	86 95       	lsr	r24
    1daa:	81 70       	andi	r24, 0x01	; 1
    1dac:	81 70       	andi	r24, 0x01	; 1
    1dae:	98 2f       	mov	r25, r24
    1db0:	92 95       	swap	r25
    1db2:	90 7f       	andi	r25, 0xF0	; 240
    1db4:	8c 91       	ld	r24, X
    1db6:	8f 7e       	andi	r24, 0xEF	; 239
    1db8:	89 2b       	or	r24, r25
    1dba:	8c 93       	st	X, r24
	//TCCR0_REG->FULL_REG = ((TCCR0_REG->FULL_REG & CLOCK_SELECT_MASK) | (Config_Ptr->Clock_Select));
}
    1dbc:	0f 90       	pop	r0
    1dbe:	0f 90       	pop	r0
    1dc0:	0f 90       	pop	r0
    1dc2:	0f 90       	pop	r0
    1dc4:	cf 91       	pop	r28
    1dc6:	df 91       	pop	r29
    1dc8:	08 95       	ret

00001dca <TIMER1_Start>:
void TIMER1_Start(const TIMER1_INIT_CONFIG* Config_Ptr)
{
    1dca:	df 93       	push	r29
    1dcc:	cf 93       	push	r28
    1dce:	00 d0       	rcall	.+0      	; 0x1dd0 <TIMER1_Start+0x6>
    1dd0:	cd b7       	in	r28, 0x3d	; 61
    1dd2:	de b7       	in	r29, 0x3e	; 62
    1dd4:	9a 83       	std	Y+2, r25	; 0x02
    1dd6:	89 83       	std	Y+1, r24	; 0x01
	TCCR1B_REG->FULL_REG = ((TCCR1B_REG->FULL_REG & CLOCK_SELECT_MASK) | ((Config_Ptr->Clock_Select & 0x07)));
    1dd8:	ae e4       	ldi	r26, 0x4E	; 78
    1dda:	b0 e0       	ldi	r27, 0x00	; 0
    1ddc:	ee e4       	ldi	r30, 0x4E	; 78
    1dde:	f0 e0       	ldi	r31, 0x00	; 0
    1de0:	80 81       	ld	r24, Z
    1de2:	98 2f       	mov	r25, r24
    1de4:	98 7f       	andi	r25, 0xF8	; 248
    1de6:	e9 81       	ldd	r30, Y+1	; 0x01
    1de8:	fa 81       	ldd	r31, Y+2	; 0x02
    1dea:	83 81       	ldd	r24, Z+3	; 0x03
    1dec:	87 70       	andi	r24, 0x07	; 7
    1dee:	89 2b       	or	r24, r25
    1df0:	8c 93       	st	X, r24
}
    1df2:	0f 90       	pop	r0
    1df4:	0f 90       	pop	r0
    1df6:	cf 91       	pop	r28
    1df8:	df 91       	pop	r29
    1dfa:	08 95       	ret

00001dfc <TIMER1_Stop>:
void TIMER1_Stop(const TIMER1_INIT_CONFIG* Config_Ptr)
{
    1dfc:	df 93       	push	r29
    1dfe:	cf 93       	push	r28
    1e00:	00 d0       	rcall	.+0      	; 0x1e02 <TIMER1_Stop+0x6>
    1e02:	cd b7       	in	r28, 0x3d	; 61
    1e04:	de b7       	in	r29, 0x3e	; 62
    1e06:	9a 83       	std	Y+2, r25	; 0x02
    1e08:	89 83       	std	Y+1, r24	; 0x01
	TCCR1B_REG->FULL_REG = ((TCCR1B_REG->FULL_REG & CLOCK_SELECT_MASK) | (NO_CLOCK));
    1e0a:	ae e4       	ldi	r26, 0x4E	; 78
    1e0c:	b0 e0       	ldi	r27, 0x00	; 0
    1e0e:	ee e4       	ldi	r30, 0x4E	; 78
    1e10:	f0 e0       	ldi	r31, 0x00	; 0
    1e12:	80 81       	ld	r24, Z
    1e14:	88 7f       	andi	r24, 0xF8	; 248
    1e16:	8c 93       	st	X, r24
}
    1e18:	0f 90       	pop	r0
    1e1a:	0f 90       	pop	r0
    1e1c:	cf 91       	pop	r28
    1e1e:	df 91       	pop	r29
    1e20:	08 95       	ret

00001e22 <TIMER1_GetCounts>:
u16 TIMER1_GetCounts(void)
{
    1e22:	df 93       	push	r29
    1e24:	cf 93       	push	r28
    1e26:	cd b7       	in	r28, 0x3d	; 61
    1e28:	de b7       	in	r29, 0x3e	; 62
	return TCNT1_REG;
    1e2a:	ec e4       	ldi	r30, 0x4C	; 76
    1e2c:	f0 e0       	ldi	r31, 0x00	; 0
    1e2e:	80 81       	ld	r24, Z
    1e30:	91 81       	ldd	r25, Z+1	; 0x01
}
    1e32:	cf 91       	pop	r28
    1e34:	df 91       	pop	r29
    1e36:	08 95       	ret

00001e38 <TIMER1_SetDelayTimeMilliSec>:
void TIMER1_SetDelayTimeMilliSec(const TIMER1_INIT_CONFIG* Config_Ptr, u32 copy_u32TimeMS)
{
    1e38:	df 93       	push	r29
    1e3a:	cf 93       	push	r28
    1e3c:	00 d0       	rcall	.+0      	; 0x1e3e <TIMER1_SetDelayTimeMilliSec+0x6>
    1e3e:	00 d0       	rcall	.+0      	; 0x1e40 <TIMER1_SetDelayTimeMilliSec+0x8>
    1e40:	00 d0       	rcall	.+0      	; 0x1e42 <TIMER1_SetDelayTimeMilliSec+0xa>
    1e42:	cd b7       	in	r28, 0x3d	; 61
    1e44:	de b7       	in	r29, 0x3e	; 62
    1e46:	9a 83       	std	Y+2, r25	; 0x02
    1e48:	89 83       	std	Y+1, r24	; 0x01
    1e4a:	4b 83       	std	Y+3, r20	; 0x03
    1e4c:	5c 83       	std	Y+4, r21	; 0x04
    1e4e:	6d 83       	std	Y+5, r22	; 0x05
    1e50:	7e 83       	std	Y+6, r23	; 0x06
	switch(Config_Ptr->Mode)
    1e52:	e9 81       	ldd	r30, Y+1	; 0x01
    1e54:	fa 81       	ldd	r31, Y+2	; 0x02
    1e56:	84 81       	ldd	r24, Z+4	; 0x04
    1e58:	88 2f       	mov	r24, r24
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	00 97       	sbiw	r24, 0x00	; 0
    1e5e:	09 f0       	breq	.+2      	; 0x1e62 <TIMER1_SetDelayTimeMilliSec+0x2a>
    1e60:	4c c0       	rjmp	.+152    	; 0x1efa <TIMER1_SetDelayTimeMilliSec+0xc2>
	{
	case TIMER1_NORMAL_MODE:
		timer1OverFlowCounter = (((copy_u32TimeMS * 1000)/TICK_TIME) / TOP_VALUE);
    1e62:	8b 81       	ldd	r24, Y+3	; 0x03
    1e64:	9c 81       	ldd	r25, Y+4	; 0x04
    1e66:	ad 81       	ldd	r26, Y+5	; 0x05
    1e68:	be 81       	ldd	r27, Y+6	; 0x06
    1e6a:	28 ee       	ldi	r18, 0xE8	; 232
    1e6c:	33 e0       	ldi	r19, 0x03	; 3
    1e6e:	40 e0       	ldi	r20, 0x00	; 0
    1e70:	50 e0       	ldi	r21, 0x00	; 0
    1e72:	bc 01       	movw	r22, r24
    1e74:	cd 01       	movw	r24, r26
    1e76:	0e 94 5f 12 	call	0x24be	; 0x24be <__mulsi3>
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	cb 01       	movw	r24, r22
    1e7e:	2c ef       	ldi	r18, 0xFC	; 252
    1e80:	3f ef       	ldi	r19, 0xFF	; 255
    1e82:	43 e0       	ldi	r20, 0x03	; 3
    1e84:	50 e0       	ldi	r21, 0x00	; 0
    1e86:	bc 01       	movw	r22, r24
    1e88:	cd 01       	movw	r24, r26
    1e8a:	0e 94 92 12 	call	0x2524	; 0x2524 <__udivmodsi4>
    1e8e:	da 01       	movw	r26, r20
    1e90:	c9 01       	movw	r24, r18
    1e92:	80 93 7a 01 	sts	0x017A, r24
    1e96:	90 93 7b 01 	sts	0x017B, r25
    1e9a:	a0 93 7c 01 	sts	0x017C, r26
    1e9e:	b0 93 7d 01 	sts	0x017D, r27
		timer1RemCounter = (u16)(((copy_u32TimeMS * 1000)/TICK_TIME) % TOP_VALUE);
    1ea2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ea4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ea6:	ad 81       	ldd	r26, Y+5	; 0x05
    1ea8:	be 81       	ldd	r27, Y+6	; 0x06
    1eaa:	28 ee       	ldi	r18, 0xE8	; 232
    1eac:	33 e0       	ldi	r19, 0x03	; 3
    1eae:	40 e0       	ldi	r20, 0x00	; 0
    1eb0:	50 e0       	ldi	r21, 0x00	; 0
    1eb2:	bc 01       	movw	r22, r24
    1eb4:	cd 01       	movw	r24, r26
    1eb6:	0e 94 5f 12 	call	0x24be	; 0x24be <__mulsi3>
    1eba:	dc 01       	movw	r26, r24
    1ebc:	cb 01       	movw	r24, r22
    1ebe:	b6 95       	lsr	r27
    1ec0:	a7 95       	ror	r26
    1ec2:	97 95       	ror	r25
    1ec4:	87 95       	ror	r24
    1ec6:	b6 95       	lsr	r27
    1ec8:	a7 95       	ror	r26
    1eca:	97 95       	ror	r25
    1ecc:	87 95       	ror	r24
    1ece:	2f ef       	ldi	r18, 0xFF	; 255
    1ed0:	3f ef       	ldi	r19, 0xFF	; 255
    1ed2:	40 e0       	ldi	r20, 0x00	; 0
    1ed4:	50 e0       	ldi	r21, 0x00	; 0
    1ed6:	bc 01       	movw	r22, r24
    1ed8:	cd 01       	movw	r24, r26
    1eda:	0e 94 92 12 	call	0x2524	; 0x2524 <__udivmodsi4>
    1ede:	dc 01       	movw	r26, r24
    1ee0:	cb 01       	movw	r24, r22
    1ee2:	90 93 7f 01 	sts	0x017F, r25
    1ee6:	80 93 7e 01 	sts	0x017E, r24
		TIMER1_IntEnable(Config_Ptr);
    1eea:	89 81       	ldd	r24, Y+1	; 0x01
    1eec:	9a 81       	ldd	r25, Y+2	; 0x02
    1eee:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <TIMER1_IntEnable>
		TIMER1_Start(Config_Ptr);
    1ef2:	89 81       	ldd	r24, Y+1	; 0x01
    1ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ef6:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <TIMER1_Start>
		break;
	}
}
    1efa:	26 96       	adiw	r28, 0x06	; 6
    1efc:	0f b6       	in	r0, 0x3f	; 63
    1efe:	f8 94       	cli
    1f00:	de bf       	out	0x3e, r29	; 62
    1f02:	0f be       	out	0x3f, r0	; 63
    1f04:	cd bf       	out	0x3d, r28	; 61
    1f06:	cf 91       	pop	r28
    1f08:	df 91       	pop	r29
    1f0a:	08 95       	ret

00001f0c <TIMER1_IntEnable>:
void TIMER1_IntEnable(const TIMER1_INIT_CONFIG* Config_Ptr)
{
    1f0c:	df 93       	push	r29
    1f0e:	cf 93       	push	r28
    1f10:	00 d0       	rcall	.+0      	; 0x1f12 <TIMER1_IntEnable+0x6>
    1f12:	cd b7       	in	r28, 0x3d	; 61
    1f14:	de b7       	in	r29, 0x3e	; 62
    1f16:	9a 83       	std	Y+2, r25	; 0x02
    1f18:	89 83       	std	Y+1, r24	; 0x01
	if(Config_Ptr->Mode == TIMER1_NORMAL_MODE)
    1f1a:	e9 81       	ldd	r30, Y+1	; 0x01
    1f1c:	fa 81       	ldd	r31, Y+2	; 0x02
    1f1e:	84 81       	ldd	r24, Z+4	; 0x04
    1f20:	88 23       	and	r24, r24
    1f22:	29 f4       	brne	.+10     	; 0x1f2e <TIMER1_IntEnable+0x22>
	{
		TIMSK_REG->bits.TOIE1_BIT = LOGIC_HIGH;
    1f24:	e9 e5       	ldi	r30, 0x59	; 89
    1f26:	f0 e0       	ldi	r31, 0x00	; 0
    1f28:	80 81       	ld	r24, Z
    1f2a:	84 60       	ori	r24, 0x04	; 4
    1f2c:	80 83       	st	Z, r24
	else
	{
		//return error;
	}
	 */
}
    1f2e:	0f 90       	pop	r0
    1f30:	0f 90       	pop	r0
    1f32:	cf 91       	pop	r28
    1f34:	df 91       	pop	r29
    1f36:	08 95       	ret

00001f38 <TIMER1_IntDisable>:
void TIMER1_IntDisable(const TIMER1_INIT_CONFIG* Config_Ptr)
{
    1f38:	df 93       	push	r29
    1f3a:	cf 93       	push	r28
    1f3c:	00 d0       	rcall	.+0      	; 0x1f3e <TIMER1_IntDisable+0x6>
    1f3e:	cd b7       	in	r28, 0x3d	; 61
    1f40:	de b7       	in	r29, 0x3e	; 62
    1f42:	9a 83       	std	Y+2, r25	; 0x02
    1f44:	89 83       	std	Y+1, r24	; 0x01
	if(Config_Ptr->Mode == TIMER1_NORMAL_MODE)
    1f46:	e9 81       	ldd	r30, Y+1	; 0x01
    1f48:	fa 81       	ldd	r31, Y+2	; 0x02
    1f4a:	84 81       	ldd	r24, Z+4	; 0x04
    1f4c:	88 23       	and	r24, r24
    1f4e:	29 f4       	brne	.+10     	; 0x1f5a <TIMER1_IntDisable+0x22>
	{
		TIMSK_REG->bits.TOIE1_BIT = LOGIC_HIGH;
    1f50:	e9 e5       	ldi	r30, 0x59	; 89
    1f52:	f0 e0       	ldi	r31, 0x00	; 0
    1f54:	80 81       	ld	r24, Z
    1f56:	84 60       	ori	r24, 0x04	; 4
    1f58:	80 83       	st	Z, r24
	else
	{
		//return error;
	}
	 */
}
    1f5a:	0f 90       	pop	r0
    1f5c:	0f 90       	pop	r0
    1f5e:	cf 91       	pop	r28
    1f60:	df 91       	pop	r29
    1f62:	08 95       	ret

00001f64 <TIMER1_SetCallBack>:

void TIMER1_SetCallBack(void(*ptrfn)(void))
{
    1f64:	df 93       	push	r29
    1f66:	cf 93       	push	r28
    1f68:	00 d0       	rcall	.+0      	; 0x1f6a <TIMER1_SetCallBack+0x6>
    1f6a:	cd b7       	in	r28, 0x3d	; 61
    1f6c:	de b7       	in	r29, 0x3e	; 62
    1f6e:	9a 83       	std	Y+2, r25	; 0x02
    1f70:	89 83       	std	Y+1, r24	; 0x01
	timer1PtrCallBack = ptrfn;
    1f72:	89 81       	ldd	r24, Y+1	; 0x01
    1f74:	9a 81       	ldd	r25, Y+2	; 0x02
    1f76:	90 93 81 01 	sts	0x0181, r25
    1f7a:	80 93 80 01 	sts	0x0180, r24
}
    1f7e:	0f 90       	pop	r0
    1f80:	0f 90       	pop	r0
    1f82:	cf 91       	pop	r28
    1f84:	df 91       	pop	r29
    1f86:	08 95       	ret

00001f88 <TIMER1_SetFastPWM>:
void TIMER1_SetFastPWM(const TIMER1_INIT_CONFIG* Config_Ptr, u16 duty)
{
    1f88:	df 93       	push	r29
    1f8a:	cf 93       	push	r28
    1f8c:	00 d0       	rcall	.+0      	; 0x1f8e <TIMER1_SetFastPWM+0x6>
    1f8e:	00 d0       	rcall	.+0      	; 0x1f90 <TIMER1_SetFastPWM+0x8>
    1f90:	00 d0       	rcall	.+0      	; 0x1f92 <TIMER1_SetFastPWM+0xa>
    1f92:	cd b7       	in	r28, 0x3d	; 61
    1f94:	de b7       	in	r29, 0x3e	; 62
    1f96:	9c 83       	std	Y+4, r25	; 0x04
    1f98:	8b 83       	std	Y+3, r24	; 0x03
    1f9a:	7e 83       	std	Y+6, r23	; 0x06
    1f9c:	6d 83       	std	Y+5, r22	; 0x05
	/* pwm freq = FCPU/(prescaler*256) */

	/* duty cycle */
	u16 dutyval = 0;
    1f9e:	1a 82       	std	Y+2, r1	; 0x02
    1fa0:	19 82       	std	Y+1, r1	; 0x01
	//	dutyval = (u16)((duty*TOP_VALUE)/100);
	dutyval = (u16)((duty*256)/100);
    1fa2:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa4:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa6:	98 2f       	mov	r25, r24
    1fa8:	88 27       	eor	r24, r24
    1faa:	24 e6       	ldi	r18, 0x64	; 100
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	b9 01       	movw	r22, r18
    1fb0:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__udivmodhi4>
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	9a 83       	std	Y+2, r25	; 0x02
    1fb8:	89 83       	std	Y+1, r24	; 0x01

	OCR1A_REG = dutyval;
    1fba:	ea e4       	ldi	r30, 0x4A	; 74
    1fbc:	f0 e0       	ldi	r31, 0x00	; 0
    1fbe:	89 81       	ldd	r24, Y+1	; 0x01
    1fc0:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc2:	91 83       	std	Z+1, r25	; 0x01
    1fc4:	80 83       	st	Z, r24

	OCR1B_REG = dutyval;
    1fc6:	e8 e4       	ldi	r30, 0x48	; 72
    1fc8:	f0 e0       	ldi	r31, 0x00	; 0
    1fca:	89 81       	ldd	r24, Y+1	; 0x01
    1fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    1fce:	91 83       	std	Z+1, r25	; 0x01
    1fd0:	80 83       	st	Z, r24

}
    1fd2:	26 96       	adiw	r28, 0x06	; 6
    1fd4:	0f b6       	in	r0, 0x3f	; 63
    1fd6:	f8 94       	cli
    1fd8:	de bf       	out	0x3e, r29	; 62
    1fda:	0f be       	out	0x3f, r0	; 63
    1fdc:	cd bf       	out	0x3d, r28	; 61
    1fde:	cf 91       	pop	r28
    1fe0:	df 91       	pop	r29
    1fe2:	08 95       	ret

00001fe4 <TIMER1_GetEventDuration>:
void TIMER1_SetPhaseCorrectPWM(const TIMER1_INIT_CONFIG* Config_Ptr, u16 duty);

void TIMER1_GetEventDuration(void)
{
    1fe4:	df 93       	push	r29
    1fe6:	cf 93       	push	r28
    1fe8:	cd b7       	in	r28, 0x3d	; 61
    1fea:	de b7       	in	r29, 0x3e	; 62
	ICR1_REG = 0;
    1fec:	e6 e4       	ldi	r30, 0x46	; 70
    1fee:	f0 e0       	ldi	r31, 0x00	; 0
    1ff0:	11 82       	std	Z+1, r1	; 0x01
    1ff2:	10 82       	st	Z, r1
	TIMSK_REG->bits.TICIE1_BIT = LOGIC_HIGH;
    1ff4:	e9 e5       	ldi	r30, 0x59	; 89
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	80 81       	ld	r24, Z
    1ffa:	80 62       	ori	r24, 0x20	; 32
    1ffc:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICNC1_BIT = LOGIC_LOW;
    1ffe:	ee e4       	ldi	r30, 0x4E	; 78
    2000:	f0 e0       	ldi	r31, 0x00	; 0
    2002:	80 81       	ld	r24, Z
    2004:	8f 77       	andi	r24, 0x7F	; 127
    2006:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICES1_BIT = RISING_EDGE;
    2008:	ee e4       	ldi	r30, 0x4E	; 78
    200a:	f0 e0       	ldi	r31, 0x00	; 0
    200c:	80 81       	ld	r24, Z
    200e:	80 64       	ori	r24, 0x40	; 64
    2010:	80 83       	st	Z, r24
}
    2012:	cf 91       	pop	r28
    2014:	df 91       	pop	r29
    2016:	08 95       	ret

00002018 <TIMER1_GetSignalFrequency>:
void TIMER1_GetSignalFrequency(void)
{
    2018:	df 93       	push	r29
    201a:	cf 93       	push	r28
    201c:	cd b7       	in	r28, 0x3d	; 61
    201e:	de b7       	in	r29, 0x3e	; 62
	ICR1_REG = 0;
    2020:	e6 e4       	ldi	r30, 0x46	; 70
    2022:	f0 e0       	ldi	r31, 0x00	; 0
    2024:	11 82       	std	Z+1, r1	; 0x01
    2026:	10 82       	st	Z, r1
	TIMSK_REG->bits.TICIE1_BIT = LOGIC_HIGH;
    2028:	e9 e5       	ldi	r30, 0x59	; 89
    202a:	f0 e0       	ldi	r31, 0x00	; 0
    202c:	80 81       	ld	r24, Z
    202e:	80 62       	ori	r24, 0x20	; 32
    2030:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICNC1_BIT = LOGIC_LOW;
    2032:	ee e4       	ldi	r30, 0x4E	; 78
    2034:	f0 e0       	ldi	r31, 0x00	; 0
    2036:	80 81       	ld	r24, Z
    2038:	8f 77       	andi	r24, 0x7F	; 127
    203a:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICES1_BIT = RISING_EDGE;
    203c:	ee e4       	ldi	r30, 0x4E	; 78
    203e:	f0 e0       	ldi	r31, 0x00	; 0
    2040:	80 81       	ld	r24, Z
    2042:	80 64       	ori	r24, 0x40	; 64
    2044:	80 83       	st	Z, r24
}
    2046:	cf 91       	pop	r28
    2048:	df 91       	pop	r29
    204a:	08 95       	ret

0000204c <TIMER1_GetSignalDutyCycle>:
void TIMER1_GetSignalDutyCycle(void)
{
    204c:	df 93       	push	r29
    204e:	cf 93       	push	r28
    2050:	cd b7       	in	r28, 0x3d	; 61
    2052:	de b7       	in	r29, 0x3e	; 62
	ICR1_REG = 0;
    2054:	e6 e4       	ldi	r30, 0x46	; 70
    2056:	f0 e0       	ldi	r31, 0x00	; 0
    2058:	11 82       	std	Z+1, r1	; 0x01
    205a:	10 82       	st	Z, r1
	TIMSK_REG->bits.TICIE1_BIT = LOGIC_HIGH;
    205c:	e9 e5       	ldi	r30, 0x59	; 89
    205e:	f0 e0       	ldi	r31, 0x00	; 0
    2060:	80 81       	ld	r24, Z
    2062:	80 62       	ori	r24, 0x20	; 32
    2064:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICNC1_BIT = LOGIC_LOW;
    2066:	ee e4       	ldi	r30, 0x4E	; 78
    2068:	f0 e0       	ldi	r31, 0x00	; 0
    206a:	80 81       	ld	r24, Z
    206c:	8f 77       	andi	r24, 0x7F	; 127
    206e:	80 83       	st	Z, r24
	TCCR1B_REG->bits.ICES1_BIT = RISING_EDGE;
    2070:	ee e4       	ldi	r30, 0x4E	; 78
    2072:	f0 e0       	ldi	r31, 0x00	; 0
    2074:	80 81       	ld	r24, Z
    2076:	80 64       	ori	r24, 0x40	; 64
    2078:	80 83       	st	Z, r24
}
    207a:	cf 91       	pop	r28
    207c:	df 91       	pop	r29
    207e:	08 95       	ret

00002080 <TIMER1_GetInputCaptureValue>:

u16 TIMER1_GetInputCaptureValue(void)
{
    2080:	df 93       	push	r29
    2082:	cf 93       	push	r28
    2084:	cd b7       	in	r28, 0x3d	; 61
    2086:	de b7       	in	r29, 0x3e	; 62
	return ICR1_REG;
    2088:	e6 e4       	ldi	r30, 0x46	; 70
    208a:	f0 e0       	ldi	r31, 0x00	; 0
    208c:	80 81       	ld	r24, Z
    208e:	91 81       	ldd	r25, Z+1	; 0x01
}
    2090:	cf 91       	pop	r28
    2092:	df 91       	pop	r29
    2094:	08 95       	ret

00002096 <TIMER1_SetInputCaptureEdgeDetection>:

void TIMER1_SetInputCaptureEdgeDetection(u8 trigger)
{
    2096:	df 93       	push	r29
    2098:	cf 93       	push	r28
    209a:	0f 92       	push	r0
    209c:	cd b7       	in	r28, 0x3d	; 61
    209e:	de b7       	in	r29, 0x3e	; 62
    20a0:	89 83       	std	Y+1, r24	; 0x01
	TCCR1B_REG->bits.ICES1_BIT = trigger;
    20a2:	ee e4       	ldi	r30, 0x4E	; 78
    20a4:	f0 e0       	ldi	r31, 0x00	; 0
    20a6:	89 81       	ldd	r24, Y+1	; 0x01
    20a8:	81 70       	andi	r24, 0x01	; 1
    20aa:	81 70       	andi	r24, 0x01	; 1
    20ac:	98 2f       	mov	r25, r24
    20ae:	92 95       	swap	r25
    20b0:	99 0f       	add	r25, r25
    20b2:	99 0f       	add	r25, r25
    20b4:	90 7c       	andi	r25, 0xC0	; 192
    20b6:	80 81       	ld	r24, Z
    20b8:	8f 7b       	andi	r24, 0xBF	; 191
    20ba:	89 2b       	or	r24, r25
    20bc:	80 83       	st	Z, r24
}
    20be:	0f 90       	pop	r0
    20c0:	cf 91       	pop	r28
    20c2:	df 91       	pop	r29
    20c4:	08 95       	ret

000020c6 <TIMER1_ClearTimerValue>:

void TIMER1_ClearTimerValue(void)
{
    20c6:	df 93       	push	r29
    20c8:	cf 93       	push	r28
    20ca:	cd b7       	in	r28, 0x3d	; 61
    20cc:	de b7       	in	r29, 0x3e	; 62
	TCNT1_REG = 0;
    20ce:	ec e4       	ldi	r30, 0x4C	; 76
    20d0:	f0 e0       	ldi	r31, 0x00	; 0
    20d2:	11 82       	std	Z+1, r1	; 0x01
    20d4:	10 82       	st	Z, r1
}
    20d6:	cf 91       	pop	r28
    20d8:	df 91       	pop	r29
    20da:	08 95       	ret

000020dc <__vector_9>:

ISR(TIMER1_OVF_vect)
{
    20dc:	1f 92       	push	r1
    20de:	0f 92       	push	r0
    20e0:	0f b6       	in	r0, 0x3f	; 63
    20e2:	0f 92       	push	r0
    20e4:	11 24       	eor	r1, r1
    20e6:	2f 93       	push	r18
    20e8:	3f 93       	push	r19
    20ea:	4f 93       	push	r20
    20ec:	5f 93       	push	r21
    20ee:	6f 93       	push	r22
    20f0:	7f 93       	push	r23
    20f2:	8f 93       	push	r24
    20f4:	9f 93       	push	r25
    20f6:	af 93       	push	r26
    20f8:	bf 93       	push	r27
    20fa:	ef 93       	push	r30
    20fc:	ff 93       	push	r31
    20fe:	df 93       	push	r29
    2100:	cf 93       	push	r28
    2102:	cd b7       	in	r28, 0x3d	; 61
    2104:	de b7       	in	r29, 0x3e	; 62
	/* For the delay func */

	timer1OverFlowCounter--;
    2106:	80 91 7a 01 	lds	r24, 0x017A
    210a:	90 91 7b 01 	lds	r25, 0x017B
    210e:	a0 91 7c 01 	lds	r26, 0x017C
    2112:	b0 91 7d 01 	lds	r27, 0x017D
    2116:	01 97       	sbiw	r24, 0x01	; 1
    2118:	a1 09       	sbc	r26, r1
    211a:	b1 09       	sbc	r27, r1
    211c:	80 93 7a 01 	sts	0x017A, r24
    2120:	90 93 7b 01 	sts	0x017B, r25
    2124:	a0 93 7c 01 	sts	0x017C, r26
    2128:	b0 93 7d 01 	sts	0x017D, r27

	if(timer1OverFlowCounter == 0)
    212c:	80 91 7a 01 	lds	r24, 0x017A
    2130:	90 91 7b 01 	lds	r25, 0x017B
    2134:	a0 91 7c 01 	lds	r26, 0x017C
    2138:	b0 91 7d 01 	lds	r27, 0x017D
    213c:	00 97       	sbiw	r24, 0x00	; 0
    213e:	a1 05       	cpc	r26, r1
    2140:	b1 05       	cpc	r27, r1
    2142:	51 f4       	brne	.+20     	; 0x2158 <__vector_9+0x7c>
	{
		TCNT1_REG = (TOP_VALUE - timer1RemCounter);
    2144:	ec e4       	ldi	r30, 0x4C	; 76
    2146:	f0 e0       	ldi	r31, 0x00	; 0
    2148:	80 91 7e 01 	lds	r24, 0x017E
    214c:	90 91 7f 01 	lds	r25, 0x017F
    2150:	80 95       	com	r24
    2152:	90 95       	com	r25
    2154:	91 83       	std	Z+1, r25	; 0x01
    2156:	80 83       	st	Z, r24
	}

	if((timer1PtrCallBack != NULL_PTR) && (timer1OverFlowCounter == -1))
    2158:	80 91 80 01 	lds	r24, 0x0180
    215c:	90 91 81 01 	lds	r25, 0x0181
    2160:	00 97       	sbiw	r24, 0x00	; 0
    2162:	a9 f0       	breq	.+42     	; 0x218e <__vector_9+0xb2>
    2164:	80 91 7a 01 	lds	r24, 0x017A
    2168:	90 91 7b 01 	lds	r25, 0x017B
    216c:	a0 91 7c 01 	lds	r26, 0x017C
    2170:	b0 91 7d 01 	lds	r27, 0x017D
    2174:	8f 3f       	cpi	r24, 0xFF	; 255
    2176:	2f ef       	ldi	r18, 0xFF	; 255
    2178:	92 07       	cpc	r25, r18
    217a:	2f ef       	ldi	r18, 0xFF	; 255
    217c:	a2 07       	cpc	r26, r18
    217e:	2f ef       	ldi	r18, 0xFF	; 255
    2180:	b2 07       	cpc	r27, r18
    2182:	29 f4       	brne	.+10     	; 0x218e <__vector_9+0xb2>
	{
		(*timer1PtrCallBack)();
    2184:	e0 91 80 01 	lds	r30, 0x0180
    2188:	f0 91 81 01 	lds	r31, 0x0181
    218c:	09 95       	icall
	}
}
    218e:	cf 91       	pop	r28
    2190:	df 91       	pop	r29
    2192:	ff 91       	pop	r31
    2194:	ef 91       	pop	r30
    2196:	bf 91       	pop	r27
    2198:	af 91       	pop	r26
    219a:	9f 91       	pop	r25
    219c:	8f 91       	pop	r24
    219e:	7f 91       	pop	r23
    21a0:	6f 91       	pop	r22
    21a2:	5f 91       	pop	r21
    21a4:	4f 91       	pop	r20
    21a6:	3f 91       	pop	r19
    21a8:	2f 91       	pop	r18
    21aa:	0f 90       	pop	r0
    21ac:	0f be       	out	0x3f, r0	; 63
    21ae:	0f 90       	pop	r0
    21b0:	1f 90       	pop	r1
    21b2:	18 95       	reti

000021b4 <__vector_6>:

ISR(TIMER1_CAPT_vect)
{
    21b4:	1f 92       	push	r1
    21b6:	0f 92       	push	r0
    21b8:	0f b6       	in	r0, 0x3f	; 63
    21ba:	0f 92       	push	r0
    21bc:	11 24       	eor	r1, r1
    21be:	2f 93       	push	r18
    21c0:	3f 93       	push	r19
    21c2:	4f 93       	push	r20
    21c4:	5f 93       	push	r21
    21c6:	6f 93       	push	r22
    21c8:	7f 93       	push	r23
    21ca:	8f 93       	push	r24
    21cc:	9f 93       	push	r25
    21ce:	af 93       	push	r26
    21d0:	bf 93       	push	r27
    21d2:	ef 93       	push	r30
    21d4:	ff 93       	push	r31
    21d6:	df 93       	push	r29
    21d8:	cf 93       	push	r28
    21da:	cd b7       	in	r28, 0x3d	; 61
    21dc:	de b7       	in	r29, 0x3e	; 62
	if(timer1PtrCallBack != NULL_PTR)
    21de:	80 91 80 01 	lds	r24, 0x0180
    21e2:	90 91 81 01 	lds	r25, 0x0181
    21e6:	00 97       	sbiw	r24, 0x00	; 0
    21e8:	29 f0       	breq	.+10     	; 0x21f4 <__vector_6+0x40>
	{
		(*timer1PtrCallBack)();
    21ea:	e0 91 80 01 	lds	r30, 0x0180
    21ee:	f0 91 81 01 	lds	r31, 0x0181
    21f2:	09 95       	icall
	}
}
    21f4:	cf 91       	pop	r28
    21f6:	df 91       	pop	r29
    21f8:	ff 91       	pop	r31
    21fa:	ef 91       	pop	r30
    21fc:	bf 91       	pop	r27
    21fe:	af 91       	pop	r26
    2200:	9f 91       	pop	r25
    2202:	8f 91       	pop	r24
    2204:	7f 91       	pop	r23
    2206:	6f 91       	pop	r22
    2208:	5f 91       	pop	r21
    220a:	4f 91       	pop	r20
    220c:	3f 91       	pop	r19
    220e:	2f 91       	pop	r18
    2210:	0f 90       	pop	r0
    2212:	0f be       	out	0x3f, r0	; 63
    2214:	0f 90       	pop	r0
    2216:	1f 90       	pop	r1
    2218:	18 95       	reti

0000221a <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
    221a:	1f 92       	push	r1
    221c:	0f 92       	push	r0
    221e:	0f b6       	in	r0, 0x3f	; 63
    2220:	0f 92       	push	r0
    2222:	11 24       	eor	r1, r1
    2224:	2f 93       	push	r18
    2226:	3f 93       	push	r19
    2228:	4f 93       	push	r20
    222a:	5f 93       	push	r21
    222c:	6f 93       	push	r22
    222e:	7f 93       	push	r23
    2230:	8f 93       	push	r24
    2232:	9f 93       	push	r25
    2234:	af 93       	push	r26
    2236:	bf 93       	push	r27
    2238:	ef 93       	push	r30
    223a:	ff 93       	push	r31
    223c:	df 93       	push	r29
    223e:	cf 93       	push	r28
    2240:	cd b7       	in	r28, 0x3d	; 61
    2242:	de b7       	in	r29, 0x3e	; 62
	if(timer1PtrCallBack != NULL_PTR)
    2244:	80 91 80 01 	lds	r24, 0x0180
    2248:	90 91 81 01 	lds	r25, 0x0181
    224c:	00 97       	sbiw	r24, 0x00	; 0
    224e:	29 f0       	breq	.+10     	; 0x225a <__vector_7+0x40>
	{
		(*timer1PtrCallBack)();
    2250:	e0 91 80 01 	lds	r30, 0x0180
    2254:	f0 91 81 01 	lds	r31, 0x0181
    2258:	09 95       	icall
	}
}
    225a:	cf 91       	pop	r28
    225c:	df 91       	pop	r29
    225e:	ff 91       	pop	r31
    2260:	ef 91       	pop	r30
    2262:	bf 91       	pop	r27
    2264:	af 91       	pop	r26
    2266:	9f 91       	pop	r25
    2268:	8f 91       	pop	r24
    226a:	7f 91       	pop	r23
    226c:	6f 91       	pop	r22
    226e:	5f 91       	pop	r21
    2270:	4f 91       	pop	r20
    2272:	3f 91       	pop	r19
    2274:	2f 91       	pop	r18
    2276:	0f 90       	pop	r0
    2278:	0f be       	out	0x3f, r0	; 63
    227a:	0f 90       	pop	r0
    227c:	1f 90       	pop	r1
    227e:	18 95       	reti

00002280 <__vector_8>:


ISR(TIMER1_COMPB_vect)
{
    2280:	1f 92       	push	r1
    2282:	0f 92       	push	r0
    2284:	0f b6       	in	r0, 0x3f	; 63
    2286:	0f 92       	push	r0
    2288:	11 24       	eor	r1, r1
    228a:	2f 93       	push	r18
    228c:	3f 93       	push	r19
    228e:	4f 93       	push	r20
    2290:	5f 93       	push	r21
    2292:	6f 93       	push	r22
    2294:	7f 93       	push	r23
    2296:	8f 93       	push	r24
    2298:	9f 93       	push	r25
    229a:	af 93       	push	r26
    229c:	bf 93       	push	r27
    229e:	ef 93       	push	r30
    22a0:	ff 93       	push	r31
    22a2:	df 93       	push	r29
    22a4:	cf 93       	push	r28
    22a6:	cd b7       	in	r28, 0x3d	; 61
    22a8:	de b7       	in	r29, 0x3e	; 62
	if(timer1PtrCallBack != NULL_PTR)
    22aa:	80 91 80 01 	lds	r24, 0x0180
    22ae:	90 91 81 01 	lds	r25, 0x0181
    22b2:	00 97       	sbiw	r24, 0x00	; 0
    22b4:	29 f0       	breq	.+10     	; 0x22c0 <__vector_8+0x40>
	{
		(*timer1PtrCallBack)();
    22b6:	e0 91 80 01 	lds	r30, 0x0180
    22ba:	f0 91 81 01 	lds	r31, 0x0181
    22be:	09 95       	icall
	}
}
    22c0:	cf 91       	pop	r28
    22c2:	df 91       	pop	r29
    22c4:	ff 91       	pop	r31
    22c6:	ef 91       	pop	r30
    22c8:	bf 91       	pop	r27
    22ca:	af 91       	pop	r26
    22cc:	9f 91       	pop	r25
    22ce:	8f 91       	pop	r24
    22d0:	7f 91       	pop	r23
    22d2:	6f 91       	pop	r22
    22d4:	5f 91       	pop	r21
    22d6:	4f 91       	pop	r20
    22d8:	3f 91       	pop	r19
    22da:	2f 91       	pop	r18
    22dc:	0f 90       	pop	r0
    22de:	0f be       	out	0x3f, r0	; 63
    22e0:	0f 90       	pop	r0
    22e2:	1f 90       	pop	r1
    22e4:	18 95       	reti

000022e6 <main>:
		0,
		0 };


int main()
{
    22e6:	ef 92       	push	r14
    22e8:	ff 92       	push	r15
    22ea:	0f 93       	push	r16
    22ec:	1f 93       	push	r17
    22ee:	df 93       	push	r29
    22f0:	cf 93       	push	r28
    22f2:	cd b7       	in	r28, 0x3d	; 61
    22f4:	de b7       	in	r29, 0x3e	; 62

	DIO_voidSetPinDirection(pPORTD, pin6, input);
    22f6:	80 91 77 01 	lds	r24, 0x0177
    22fa:	90 91 78 01 	lds	r25, 0x0178
    22fe:	66 e0       	ldi	r22, 0x06	; 6
    2300:	40 e0       	ldi	r20, 0x00	; 0
    2302:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(pPORTA, pin4, output);
    2306:	80 91 71 01 	lds	r24, 0x0171
    230a:	90 91 72 01 	lds	r25, 0x0172
    230e:	64 e0       	ldi	r22, 0x04	; 4
    2310:	41 e0       	ldi	r20, 0x01	; 1
    2312:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinDirection>

	TIMER1_Init(&config);
    2316:	88 e6       	ldi	r24, 0x68	; 104
    2318:	91 e0       	ldi	r25, 0x01	; 1
    231a:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <TIMER1_Init>
	//		TIMER1_SetCallBack(LED_On);
	//		TIMER1_SetDelayTimeMilliSec(&config, 1000);
	//		DIO_voidSetPinDirection(pPORTD, pin5, output);
	//		TIMER1_SetFastPWM(&config, 8);

	TIMER1_IntEnable(&config);
    231e:	88 e6       	ldi	r24, 0x68	; 104
    2320:	91 e0       	ldi	r25, 0x01	; 1
    2322:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <TIMER1_IntEnable>

	TIMER1_SetCallBack(APP_edgeProcessing);
    2326:	8e e1       	ldi	r24, 0x1E	; 30
    2328:	92 e1       	ldi	r25, 0x12	; 18
    232a:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <TIMER1_SetCallBack>
	//TIMER1_GetSignalFrequency();
	TIMER1_GetSignalDutyCycle();
    232e:	0e 94 26 10 	call	0x204c	; 0x204c <TIMER1_GetSignalDutyCycle>
	GIE_Enable();
    2332:	0e 94 b7 06 	call	0xd6e	; 0xd6e <GIE_Enable>
	TIMER1_Start(&config);
    2336:	88 e6       	ldi	r24, 0x68	; 104
    2338:	91 e0       	ldi	r25, 0x01	; 1
    233a:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <TIMER1_Start>

	while(1)
	{
		if(g_edgeCount == 4)
    233e:	80 91 82 01 	lds	r24, 0x0182
    2342:	84 30       	cpi	r24, 0x04	; 4
    2344:	09 f0       	breq	.+2      	; 0x2348 <main+0x62>
    2346:	69 c0       	rjmp	.+210    	; 0x241a <main+0x134>
		{
			TIMER1_IntDisable(&config); /* Disable timer Interrupts */
    2348:	88 e6       	ldi	r24, 0x68	; 104
    234a:	91 e0       	ldi	r25, 0x01	; 1
    234c:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <TIMER1_IntDisable>
			GIE_Disable();
    2350:	0e 94 c5 06 	call	0xd8a	; 0xd8a <GIE_Disable>
			g_edgeCount = 0;
    2354:	10 92 82 01 	sts	0x0182, r1
			/* calculate the freq */
			freq = 1000000 / (g_timePeriodPlusHigh - g_timeHigh);;
    2358:	20 91 87 01 	lds	r18, 0x0187
    235c:	30 91 88 01 	lds	r19, 0x0188
    2360:	80 91 83 01 	lds	r24, 0x0183
    2364:	90 91 84 01 	lds	r25, 0x0184
    2368:	a9 01       	movw	r20, r18
    236a:	48 1b       	sub	r20, r24
    236c:	59 0b       	sbc	r21, r25
    236e:	ca 01       	movw	r24, r20
    2370:	9c 01       	movw	r18, r24
    2372:	40 e0       	ldi	r20, 0x00	; 0
    2374:	50 e0       	ldi	r21, 0x00	; 0
    2376:	80 e4       	ldi	r24, 0x40	; 64
    2378:	92 e4       	ldi	r25, 0x42	; 66
    237a:	af e0       	ldi	r26, 0x0F	; 15
    237c:	b0 e0       	ldi	r27, 0x00	; 0
    237e:	bc 01       	movw	r22, r24
    2380:	cd 01       	movw	r24, r26
    2382:	0e 94 b4 12 	call	0x2568	; 0x2568 <__divmodsi4>
    2386:	da 01       	movw	r26, r20
    2388:	c9 01       	movw	r24, r18
    238a:	90 93 8c 01 	sts	0x018C, r25
    238e:	80 93 8b 01 	sts	0x018B, r24
			duty  = ((f32)(g_timePeriodPlusHigh-g_timePeriod) / (g_timePeriodPlusHigh - g_timeHigh)) * 100;
    2392:	20 91 87 01 	lds	r18, 0x0187
    2396:	30 91 88 01 	lds	r19, 0x0188
    239a:	80 91 85 01 	lds	r24, 0x0185
    239e:	90 91 86 01 	lds	r25, 0x0186
    23a2:	a9 01       	movw	r20, r18
    23a4:	48 1b       	sub	r20, r24
    23a6:	59 0b       	sbc	r21, r25
    23a8:	ca 01       	movw	r24, r20
    23aa:	cc 01       	movw	r24, r24
    23ac:	a0 e0       	ldi	r26, 0x00	; 0
    23ae:	b0 e0       	ldi	r27, 0x00	; 0
    23b0:	bc 01       	movw	r22, r24
    23b2:	cd 01       	movw	r24, r26
    23b4:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    23b8:	7b 01       	movw	r14, r22
    23ba:	8c 01       	movw	r16, r24
    23bc:	20 91 87 01 	lds	r18, 0x0187
    23c0:	30 91 88 01 	lds	r19, 0x0188
    23c4:	80 91 83 01 	lds	r24, 0x0183
    23c8:	90 91 84 01 	lds	r25, 0x0184
    23cc:	a9 01       	movw	r20, r18
    23ce:	48 1b       	sub	r20, r24
    23d0:	59 0b       	sbc	r21, r25
    23d2:	ca 01       	movw	r24, r20
    23d4:	cc 01       	movw	r24, r24
    23d6:	a0 e0       	ldi	r26, 0x00	; 0
    23d8:	b0 e0       	ldi	r27, 0x00	; 0
    23da:	bc 01       	movw	r22, r24
    23dc:	cd 01       	movw	r24, r26
    23de:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    23e2:	9b 01       	movw	r18, r22
    23e4:	ac 01       	movw	r20, r24
    23e6:	c8 01       	movw	r24, r16
    23e8:	b7 01       	movw	r22, r14
    23ea:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    23ee:	dc 01       	movw	r26, r24
    23f0:	cb 01       	movw	r24, r22
    23f2:	bc 01       	movw	r22, r24
    23f4:	cd 01       	movw	r24, r26
    23f6:	20 e0       	ldi	r18, 0x00	; 0
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	48 ec       	ldi	r20, 0xC8	; 200
    23fc:	52 e4       	ldi	r21, 0x42	; 66
    23fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2402:	dc 01       	movw	r26, r24
    2404:	cb 01       	movw	r24, r22
    2406:	bc 01       	movw	r22, r24
    2408:	cd 01       	movw	r24, r26
    240a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    240e:	dc 01       	movw	r26, r24
    2410:	cb 01       	movw	r24, r22
    2412:	90 93 8a 01 	sts	0x018A, r25
    2416:	80 93 89 01 	sts	0x0189, r24
		}
		if((duty == 51))
    241a:	80 91 89 01 	lds	r24, 0x0189
    241e:	90 91 8a 01 	lds	r25, 0x018A
    2422:	83 33       	cpi	r24, 0x33	; 51
    2424:	91 05       	cpc	r25, r1
    2426:	09 f0       	breq	.+2      	; 0x242a <main+0x144>
    2428:	8a cf       	rjmp	.-236    	; 0x233e <main+0x58>
		{
			DIO_voidSetPinValue(pPORTA, pin4, LOGIC_HIGH);
    242a:	80 91 71 01 	lds	r24, 0x0171
    242e:	90 91 72 01 	lds	r25, 0x0172
    2432:	64 e0       	ldi	r22, 0x04	; 4
    2434:	41 e0       	ldi	r20, 0x01	; 1
    2436:	0e 94 87 07 	call	0xf0e	; 0xf0e <DIO_voidSetPinValue>
    243a:	81 cf       	rjmp	.-254    	; 0x233e <main+0x58>

0000243c <APP_edgeProcessing>:

}

/* This is the call-back function */
void APP_edgeProcessing(void)
{
    243c:	df 93       	push	r29
    243e:	cf 93       	push	r28
    2440:	cd b7       	in	r28, 0x3d	; 61
    2442:	de b7       	in	r29, 0x3e	; 62
	g_edgeCount++;
    2444:	80 91 82 01 	lds	r24, 0x0182
    2448:	8f 5f       	subi	r24, 0xFF	; 255
    244a:	80 93 82 01 	sts	0x0182, r24

	if(g_edgeCount == 1)
    244e:	80 91 82 01 	lds	r24, 0x0182
    2452:	81 30       	cpi	r24, 0x01	; 1
    2454:	31 f4       	brne	.+12     	; 0x2462 <APP_edgeProcessing+0x26>
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		TIMER1_ClearTimerValue();
    2456:	0e 94 63 10 	call	0x20c6	; 0x20c6 <TIMER1_ClearTimerValue>
		/* Detect falling edge */
		TIMER1_SetInputCaptureEdgeDetection(FALLING_EDGE);
    245a:	80 e0       	ldi	r24, 0x00	; 0
    245c:	0e 94 4b 10 	call	0x2096	; 0x2096 <TIMER1_SetInputCaptureEdgeDetection>
    2460:	2b c0       	rjmp	.+86     	; 0x24b8 <APP_edgeProcessing+0x7c>
	}
	else if(g_edgeCount == 2)
    2462:	80 91 82 01 	lds	r24, 0x0182
    2466:	82 30       	cpi	r24, 0x02	; 2
    2468:	51 f4       	brne	.+20     	; 0x247e <APP_edgeProcessing+0x42>
	{
		/* Store the High time value */
		g_timeHigh = TIMER1_GetInputCaptureValue();
    246a:	0e 94 40 10 	call	0x2080	; 0x2080 <TIMER1_GetInputCaptureValue>
    246e:	90 93 84 01 	sts	0x0184, r25
    2472:	80 93 83 01 	sts	0x0183, r24
		/* Detect rising edge */
		TIMER1_SetInputCaptureEdgeDetection(RISING_EDGE);
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	0e 94 4b 10 	call	0x2096	; 0x2096 <TIMER1_SetInputCaptureEdgeDetection>
    247c:	1d c0       	rjmp	.+58     	; 0x24b8 <APP_edgeProcessing+0x7c>
	}
	else if(g_edgeCount == 3)
    247e:	80 91 82 01 	lds	r24, 0x0182
    2482:	83 30       	cpi	r24, 0x03	; 3
    2484:	51 f4       	brne	.+20     	; 0x249a <APP_edgeProcessing+0x5e>
	{
		/* Store the Period time value */
		g_timePeriod = TIMER1_GetInputCaptureValue();
    2486:	0e 94 40 10 	call	0x2080	; 0x2080 <TIMER1_GetInputCaptureValue>
    248a:	90 93 86 01 	sts	0x0186, r25
    248e:	80 93 85 01 	sts	0x0185, r24
		/* Detect falling edge */
		TIMER1_SetInputCaptureEdgeDetection(FALLING_EDGE);
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	0e 94 4b 10 	call	0x2096	; 0x2096 <TIMER1_SetInputCaptureEdgeDetection>
    2498:	0f c0       	rjmp	.+30     	; 0x24b8 <APP_edgeProcessing+0x7c>
	}
	else if(g_edgeCount == 4)
    249a:	80 91 82 01 	lds	r24, 0x0182
    249e:	84 30       	cpi	r24, 0x04	; 4
    24a0:	59 f4       	brne	.+22     	; 0x24b8 <APP_edgeProcessing+0x7c>
	{
		/* Store the Period time value + High time value */
		g_timePeriodPlusHigh = TIMER1_GetInputCaptureValue();
    24a2:	0e 94 40 10 	call	0x2080	; 0x2080 <TIMER1_GetInputCaptureValue>
    24a6:	90 93 88 01 	sts	0x0188, r25
    24aa:	80 93 87 01 	sts	0x0187, r24
		/* Clear the timer counter register to start measurements again */
		TIMER1_ClearTimerValue();
    24ae:	0e 94 63 10 	call	0x20c6	; 0x20c6 <TIMER1_ClearTimerValue>
		/* Detect rising edge */
		TIMER1_SetInputCaptureEdgeDetection(RISING_EDGE);
    24b2:	81 e0       	ldi	r24, 0x01	; 1
    24b4:	0e 94 4b 10 	call	0x2096	; 0x2096 <TIMER1_SetInputCaptureEdgeDetection>
	}
}
    24b8:	cf 91       	pop	r28
    24ba:	df 91       	pop	r29
    24bc:	08 95       	ret

000024be <__mulsi3>:
    24be:	62 9f       	mul	r22, r18
    24c0:	d0 01       	movw	r26, r0
    24c2:	73 9f       	mul	r23, r19
    24c4:	f0 01       	movw	r30, r0
    24c6:	82 9f       	mul	r24, r18
    24c8:	e0 0d       	add	r30, r0
    24ca:	f1 1d       	adc	r31, r1
    24cc:	64 9f       	mul	r22, r20
    24ce:	e0 0d       	add	r30, r0
    24d0:	f1 1d       	adc	r31, r1
    24d2:	92 9f       	mul	r25, r18
    24d4:	f0 0d       	add	r31, r0
    24d6:	83 9f       	mul	r24, r19
    24d8:	f0 0d       	add	r31, r0
    24da:	74 9f       	mul	r23, r20
    24dc:	f0 0d       	add	r31, r0
    24de:	65 9f       	mul	r22, r21
    24e0:	f0 0d       	add	r31, r0
    24e2:	99 27       	eor	r25, r25
    24e4:	72 9f       	mul	r23, r18
    24e6:	b0 0d       	add	r27, r0
    24e8:	e1 1d       	adc	r30, r1
    24ea:	f9 1f       	adc	r31, r25
    24ec:	63 9f       	mul	r22, r19
    24ee:	b0 0d       	add	r27, r0
    24f0:	e1 1d       	adc	r30, r1
    24f2:	f9 1f       	adc	r31, r25
    24f4:	bd 01       	movw	r22, r26
    24f6:	cf 01       	movw	r24, r30
    24f8:	11 24       	eor	r1, r1
    24fa:	08 95       	ret

000024fc <__udivmodhi4>:
    24fc:	aa 1b       	sub	r26, r26
    24fe:	bb 1b       	sub	r27, r27
    2500:	51 e1       	ldi	r21, 0x11	; 17
    2502:	07 c0       	rjmp	.+14     	; 0x2512 <__udivmodhi4_ep>

00002504 <__udivmodhi4_loop>:
    2504:	aa 1f       	adc	r26, r26
    2506:	bb 1f       	adc	r27, r27
    2508:	a6 17       	cp	r26, r22
    250a:	b7 07       	cpc	r27, r23
    250c:	10 f0       	brcs	.+4      	; 0x2512 <__udivmodhi4_ep>
    250e:	a6 1b       	sub	r26, r22
    2510:	b7 0b       	sbc	r27, r23

00002512 <__udivmodhi4_ep>:
    2512:	88 1f       	adc	r24, r24
    2514:	99 1f       	adc	r25, r25
    2516:	5a 95       	dec	r21
    2518:	a9 f7       	brne	.-22     	; 0x2504 <__udivmodhi4_loop>
    251a:	80 95       	com	r24
    251c:	90 95       	com	r25
    251e:	bc 01       	movw	r22, r24
    2520:	cd 01       	movw	r24, r26
    2522:	08 95       	ret

00002524 <__udivmodsi4>:
    2524:	a1 e2       	ldi	r26, 0x21	; 33
    2526:	1a 2e       	mov	r1, r26
    2528:	aa 1b       	sub	r26, r26
    252a:	bb 1b       	sub	r27, r27
    252c:	fd 01       	movw	r30, r26
    252e:	0d c0       	rjmp	.+26     	; 0x254a <__udivmodsi4_ep>

00002530 <__udivmodsi4_loop>:
    2530:	aa 1f       	adc	r26, r26
    2532:	bb 1f       	adc	r27, r27
    2534:	ee 1f       	adc	r30, r30
    2536:	ff 1f       	adc	r31, r31
    2538:	a2 17       	cp	r26, r18
    253a:	b3 07       	cpc	r27, r19
    253c:	e4 07       	cpc	r30, r20
    253e:	f5 07       	cpc	r31, r21
    2540:	20 f0       	brcs	.+8      	; 0x254a <__udivmodsi4_ep>
    2542:	a2 1b       	sub	r26, r18
    2544:	b3 0b       	sbc	r27, r19
    2546:	e4 0b       	sbc	r30, r20
    2548:	f5 0b       	sbc	r31, r21

0000254a <__udivmodsi4_ep>:
    254a:	66 1f       	adc	r22, r22
    254c:	77 1f       	adc	r23, r23
    254e:	88 1f       	adc	r24, r24
    2550:	99 1f       	adc	r25, r25
    2552:	1a 94       	dec	r1
    2554:	69 f7       	brne	.-38     	; 0x2530 <__udivmodsi4_loop>
    2556:	60 95       	com	r22
    2558:	70 95       	com	r23
    255a:	80 95       	com	r24
    255c:	90 95       	com	r25
    255e:	9b 01       	movw	r18, r22
    2560:	ac 01       	movw	r20, r24
    2562:	bd 01       	movw	r22, r26
    2564:	cf 01       	movw	r24, r30
    2566:	08 95       	ret

00002568 <__divmodsi4>:
    2568:	97 fb       	bst	r25, 7
    256a:	09 2e       	mov	r0, r25
    256c:	05 26       	eor	r0, r21
    256e:	0e d0       	rcall	.+28     	; 0x258c <__divmodsi4_neg1>
    2570:	57 fd       	sbrc	r21, 7
    2572:	04 d0       	rcall	.+8      	; 0x257c <__divmodsi4_neg2>
    2574:	d7 df       	rcall	.-82     	; 0x2524 <__udivmodsi4>
    2576:	0a d0       	rcall	.+20     	; 0x258c <__divmodsi4_neg1>
    2578:	00 1c       	adc	r0, r0
    257a:	38 f4       	brcc	.+14     	; 0x258a <__divmodsi4_exit>

0000257c <__divmodsi4_neg2>:
    257c:	50 95       	com	r21
    257e:	40 95       	com	r20
    2580:	30 95       	com	r19
    2582:	21 95       	neg	r18
    2584:	3f 4f       	sbci	r19, 0xFF	; 255
    2586:	4f 4f       	sbci	r20, 0xFF	; 255
    2588:	5f 4f       	sbci	r21, 0xFF	; 255

0000258a <__divmodsi4_exit>:
    258a:	08 95       	ret

0000258c <__divmodsi4_neg1>:
    258c:	f6 f7       	brtc	.-4      	; 0x258a <__divmodsi4_exit>
    258e:	90 95       	com	r25
    2590:	80 95       	com	r24
    2592:	70 95       	com	r23
    2594:	61 95       	neg	r22
    2596:	7f 4f       	sbci	r23, 0xFF	; 255
    2598:	8f 4f       	sbci	r24, 0xFF	; 255
    259a:	9f 4f       	sbci	r25, 0xFF	; 255
    259c:	08 95       	ret

0000259e <__prologue_saves__>:
    259e:	2f 92       	push	r2
    25a0:	3f 92       	push	r3
    25a2:	4f 92       	push	r4
    25a4:	5f 92       	push	r5
    25a6:	6f 92       	push	r6
    25a8:	7f 92       	push	r7
    25aa:	8f 92       	push	r8
    25ac:	9f 92       	push	r9
    25ae:	af 92       	push	r10
    25b0:	bf 92       	push	r11
    25b2:	cf 92       	push	r12
    25b4:	df 92       	push	r13
    25b6:	ef 92       	push	r14
    25b8:	ff 92       	push	r15
    25ba:	0f 93       	push	r16
    25bc:	1f 93       	push	r17
    25be:	cf 93       	push	r28
    25c0:	df 93       	push	r29
    25c2:	cd b7       	in	r28, 0x3d	; 61
    25c4:	de b7       	in	r29, 0x3e	; 62
    25c6:	ca 1b       	sub	r28, r26
    25c8:	db 0b       	sbc	r29, r27
    25ca:	0f b6       	in	r0, 0x3f	; 63
    25cc:	f8 94       	cli
    25ce:	de bf       	out	0x3e, r29	; 62
    25d0:	0f be       	out	0x3f, r0	; 63
    25d2:	cd bf       	out	0x3d, r28	; 61
    25d4:	09 94       	ijmp

000025d6 <__epilogue_restores__>:
    25d6:	2a 88       	ldd	r2, Y+18	; 0x12
    25d8:	39 88       	ldd	r3, Y+17	; 0x11
    25da:	48 88       	ldd	r4, Y+16	; 0x10
    25dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    25de:	6e 84       	ldd	r6, Y+14	; 0x0e
    25e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    25e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    25e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    25e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    25e8:	b9 84       	ldd	r11, Y+9	; 0x09
    25ea:	c8 84       	ldd	r12, Y+8	; 0x08
    25ec:	df 80       	ldd	r13, Y+7	; 0x07
    25ee:	ee 80       	ldd	r14, Y+6	; 0x06
    25f0:	fd 80       	ldd	r15, Y+5	; 0x05
    25f2:	0c 81       	ldd	r16, Y+4	; 0x04
    25f4:	1b 81       	ldd	r17, Y+3	; 0x03
    25f6:	aa 81       	ldd	r26, Y+2	; 0x02
    25f8:	b9 81       	ldd	r27, Y+1	; 0x01
    25fa:	ce 0f       	add	r28, r30
    25fc:	d1 1d       	adc	r29, r1
    25fe:	0f b6       	in	r0, 0x3f	; 63
    2600:	f8 94       	cli
    2602:	de bf       	out	0x3e, r29	; 62
    2604:	0f be       	out	0x3f, r0	; 63
    2606:	cd bf       	out	0x3d, r28	; 61
    2608:	ed 01       	movw	r28, r26
    260a:	08 95       	ret

0000260c <_exit>:
    260c:	f8 94       	cli

0000260e <__stop_program>:
    260e:	ff cf       	rjmp	.-2      	; 0x260e <__stop_program>
